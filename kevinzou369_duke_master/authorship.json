[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"# Duke.Duke project template","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kevinzou369"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kevinzou369":2,"-":22}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"package Duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"kevinzou369"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kevinzou369"},"content":"    protected String by;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kevinzou369"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kevinzou369"},"content":"        super(description);","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kevinzou369"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kevinzou369"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kevinzou369"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kevinzou369"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kevinzou369"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kevinzou369":15}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"package Duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"kevinzou369"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"kevinzou369"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kevinzou369"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"kevinzou369"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"kevinzou369"},"content":"        System.out.println(\"Hello! I\u0027m Duke.Duke\" + System.lineSeparator() + \"What can I do for you?\");","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"kevinzou369"},"content":"        String dataIn;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"kevinzou369"},"content":"        //int index \u003d 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kevinzou369"},"content":"        //String temp;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kevinzou369"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kevinzou369"},"content":"       //String arry[];","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kevinzou369"},"content":"        ArrayList\u003cTask\u003e arry \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kevinzou369"},"content":"        //arry \u003d new String[100];","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kevinzou369"},"content":"        String exit \u003d \"bye\";","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"kevinzou369"},"content":"        String show \u003d \"list\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"kevinzou369"},"content":"        String done \u003d \"done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kevinzou369"},"content":"        String todo \u003d \"todo\";","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kevinzou369"},"content":"        String deadline \u003d \"deadline\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kevinzou369"},"content":"        String event \u003d \"event\";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kevinzou369"},"content":"        String delete \u003d \"delete\";","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"kevinzou369"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"kevinzou369"},"content":"        //for (int i \u003d 0; i \u003c arry.size(); i++)","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kevinzou369"},"content":"        do {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kevinzou369"},"content":"            dataIn \u003d scan.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"kevinzou369"},"content":"            if (dataIn.equals(exit)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"kevinzou369"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"kevinzou369"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"kevinzou369"},"content":"            }else if (dataIn.equals(show)){","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"kevinzou369"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kevinzou369"},"content":"                for (int j \u003d 0; j \u003c arry.size(); j++){","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(j + 1 + \".\" + arry.get(j).toString().substring(0,3) + \"[\" + arry.get(j).getStatusIcon() + \"] \" + arry.get(j).toString().substring(7));","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"kevinzou369"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"kevinzou369"},"content":"            }else if (dataIn.contains(done)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"kevinzou369"},"content":"                try {","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"kevinzou369"},"content":"                    Integer num \u003d Integer.parseInt(dataIn.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"kevinzou369"},"content":"                    arry.get(num - 1).markAsDone();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"kevinzou369"},"content":"                    //arry[num-1] \u003d arry[num-1].substring(0,4) + \"X\" + arry[num-1].substring(5);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"kevinzou369"},"content":"                    //System.out.println(\"  \" + arry[num-1].substring(3));","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"  [\" + arry.get(num - 1).getStatusIcon() + \"] \" + arry.get(num - 1).getDescription());","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"kevinzou369"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"☹ OOPS!!! The index of a done cannot be empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"kevinzou369"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"kevinzou369"},"content":"            }else if (dataIn.contains(todo)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"kevinzou369"},"content":"                try {","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"kevinzou369"},"content":"                    Task t \u003d new Todo(dataIn.substring(5));","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"kevinzou369"},"content":"                    arry.add(t);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"kevinzou369"},"content":"                    count++;","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"  \" + arry.get(count - 1).toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Now you have \" + arry.size() + \" tasks in the list.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"kevinzou369"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"kevinzou369"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"kevinzou369"},"content":"            }else if (dataIn.contains(deadline)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"kevinzou369"},"content":"                try {","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"kevinzou369"},"content":"                    int idx \u003d dataIn.indexOf(\"/\");","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"kevinzou369"},"content":"                    Task t \u003d new Deadline(dataIn.substring(9, idx - 1), dataIn.substring(idx + 4));","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"kevinzou369"},"content":"                    arry.add(t);","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"kevinzou369"},"content":"                    count++;","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"  \" + arry.get(count - 1).toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Now you have \" + arry.size() + \" tasks in the list.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"kevinzou369"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"kevinzou369"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"kevinzou369"},"content":"            }else if (dataIn.contains(event)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"kevinzou369"},"content":"                try {","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"kevinzou369"},"content":"                    int idx \u003d dataIn.indexOf(\"/\");","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"kevinzou369"},"content":"                    Task t \u003d new Event(dataIn.substring(6, idx - 1), dataIn.substring(idx + 4));","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"kevinzou369"},"content":"                    arry.add(t);","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"kevinzou369"},"content":"                    count++;","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"  \" + arry.get(count - 1).toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Now you have \" + arry.size() + \" tasks in the list.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"kevinzou369"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"kevinzou369"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"kevinzou369"},"content":"            }else if (dataIn.contains(delete)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"kevinzou369"},"content":"                try {","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"kevinzou369"},"content":"                    Integer num \u003d Integer.parseInt(dataIn.replaceAll(\"[\\\\D]\", \"\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"kevinzou369"},"content":"                    count--;","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"  \" + arry.get(num-1).toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"kevinzou369"},"content":"                    arry.remove(num-1);","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"Now you have \" + arry.size() + \" tasks in the list.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"kevinzou369"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"kevinzou369"},"content":"                    System.out.println(\"☹ OOPS!!! The index of a delete cannot be empty.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"kevinzou369"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"kevinzou369"},"content":"            }else{","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"kevinzou369"},"content":"                //arry[i] \u003d \"[ ][ ] \" + dataIn;","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"kevinzou369"},"content":"                //count++;","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"kevinzou369"},"content":"                //System.out.println(\"added: \" + arry[i].substring(7));","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"kevinzou369"},"content":"                //Duke.Task t \u003d new Duke.Task(dataIn);","lastModifiedDate":"2021-11-09"},{"lineNumber":106,"author":{"gitId":"kevinzou369"},"content":"                //arry.add(t);","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"kevinzou369"},"content":"                //count++;","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"kevinzou369"},"content":"                //System.out.println(\"added: \" + arry.get(arry.size()-1).getDescription());","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"kevinzou369"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"kevinzou369"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"kevinzou369"},"content":"        }while(!dataIn.equals(exit));","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kevinzou369":103,"-":10}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"package Duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"kevinzou369"},"content":"public class Event extends Task {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kevinzou369"},"content":"    protected String at;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kevinzou369"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kevinzou369"},"content":"        super(description);","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kevinzou369"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kevinzou369"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kevinzou369"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kevinzou369"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kevinzou369"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kevinzou369":15}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"package Duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"kevinzou369"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kevinzou369"},"content":"public class Task {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kevinzou369"},"content":"    protected String description;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kevinzou369"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kevinzou369"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kevinzou369"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kevinzou369"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kevinzou369"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kevinzou369"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kevinzou369"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kevinzou369"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kevinzou369"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kevinzou369"},"content":"        return this.description;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"kevinzou369"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"kevinzou369"},"content":"    public String toString(){","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"kevinzou369"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"kevinzou369"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kevinzou369":30}},{"path":"src/main/java/Duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"package Duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"kevinzou369"},"content":"public enum TaskType {","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kevinzou369"},"content":"    T, D, E","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kevinzou369"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kevinzou369":5}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinzou369"},"content":"package Duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"kevinzou369"},"content":"import Duke.Task;","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"kevinzou369"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kevinzou369"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kevinzou369"},"content":"        super(description);","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kevinzou369"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kevinzou369"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kevinzou369"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kevinzou369"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kevinzou369"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kevinzou369"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kevinzou369":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kevinzou369"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.Duke.java","lastModifiedDate":"2021-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kevinzou369"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kevinzou369":2,"-":19}}]
