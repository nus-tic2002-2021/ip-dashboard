[{"path":"data/Storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"D | 1 | return book | D","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"D | 0 | submit homework | D","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"E | 0 | meeting | E","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"E | 0 | discussion for project | E","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":4}},{"path":"docs/Commands for Test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"list","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"todo","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"todo borrow book","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"deadline ","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"list","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"event","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"event meeting /at 6th Nov 2pm-3pm","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"event discussion for project /at 5th Oct 5pm-7pm","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"list","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"done 1","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"done 2","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"delete 1","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"find book","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"find apple","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"find project","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"find discussion","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"list ","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"bye","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"# Duke","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"This is a chatbot which is build by using Java. ","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"## User Guide","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"User will required to input their to-dos, deadline or event to their schedule. User can refer to the guidance for the template to be input.","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"### Error Handling","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"Duke is able to deal with errors such as incorrect inputs entered by the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"### Assertions","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"document important assumptions that should hold at various points in the code.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"### Object Orientated Programming (OOP)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"Refactor the code to extract out closely related code as classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"### todo","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"description\t\t: return error message as there is no to-do task in the input.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: ☹ OOPS!!! The description of a todo cannot be empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"### todo borrow book","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"description\t\t: to input task (borrow book) without any date/time attached to it.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"       \t\t\t  [T][ ] borrow book","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"     \t\t\t  Now you have 5 tasks in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"### list ","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"description\t\t: display out all the existing task that already input to the user when requested.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Here are the tasks in your list:","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"     \t\t\t  1.[T] borrow book","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"### deadline ","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"description\t\t: return error message as there is no date or time details after deadline description.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: ☹ OOPS!!! The description of a todo cannot be empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"### deadline return book /by Sunday","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"description\t\t: to input task (return book) that need to be done before Sunday.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"       \t\t\t  [D][ ] return book (by: Sunday)","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"     \t\t\t  Now you have 2 tasks in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"### deadline do homework /by no idea :-p","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"description\t\t: to input task (do homework) that need to be done before no idea :-p.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"       \t\t\t  [D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"     \t\t\t  Now you have 3 tasks in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"### deadline submit homework /by 2021-11-13 23:00","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"description\t\t: to input task (submit homework) that need to be done before 13 November 2021, 11pm.","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"       \t\t\t  [D][ ] submit homework (by: 13th of November 2021, 11pm)","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"     \t\t\t  Now you have 4 tasks in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"### event ","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"description\t\t: return error message as there is no date or time details after event description. ","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: ☹ OOPS!!! The description of an event cannot be empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"Qmin46"},"content":"### event meeting /at Mon 2pm-4pm","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Qmin46"},"content":"description\t\t: to input task (event meeting) that start at 2pm and ends at 3pm.","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Qmin46"},"content":"       \t\t\t  [E][ ] borrow book (at: Mon 2-4pm)","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"Qmin46"},"content":"     \t\t\t  Now you have 5 tasks in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"Qmin46"},"content":"### done 1","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"Qmin46"},"content":"description\t\t: mark task no.1 as done.","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"Qmin46"},"content":"       \t\t\t  [X] borrow book","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"Qmin46"},"content":"### delete 1","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"Qmin46"},"content":"description\t\t: delete the task no. 1 from the schedule.","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"Qmin46"},"content":" \t\t\t  [T][X] borrow book","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"Qmin46"},"content":"### bye","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"Qmin46"},"content":"description\t\t: exit the chatbot, Duke","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"Qmin46"},"content":"expected outcome\t: Bye. Hope to see you again soon!","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":66,"-":15}},{"path":"src/main/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"    private Label dialog;","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"    private void flip() {","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"        db.flip();","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"        return db;","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":60}},{"path":"src/main/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import main.duke.command.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import main.duke.task.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import main.duke.ui.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"import java.io.File;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":" * A duke class to run the chatbot.","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"public class Duke {","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    public static void Proceed() {","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"        Parser.Command();","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"        System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"    public static void RunDuke() {","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"            boolean isSuccess \u003d false;","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"            File StorageFile \u003d Storage.openFile();","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"           // Storage.ReadFileToArray(StorageFile);","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"            isSuccess \u003d true;","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"        }catch (DukeException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"            e.printErrMsg();","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"        Ui.WelcomeDuke();","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"        Ui.Greet();","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"        RunDuke();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"        Proceed();","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"            Storage.writeToFile(Storage.openFile());","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"            System.out.println(\"Failed to write to file\");","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"    public String reply(String input) {","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"            Parser.Command();","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"            return input;","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":52}},{"path":"src/main/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"    protected String errMsg;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"    public DukeException() {","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"        this.errMsg \u003d \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"    public DukeException(String invalid) {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"        this.errMsg \u003d invalid;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"    public void printErrMsg() {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"        System.out.println(errMsg);","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":18}},{"path":"src/main/duke/DukeExceptionMeaning.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"public class DukeExceptionMeaning extends Exception{","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":4}},{"path":"src/main/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"public class Launcher {","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":12}},{"path":"src/main/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"public class Main extends Application {","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"            stage.show();","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":30}},{"path":"src/main/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"    private TextField userInput;","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"    private Button sendButton;","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"    private Duke duke;","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"    public void initialize() {","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"        duke \u003d d;","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"    @FXML","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"        String response \u003d duke.reply(input);","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"        );","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"        userInput.clear();","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":52}},{"path":"src/main/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.command;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"import main.duke.DukeExceptionMeaning;","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import main.duke.task.Deadline;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import main.duke.task.Event;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import main.duke.task.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"import main.duke.task.ToDo;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"import main.duke.ui.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eParser\u003c/code\u003e deals with making sense of the user command.","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"public class Parser {","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"    static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"    public static void Command() {","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"        Boolean stop \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"            while (!stop) {","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"                String input \u003d in.nextLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"                    Ui.Echo();","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"                    stop \u003d true;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"                } else if (input.equals(\"guide\")){","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"                    Ui.Guide();","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"                else if (input.equals(\"list\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"                    TaskList.printCheckList();","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"                } else if (input.contains(\"todo\") \u0026\u0026 (input.substring(0, 4)).equals(\"todo\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"                    if (input.length() \u003c 5 || input.substring(4).trim().equals(\"\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"                        System.out.println(Ui.line + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" + Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"                    } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"                        String newTask \u003d input.substring(4).trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"                        ToDo newTodo \u003d new ToDo(newTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"                        TaskList.addTask(newTodo);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"                        TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"                        System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"                    }","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"                } else if (input.contains(\"deadline\") \u0026\u0026 (input.substring(0, 8)).equals(\"deadline\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"                    if (input.contains(\"/by\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"                        String[] parts \u003d input.substring(8).split(\"/by\");","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"                        String[] dateTime \u003d parts[1].trim().split(\" \");","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"                        String[] split \u003d dateTime[0].split(\"/\");","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"                        if (checkDateValidity(split)) {","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"                            LocalDate taskDate \u003d formatDate(split);","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"                            if (dateTime.length \u003d\u003d 2 \u0026\u0026 checkTimeValidity(split[1])) {","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"                                LocalTime taskTime \u003d formatTime(dateTime[1]);","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"                                Deadline newDeadline \u003d new Deadline(parts[0].trim(), taskDate, taskTime);","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"                                TaskList.addTask(newDeadline);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"                                TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"                                System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"                            } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"                                Deadline newDeadline \u003d new Deadline(parts[0].trim(), taskDate);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"                                TaskList.addTask(newDeadline);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"                                TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"                                System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Qmin46"},"content":"                            }","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Qmin46"},"content":"                        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Qmin46"},"content":"                                Deadline newDeadline \u003d new Deadline(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Qmin46"},"content":"                                TaskList.addTask(newDeadline);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Qmin46"},"content":"                                TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Qmin46"},"content":"                                System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"Qmin46"},"content":"                        }","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"Qmin46"},"content":"                    } else if (input.length() \u003c 9 || input.substring(8).trim().equals(\"\")){","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"Qmin46"},"content":"                        System.out.println(Ui.line + \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" + Ui.line);","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"Qmin46"},"content":"                    }","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"Qmin46"},"content":"                } else if (input.contains(\"event\") \u0026\u0026 (input.substring(0, 5)).equals(\"event\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"Qmin46"},"content":"                    if (input.contains(\"/at\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"Qmin46"},"content":"                        String[] parts \u003d input.substring(5).split(\"/at\");","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"Qmin46"},"content":"                        String[] dateTime \u003d parts[1].trim().split(\" \");","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"Qmin46"},"content":"                        String[] split \u003d dateTime[0].split(\"/\");","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"Qmin46"},"content":"                        if (checkDateValidity(split)) {","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"Qmin46"},"content":"                                LocalDate taskDate \u003d formatDate(split);","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"Qmin46"},"content":"                                if (dateTime.length \u003d\u003d 2 \u0026\u0026 checkTimeValidity(split[1])) {","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"Qmin46"},"content":"                                    LocalTime taskTime \u003d formatTime(dateTime[1]);","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"Qmin46"},"content":"                                    Event newEvent \u003d new Event(parts[0].trim(), taskDate, taskTime);","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"Qmin46"},"content":"                                    TaskList.addTask(newEvent);","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"Qmin46"},"content":"                                    TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"Qmin46"},"content":"                                    System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"Qmin46"},"content":"                                }else {","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"Qmin46"},"content":"                                    Event newEvent \u003d new Event(parts[0].trim(), taskDate);","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"Qmin46"},"content":"                                    TaskList.addTask(newEvent);","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"Qmin46"},"content":"                                    TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"Qmin46"},"content":"                                    System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"Qmin46"},"content":"                                }","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"Qmin46"},"content":"                        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"Qmin46"},"content":"                            Event newEvent \u003d new Event(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"Qmin46"},"content":"                            TaskList.addTask(newEvent);","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"Qmin46"},"content":"                            TaskList.printTaskCount();","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"Qmin46"},"content":"                            System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"Qmin46"},"content":"                        }","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"Qmin46"},"content":"                    } else if (input.length() \u003c 6 || input.substring(5).trim().equals(\"\")){","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"Qmin46"},"content":"                        System.out.println(Ui.line + \"☹ OOPS!!! The description of a event cannot be empty.\\n\" + Ui.line);","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"Qmin46"},"content":"                    }","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"Qmin46"},"content":"                } else if (input.contains(\"done\") \u0026\u0026 (input.substring(0, 4)).equals(\"done\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"Qmin46"},"content":"                    TaskList.markIndex(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"Qmin46"},"content":"                    System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"Qmin46"},"content":"                } else if (input.contains(\"delete\") \u0026\u0026 (input.substring(0, 6)).equals(\"delete\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"Qmin46"},"content":"                    TaskList.removeTask(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"Qmin46"},"content":"                    System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"Qmin46"},"content":"                } else if (input.contains(\"find\") \u0026\u0026 (input.substring(0, 4)).equals(\"find\"))  {","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"Qmin46"},"content":"                    TaskList.findTask(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"Qmin46"},"content":"                    System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"Qmin46"},"content":"                } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"Qmin46"},"content":"                    System.out.println(Ui.line);","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"Qmin46"},"content":"                    throw new DukeExceptionMeaning();","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"Qmin46"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"Qmin46"},"content":"        } catch(DukeExceptionMeaning e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"Qmin46"},"content":"            System.out.println( \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"Qmin46"},"content":"    public static boolean checkTimeValidity(String timeInput) {","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"Qmin46"},"content":"        if (timeInput.equals(\"\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"Qmin46"},"content":"            return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"Qmin46"},"content":"            int time \u003d Integer.parseInt(timeInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"Qmin46"},"content":"            int hour \u003d time/100;","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"Qmin46"},"content":"            int min \u003d time%100;","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"Qmin46"},"content":"            if (hour \u003c 24 \u0026\u0026 hour \u003e\u003d 0 \u0026\u0026 min \u003c 60 \u0026\u0026 min \u003e\u003d 0) {","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"Qmin46"},"content":"                return true;","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"Qmin46"},"content":"            } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"Qmin46"},"content":"                return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"Qmin46"},"content":"    public static LocalTime formatTime(String timeInput) {","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"Qmin46"},"content":"        int time \u003d Integer.parseInt(timeInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"Qmin46"},"content":"        int hour \u003d time /100;","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"Qmin46"},"content":"        int min \u003d time%100;","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"Qmin46"},"content":"        LocalTime taskTime \u003d LocalTime.of(hour , min);","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"Qmin46"},"content":"        return taskTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"Qmin46"},"content":"    public static boolean checkDateValidity(String[] details) {","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"Qmin46"},"content":"        if (details.length !\u003d 3) {","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"Qmin46"},"content":"            return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"Qmin46"},"content":"            int day \u003d Integer.parseInt(details[0].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"Qmin46"},"content":"            int month \u003d Integer.parseInt(details[1].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"Qmin46"},"content":"            int year \u003d Integer.parseInt(details[2].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"Qmin46"},"content":"            if (day \u003c\u003d 31 || day \u003e\u003d 1) {","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"Qmin46"},"content":"                return true;","lastModifiedDate":"2021-11-13"},{"lineNumber":151,"author":{"gitId":"Qmin46"},"content":"            } else if (month \u003c\u003d 12 || month \u003e\u003d 1) {","lastModifiedDate":"2021-11-13"},{"lineNumber":152,"author":{"gitId":"Qmin46"},"content":"                return true;","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"Qmin46"},"content":"            } else if (year \u003e 0) {","lastModifiedDate":"2021-11-13"},{"lineNumber":154,"author":{"gitId":"Qmin46"},"content":"                return true;","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"Qmin46"},"content":"            } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":156,"author":{"gitId":"Qmin46"},"content":"                return false;","lastModifiedDate":"2021-11-13"},{"lineNumber":157,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"Qmin46"},"content":"    public static LocalDate formatDate(String[] details) {","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"Qmin46"},"content":"        String day \u003d details[0].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"Qmin46"},"content":"        if (day.length() \u003d\u003d 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"Qmin46"},"content":"            day \u003d \"0\" + day;","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"Qmin46"},"content":"        assert false;","lastModifiedDate":"2021-11-13"},{"lineNumber":167,"author":{"gitId":"Qmin46"},"content":"        String month \u003d details[1].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"Qmin46"},"content":"        if (month.length() \u003d\u003d 1) {","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"Qmin46"},"content":"            month \u003d \"0\" + month;","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"Qmin46"},"content":"        assert false;","lastModifiedDate":"2021-11-13"},{"lineNumber":172,"author":{"gitId":"Qmin46"},"content":"        String year \u003d details[2].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"Qmin46"},"content":"        if (year.length() \u003c 4) {","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"Qmin46"},"content":"            for (int i \u003d year.length(); i \u003c 4; i ++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"Qmin46"},"content":"                year \u003d \"0\" + year;","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"Qmin46"},"content":"        assert false;","lastModifiedDate":"2021-11-13"},{"lineNumber":179,"author":{"gitId":"Qmin46"},"content":"        String newDateFormat \u003d year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"Qmin46"},"content":"        LocalDate taskDate \u003d LocalDate.parse(newDateFormat);","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"Qmin46"},"content":"        return taskDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":185}},{"path":"src/main/duke/data/Storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"D | 1 | return book | D","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"D | 0 | submit homework | D","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"E | 0 | meeting | E","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"E | 0 | discussion for project | E","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":4}},{"path":"src/main/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eDeadLine\u003c/code\u003e object stores a task with deadline.","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":" * * Extends the \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"    protected String by;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"        super(description);","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"    public Deadline(String newTask, LocalDate newDate) {","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"        super(newTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"        date \u003d newDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"    public Deadline(String newTask, LocalDate newDate, LocalTime newTime) {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"        super(newTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        date \u003d newDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"        time \u003d newTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"            return \"[D][X]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"            return \"[D][]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"        String info \u003d this.getStatusIcon() + \" \" + description + \" (by: \";","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"            info \u003d info + by ;","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"            info \u003d info + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \"u\";","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"            if (time !\u003d null) {","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"                info \u003d info + \" \" + time;","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"        info \u003d info + \")\";","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"        return info;","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"        return \"D\";","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":59}},{"path":"src/main/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e object stores a task with event.","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":" * * Extends the \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"public class Event extends Task {","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"    protected String at;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"        super(description);","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"    public Event(String newTask, LocalDate newDate) {","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"        super(newTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"        date \u003d newDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"    public Event(String newTask, LocalDate newDate, LocalTime newTime) {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        super(newTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"        date \u003d newDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"        time \u003d newTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"            return \"[E][X]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"            return \"[E][]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"        String info \u003d this.getStatusIcon() + \" \" + description + \" (at: \";","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"            info \u003d info + at ;","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"            info \u003d info + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"            if (time !\u003d null) {","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"                info \u003d info + \" \" + time;","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"            assert false;","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"        info \u003d info + \")\";","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"        return info;","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"        return \"E\";","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":61}},{"path":"src/main/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import main.duke.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import java.io.File;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"public class Storage {","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    public static File createNewFile() throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"        File newFile \u003d new File(\"data\\\\Storage.txt\");","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"        boolean result;","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"            result \u003d newFile.createNewFile();","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"            if (result){","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"                System.out.println(\"New Storage.txt file created.\");","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"            }else {","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"                System.out.println(\"File already exist at location: \" + newFile.getCanonicalPath());","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"            }return newFile;","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"            throw new DukeException(\"Failed to create new Storage.txt file.\");","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"    public static File openFile() throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"        File newFile \u003d new File(\"data\\\\Storage.txt\");","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"        if (!newFile.exists()) {","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"            try {","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"                newFile \u003d createNewFile();","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"                throw new DukeException(\"Error! Please verify the path\");","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"        return newFile;","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"    public static void writeToFile(File fileWrite) {","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"            FileWriter fw \u003d new FileWriter(fileWrite, false);","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"            ArrayList\u003cTask\u003e list \u003d TaskList.taskDisplay;","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"                Task taskAtIndex \u003d list.get(i);","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"                String typeCheck \u003d taskAtIndex.getTaskType();","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"                String newLine \u003d \"\";","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"                if (typeCheck.equals(\"T\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"                    newLine \u003d outputArray(taskAtIndex);","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"                } else if (typeCheck.equals(\"D\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"                    newLine \u003d outputArray(taskAtIndex);","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"                } else if (typeCheck.equals(\"E\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"                    newLine \u003d outputArray(taskAtIndex);","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"                }","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"                fw.write(newLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"Qmin46"},"content":"            fw.close();","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"Qmin46"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":63,"author":{"gitId":"Qmin46"},"content":"            System.out.println(\"Failed to write\");","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"Qmin46"},"content":"    public static String outputArray(Task targetTask) {","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"Qmin46"},"content":"        String wall \u003d \" | \";","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"Qmin46"},"content":"        String taskType \u003d targetTask.getTaskType();","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"Qmin46"},"content":"        String newLine \u003d taskType + wall;","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"Qmin46"},"content":"        if (targetTask.isDone) {","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"Qmin46"},"content":"            newLine \u003d newLine + \"1\" + wall;","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"Qmin46"},"content":"            newLine \u003d newLine + \"0\" + wall;","lastModifiedDate":"2021-11-13"},{"lineNumber":75,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":76,"author":{"gitId":"Qmin46"},"content":"        newLine \u003d newLine + targetTask.description;","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":78,"author":{"gitId":"Qmin46"},"content":"        if (taskType.equals(\"D\") || taskType.equals(\"E\"))","lastModifiedDate":"2021-11-13"},{"lineNumber":79,"author":{"gitId":"Qmin46"},"content":"            newLine \u003d newLine + wall + targetTask.getTaskType();","lastModifiedDate":"2021-11-13"},{"lineNumber":80,"author":{"gitId":"Qmin46"},"content":"        return newLine;","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":82}},{"path":"src/main/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"import main.duke.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"public class Task {","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"    protected String description;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"    protected String type;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"    protected boolean Completed;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"    public Task(String newTask, String toComplete) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"        this.description \u003d newTask;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"        if (toComplete.equals(\"1\")){","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"            this.Completed \u003d true;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"        } else if (toComplete.equals(\"0\")) {","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"            this.Completed \u003d false;","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"            throw new DukeException(\"Invalid input\");","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"    public Task(String description) {","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"    public String getDescription() {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        return description;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"        //return (isDone ? \"[X]\" : \" \"); // mark done task with X","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"            return \"[X]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"        String TaskInfo \u003d this.getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"        return TaskInfo;","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"    public void markCompleted() {","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"        return Completed;","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"    public String getDone(){","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"        if(isDone){","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"            return \"1\";","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"            return \"0\";","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"Qmin46"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Qmin46"},"content":"        return \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Qmin46"},"content":"    public String getAdditionalInfo() {","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"Qmin46"},"content":"        return \"\";","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":70}},{"path":"src/main/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e contains the task list, it has operations to add/delete tasks in the list, display the task in the list.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"public class TaskList {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"    static String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"    static int taskCount \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"    static ArrayList\u003cTask\u003e taskDisplay \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"     * Prints the added task.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"     * @param newJob The newly added task.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    public static void addTask(Task newJob) {","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"        taskDisplay.add(newJob);","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"        taskCount++;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line + \"\\nGot it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"                + newJob.getTaskInfo());","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"     * Remove the specific task from the schedule.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"     * @param input task to be removed.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"    public static void removeTask(String input) {","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"        int index \u003d Integer.parseInt(input.substring(6).trim()) - 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"        taskCount--;","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line + \"\\nNoted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"                + \" \" + taskDisplay.get(index).getStatusIcon() + \" \" + taskDisplay.get(index).description","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"                + \"\\nNow you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"        taskDisplay.remove(index);","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"    /** Print array size.*/","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"    public int getListSize() { return taskDisplay.size(); }","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"    /** Print all the tasks that already input.*/","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"    public static void printCheckList() {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line + \"\\nHere are the tasks in your list:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"        for (int i \u003d 0; i \u003c taskDisplay.size(); i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"            System.out.println((i+1) + \".\" + taskDisplay.get(i).getTaskInfo());","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line);","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"     * Mark the specific task as completed in the schedule.","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"     * @param input task to be marked as done.","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Qmin46"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"Qmin46"},"content":"    public static void markIndex(String input) {","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"Qmin46"},"content":"        int index \u003d Integer.parseInt(input.substring(4).trim()) - 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"Qmin46"},"content":"        if (index \u003c taskCount) {","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Qmin46"},"content":"            markTask(taskDisplay.get(index));","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Qmin46"},"content":"            System.out.println(line + \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Qmin46"},"content":"                     +taskDisplay.get(index).getTaskInfo());","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"Qmin46"},"content":"            System.out.println(line + \"\\nInvalid task index number\\n\" + line);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"Qmin46"},"content":"    public static void markTask(Task inputTask) {","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"Qmin46"},"content":"        inputTask.markCompleted();","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"Qmin46"},"content":"    public static void printTaskCount() {","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"Qmin46"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"Qmin46"},"content":"     * Find the specific task based on keyword input by user.","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"Qmin46"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"Qmin46"},"content":"     * @param input keyword to search.","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"Qmin46"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"Qmin46"},"content":"    public static void findTask(String input){","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"Qmin46"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"Qmin46"},"content":"        String[] parts \u003d input.substring(4).split(\" \");","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"Qmin46"},"content":"        String details \u003d parts[1].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"Qmin46"},"content":"        for (int i \u003d 0; i \u003c taskDisplay.size(); i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"Qmin46"},"content":"            Task task \u003d taskDisplay.get(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"Qmin46"},"content":"            if (task.getDescription().toLowerCase().contains(details.toLowerCase())) {","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"Qmin46"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"Qmin46"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"Qmin46"},"content":"            assert false;","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"Qmin46"},"content":"        if (isFound) {","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"Qmin46"},"content":"            System.out.println(\"Here are the matching tasks in your list!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"Qmin46"},"content":"            for (int i \u003d 0; i \u003c taskDisplay.size(); i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"Qmin46"},"content":"                Task task \u003d taskDisplay.get(i);","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"Qmin46"},"content":"                if (task.getDescription().toLowerCase().contains(details.toLowerCase())) {","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"Qmin46"},"content":"                    System.out.println(i + 1 + \". \" + task.getTaskInfo());","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"Qmin46"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"Qmin46"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"Qmin46"},"content":"        } else if (taskDisplay.size() \u003d\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"Qmin46"},"content":"            System.out.println(line + \"Sorry, you don\u0027t have any task in your list!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"Qmin46"},"content":"            System.out.println(line + \"There is no task found!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":109}},{"path":"src/main/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import org.junit.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"public class TaskListTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"    public void addTaskList_success() {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"        assertEquals(0, taskList.getListSize());","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"        taskList.addTask(new Task(\"random task\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"        assertEquals(1, taskList.getListSize());","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":18}},{"path":"src/main/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.task;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eToDo\u003c/code\u003e object stores a todo task.","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":" * * Extends the \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"        super(description);","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"    public ToDo (String taskDescription, Boolean isDone){","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"            return \"[T][X]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"            return \"[T][]\";","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"        String TaskInfo \u003d this.getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        return TaskInfo;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":30}},{"path":"src/main/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e deals with interactions with the user.","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"public class Ui {","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"    public static String line \u003d\"____________________________________________________________\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"    public static void showLine() {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"    /** Prints welcome message. */","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    public static void WelcomeDuke() {","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"Welcome to\\n\" + logo);","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"    /** Prints greeting message. */","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"    public static void Greet() {","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"        String start \u003d \"Hello, I\u0027m Duke\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"        String end \u003d \"What can I do for you?\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"        String guide \u003d \"Note: Type \u0027guide\u0027 for more information.\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line + start + end + guide + line);","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"    /** Display the commands available for the user. */","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"    public static void Guide(){","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line);","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"Here are the commands available: \");","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To view existing tasks:             list\");","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To add a new to do job:             todo {description}\");","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To add a new deadline:              deadline {description} /by {yyyy-MM-dd HHmm}\");","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To add a new event:                 event {description} /at {yyyy-MM-dd HHmm}{time} - {yyyy-MM-dd HHmm}{time}\");","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To mark a task as completed:        done {taskSequence (please have it in number)}\");","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To delete a task:                   delete {taskSequence (please have it in number)}\");","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To search task by keyword:          find {keyword (please have it in number)}\");","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"Qmin46"},"content":"        System.out.println(\"To exit this chat bot:              bye\");","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Qmin46"},"content":"    /** Prints exit message. */","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Qmin46"},"content":"    public static void Echo(){","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Qmin46"},"content":"        System.out.println(line + \"Bye. Hope to see you again!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":54}},{"path":"src/main/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"package main.duke.ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"public class UiTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    private final PrintStream original \u003d System.out;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Qmin46"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Qmin46"},"content":"    @AfterEach","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"Qmin46"},"content":"    public void tearDown() {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"Qmin46"},"content":"        System.setOut(original);","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"Qmin46"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Qmin46"},"content":"    public void testShowLine(){","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Qmin46"},"content":"        Ui.showLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Qmin46"},"content":"        assertEquals(\"____________________________________________________________\",","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Qmin46"},"content":"                output.toString().trim());","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"Qmin46"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"Qmin46"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"Qmin46"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"Qmin46"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"Qmin46"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"Qmin46"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"Qmin46"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"Qmin46"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"Qmin46":19}},{"path":"src/test/Dummy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Qmin46"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"Qmin46"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"Qmin46"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"Qmin46"},"content":"public class Dummy {","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"Qmin46"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"Qmin46"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"Qmin46"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"Qmin46"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"Qmin46"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Qmin46":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Qmin46"},"content":"javac  -cp C:\\Users\\qiaom\\OneDrive\\Documents\\duke\\src\\main\\java -Xlint:none -d C:\\Users\\qiaom\\OneDrive\\Documents\\duke\\src\\main\\java\\*.java","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Qmin46"},"content":"java -classpath C:\\Users\\qiaom\\OneDrive\\Documents\\duke\\text-ui-test \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Qmin46":2,"-":19}}]
