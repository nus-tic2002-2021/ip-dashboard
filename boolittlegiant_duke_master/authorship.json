[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"# main.Duke project template","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"3. After that, locate the `src/main/java/main.Duke.java` file, right-click it, and choose `Run main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"boolittlegiant":2,"-":22}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"E | 1 | project meeting | 2021-12-05T10:00","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"D | 0 | return book | 2021-12-04T10:00","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"T | 0 | read book","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":3}},{"path":"src/main/java/contants/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package contants;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"public class Constants {","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"    public static final String NOTDONE \u003d \"notdone\";","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"    public static final String TODO_HELP_STATEMENT \u003d \"Type \\\"todo\\\" \\\"description of task\\\" to create a new Todo Task.\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"            \" E.g. todo Return textbook\";","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"    public static final String DEADLINE_HELP_STATEMENT \u003d \"Type \\\"deadline\\\" \\\"description of task\\\" /by\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"            \" \\\"description of deadline\\\" to create a new Deadline Task. E.g. deadline Hand in homework /by 2021-12-05T23:59 \";","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"    public static final String EVENT_HELP_STATEMENT \u003d\"Type \\\"event\\\" \\\"description of task\\\" /at \" +","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"            \"\\\"description of event\\\" to create a new Event Task. E.g. event Zumba@Labrador Park /at 2021-12-04T10:00 \";","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"    public static final String LIST_HELP_STATEMENT \u003d \"Type \\\"list\\\" and press enter to print out the current list of tasks.\";","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"    public static final String DONE_HELP_STATEMENT \u003d \"Type \\\"done\\\" and the number of the task from the list. \" +","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"            \"Use \\\"list\\\" to display the tasks and their corresponding number first. E.g. done 1\\n\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"            \"\\t\\t\\t   [This will set that task\u0027s status to done/ complete]\";","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"    public static final String NOTDONE_HELP_STATEMENT \u003d \"Type \\\"undone\\\" and the number of the task from the list.\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"            \"Use \\\"list\\\" to display the tasks and their corresponding number first. E.g. undone 1\\n\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"            \"\\t\\t\\t   [This will set that task\u0027s status to not done/ incomplete]\\n\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"            \"\\t\\t\\t   Can be used when a task is mistakenly set as done or for a repeatable task\";","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"    public static final String DELETE_HELP_STATEMENT \u003d \"Type \\\"list\\\" and the number of the task to be deleted from the list.\\n\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"            \"\\t\\t\\t   Use \\\"list\\\" to display the tasks and their corresponding number first. E.g. delete 1\\n\" +","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"            \"\\t\\t\\t   [This will delete/remove that task from the list.]\";","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":30}},{"path":"src/main/java/exception/TaskManagerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package exception;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"/**","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":" * Generates an exception when called and passes the message to the caller.","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":" */","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"public class TaskManagerException extends Exception {","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"    public TaskManagerException(String message) {","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"        super(message);","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":10}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package main;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import exception.TaskManagerException;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"import storage.helper;","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"import task.Deadline;","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"import task.Event;","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"import task.Task;","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"import task.Todo;","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"public class Duke {","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"        String logo \u003d","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"                \" ____              \\n\"","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"                        + \"|  _ \\\\_____ _____ \\n\"","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"                        + \"| |_| |  _  |  _  |\\n\"","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"                        + \"|  _  | | | | | | |\\n\"","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"                        + \"| |_| | |_| | |_| |\\n\"","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"                        + \"|____/ \\\\____|\\\\____|\\n\";","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"        System.out.println(logo + \"Welcome I\u0027m Boo.\");","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"        String line;","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"        String exit \u003d \"\";","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"        Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-11-30"},{"lineNumber":34,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":35,"author":{"gitId":"boolittlegiant"},"content":"        TaskList tasks;","lastModifiedDate":"2021-11-30"},{"lineNumber":36,"author":{"gitId":"boolittlegiant"},"content":"        try {","lastModifiedDate":"2021-11-30"},{"lineNumber":37,"author":{"gitId":"boolittlegiant"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-11-30"},{"lineNumber":38,"author":{"gitId":"boolittlegiant"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":39,"author":{"gitId":"boolittlegiant"},"content":"            //Starting with an empty task list\");","lastModifiedDate":"2021-11-30"},{"lineNumber":40,"author":{"gitId":"boolittlegiant"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-30"},{"lineNumber":41,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":42,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":43,"author":{"gitId":"boolittlegiant"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-30"},{"lineNumber":44,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":45,"author":{"gitId":"boolittlegiant"},"content":"        while (!exit.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":46,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":47,"author":{"gitId":"boolittlegiant"},"content":"            line \u003d input.nextLine();","lastModifiedDate":"2021-11-30"},{"lineNumber":48,"author":{"gitId":"boolittlegiant"},"content":"            String command[];","lastModifiedDate":"2021-11-30"},{"lineNumber":49,"author":{"gitId":"boolittlegiant"},"content":"            command \u003d line.split((\" \"));","lastModifiedDate":"2021-11-30"},{"lineNumber":50,"author":{"gitId":"boolittlegiant"},"content":"            String commandWord \u003d Parser.getCommand(line);","lastModifiedDate":"2021-11-30"},{"lineNumber":51,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":52,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":53,"author":{"gitId":"boolittlegiant"},"content":"            if (\"bye\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":54,"author":{"gitId":"boolittlegiant"},"content":"                storage.save(tasks.getAllTasks());","lastModifiedDate":"2021-11-30"},{"lineNumber":55,"author":{"gitId":"boolittlegiant"},"content":"                System.out.println(\"\u003c\u003c Saving tasks :) \u003e\u003e\");","lastModifiedDate":"2021-11-30"},{"lineNumber":56,"author":{"gitId":"boolittlegiant"},"content":"                for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-11-30"},{"lineNumber":57,"author":{"gitId":"boolittlegiant"},"content":"                    System.out.print(\".\");","lastModifiedDate":"2021-11-30"},{"lineNumber":58,"author":{"gitId":"boolittlegiant"},"content":"                    try {","lastModifiedDate":"2021-11-30"},{"lineNumber":59,"author":{"gitId":"boolittlegiant"},"content":"                        Thread.sleep(120);","lastModifiedDate":"2021-11-30"},{"lineNumber":60,"author":{"gitId":"boolittlegiant"},"content":"                    } catch (InterruptedException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":61,"author":{"gitId":"boolittlegiant"},"content":"                        e.printStackTrace();","lastModifiedDate":"2021-11-30"},{"lineNumber":62,"author":{"gitId":"boolittlegiant"},"content":"                    }","lastModifiedDate":"2021-11-30"},{"lineNumber":63,"author":{"gitId":"boolittlegiant"},"content":"                }","lastModifiedDate":"2021-11-30"},{"lineNumber":64,"author":{"gitId":"boolittlegiant"},"content":"                System.out.println(\"complete~!\");","lastModifiedDate":"2021-11-30"},{"lineNumber":65,"author":{"gitId":"boolittlegiant"},"content":"                System.out.println(\"Bye~ Have a nice day!\");","lastModifiedDate":"2021-11-30"},{"lineNumber":66,"author":{"gitId":"boolittlegiant"},"content":"                exit \u003d commandWord;","lastModifiedDate":"2021-11-30"},{"lineNumber":67,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":68,"author":{"gitId":"boolittlegiant"},"content":"            } else if (\"help\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":69,"author":{"gitId":"boolittlegiant"},"content":"                helper.helpMessage();","lastModifiedDate":"2021-11-30"},{"lineNumber":70,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":71,"author":{"gitId":"boolittlegiant"},"content":"            } else if (\"list\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":72,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":73,"author":{"gitId":"boolittlegiant"},"content":"                if (tasks.getNumberOfTasks() \u003e 0) {","lastModifiedDate":"2021-11-30"},{"lineNumber":74,"author":{"gitId":"boolittlegiant"},"content":"                    try {","lastModifiedDate":"2021-11-30"},{"lineNumber":75,"author":{"gitId":"boolittlegiant"},"content":"                        tasks.printAllTasks();","lastModifiedDate":"2021-11-30"},{"lineNumber":76,"author":{"gitId":"boolittlegiant"},"content":"                    } catch (NullPointerException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":77,"author":{"gitId":"boolittlegiant"},"content":"                        System.out.println(\"List is empty, add some tasks!\");","lastModifiedDate":"2021-11-30"},{"lineNumber":78,"author":{"gitId":"boolittlegiant"},"content":"                    }","lastModifiedDate":"2021-11-30"},{"lineNumber":79,"author":{"gitId":"boolittlegiant"},"content":"                } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":80,"author":{"gitId":"boolittlegiant"},"content":"                    System.out.println(\"List is empty, add some tasks!\");","lastModifiedDate":"2021-11-30"},{"lineNumber":81,"author":{"gitId":"boolittlegiant"},"content":"                }","lastModifiedDate":"2021-11-30"},{"lineNumber":82,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":83,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":84,"author":{"gitId":"boolittlegiant"},"content":"            } else if (\"done\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":85,"author":{"gitId":"boolittlegiant"},"content":"                tasks.markAsDone(line);","lastModifiedDate":"2021-11-30"},{"lineNumber":86,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":87,"author":{"gitId":"boolittlegiant"},"content":"            } else if (\"notdone\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":88,"author":{"gitId":"boolittlegiant"},"content":"                tasks.markNotDone(line);","lastModifiedDate":"2021-11-30"},{"lineNumber":89,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":90,"author":{"gitId":"boolittlegiant"},"content":"            } else if (\"delete\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":91,"author":{"gitId":"boolittlegiant"},"content":"                tasks.deleteTask(line);","lastModifiedDate":"2021-11-30"},{"lineNumber":92,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":93,"author":{"gitId":"boolittlegiant"},"content":"            } else if (\"event\".equals(commandWord.toLowerCase()) || \"todo\".equals(commandWord.toLowerCase())","lastModifiedDate":"2021-11-30"},{"lineNumber":94,"author":{"gitId":"boolittlegiant"},"content":"                    || \"deadline\".equals(commandWord.toLowerCase()) || \"task\".equals(commandWord.toLowerCase())) {","lastModifiedDate":"2021-11-30"},{"lineNumber":95,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":96,"author":{"gitId":"boolittlegiant"},"content":"                try {","lastModifiedDate":"2021-11-30"},{"lineNumber":97,"author":{"gitId":"boolittlegiant"},"content":"                    if (command[0].toLowerCase().equals(\"event\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":98,"author":{"gitId":"boolittlegiant"},"content":"                        tasks.addATask(Parser.createEvent(line));","lastModifiedDate":"2021-11-30"},{"lineNumber":99,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":100,"author":{"gitId":"boolittlegiant"},"content":"                    } else if (command[0].toLowerCase().equals(\"todo\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":101,"author":{"gitId":"boolittlegiant"},"content":"                        tasks.addATask(Parser.createTodo(line));","lastModifiedDate":"2021-11-30"},{"lineNumber":102,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":103,"author":{"gitId":"boolittlegiant"},"content":"                    } else if (command[0].toLowerCase().equals(\"deadline\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":104,"author":{"gitId":"boolittlegiant"},"content":"                        tasks.addATask(Parser.createDeadLine(line));","lastModifiedDate":"2021-11-30"},{"lineNumber":105,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":106,"author":{"gitId":"boolittlegiant"},"content":"                    } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":107,"author":{"gitId":"boolittlegiant"},"content":"                        System.out.println(\"Invalid command...\");","lastModifiedDate":"2021-11-30"},{"lineNumber":108,"author":{"gitId":"boolittlegiant"},"content":"                    }","lastModifiedDate":"2021-11-30"},{"lineNumber":109,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":110,"author":{"gitId":"boolittlegiant"},"content":"                    //Display when a Task.Task is added.","lastModifiedDate":"2021-11-30"},{"lineNumber":111,"author":{"gitId":"boolittlegiant"},"content":"                    //array[i] \u003d line;","lastModifiedDate":"2021-11-30"},{"lineNumber":112,"author":{"gitId":"boolittlegiant"},"content":"//                count++;","lastModifiedDate":"2021-11-30"},{"lineNumber":113,"author":{"gitId":"boolittlegiant"},"content":"//                System.out.println(\"Got it, I\u0027ve added this task:\\n \" + \"\\n\"+\"Now you have \"+\" tasks in the list.\");","lastModifiedDate":"2021-11-30"},{"lineNumber":114,"author":{"gitId":"boolittlegiant"},"content":"                    //System.out.println(\"Inside Events/ todo / deadline\");","lastModifiedDate":"2021-11-30"},{"lineNumber":115,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":116,"author":{"gitId":"boolittlegiant"},"content":"                } catch (TaskManagerException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":117,"author":{"gitId":"boolittlegiant"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-11-30"},{"lineNumber":118,"author":{"gitId":"boolittlegiant"},"content":"                }","lastModifiedDate":"2021-11-30"},{"lineNumber":119,"author":{"gitId":"boolittlegiant"},"content":"            } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":120,"author":{"gitId":"boolittlegiant"},"content":"                System.out.println(\"Unknown command! please try again. Please type \\\"help\\\" to view a list of commands.\");","lastModifiedDate":"2021-11-30"},{"lineNumber":121,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":122,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":123,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":124,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"},{"lineNumber":125,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":125}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package parser;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import exception.TaskManagerException;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"import task.Deadline;","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"import task.Event;","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"import task.Todo;","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"public class Parser {","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"    public static String getCommand(String fullCommand) {","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"        String command \u003d fullCommand.trim().split(\" \")[0];","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"        return command;","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"    public static Todo createTodo(String fullCommand) throws TaskManagerException {","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"        String description \u003d fullCommand.substring(\"todo\".length()).trim();","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"        assert ((\"todo \" + description).equals(fullCommand)) : \"Error for substring for todo description\";","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"            throw new TaskManagerException(\"TODO Empty description\");","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"        } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"            return new Todo(description);","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"    public static Deadline createDeadLine(String fullCommand) throws TaskManagerException {","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"        int idxOfBy \u003d fullCommand.indexOf(\"/by\");","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"        if (idxOfBy \u003c 0) {","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"            throw new TaskManagerException(\"Deadline missing /by\");","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":34,"author":{"gitId":"boolittlegiant"},"content":"        try {","lastModifiedDate":"2021-11-30"},{"lineNumber":35,"author":{"gitId":"boolittlegiant"},"content":"            String description \u003d fullCommand.substring(0, idxOfBy).substring(\"deadline\".length()).trim();","lastModifiedDate":"2021-11-30"},{"lineNumber":36,"author":{"gitId":"boolittlegiant"},"content":"            assert (fullCommand.contains(description)) : \"Error for substring for deadline description\";","lastModifiedDate":"2021-11-30"},{"lineNumber":37,"author":{"gitId":"boolittlegiant"},"content":"            if (description.isEmpty() || description.equals(\"\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":38,"author":{"gitId":"boolittlegiant"},"content":"                throw new TaskManagerException(\"Description missing for Deadline\");","lastModifiedDate":"2021-11-30"},{"lineNumber":39,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":40,"author":{"gitId":"boolittlegiant"},"content":"            String deadline \u003d fullCommand.substring(idxOfBy, fullCommand.length()).substring(\"/by\".length()).trim();","lastModifiedDate":"2021-11-30"},{"lineNumber":41,"author":{"gitId":"boolittlegiant"},"content":"            if (deadline.isEmpty() || deadline.equals(\"\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":42,"author":{"gitId":"boolittlegiant"},"content":"                throw new TaskManagerException(\"Missing deadline for Deadline\");","lastModifiedDate":"2021-11-30"},{"lineNumber":43,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":44,"author":{"gitId":"boolittlegiant"},"content":"            return new Deadline(description, LocalDateTime.parse(deadline));","lastModifiedDate":"2021-11-30"},{"lineNumber":45,"author":{"gitId":"boolittlegiant"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":46,"author":{"gitId":"boolittlegiant"},"content":"            throw new TaskManagerException(\"Date/Time format incorrect...\");","lastModifiedDate":"2021-11-30"},{"lineNumber":47,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":48,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":49,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":50,"author":{"gitId":"boolittlegiant"},"content":"    public static Event createEvent(String fullCommand) throws TaskManagerException {","lastModifiedDate":"2021-11-30"},{"lineNumber":51,"author":{"gitId":"boolittlegiant"},"content":"        int idxOfBy \u003d fullCommand.indexOf(\"/at\");","lastModifiedDate":"2021-11-30"},{"lineNumber":52,"author":{"gitId":"boolittlegiant"},"content":"        if (idxOfBy \u003c 0) {","lastModifiedDate":"2021-11-30"},{"lineNumber":53,"author":{"gitId":"boolittlegiant"},"content":"            throw new TaskManagerException(\"Event missing /at\");","lastModifiedDate":"2021-11-30"},{"lineNumber":54,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":55,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":56,"author":{"gitId":"boolittlegiant"},"content":"        try {","lastModifiedDate":"2021-11-30"},{"lineNumber":57,"author":{"gitId":"boolittlegiant"},"content":"            String description \u003d fullCommand.substring(0, idxOfBy).substring(\"event\".length()).trim();","lastModifiedDate":"2021-11-30"},{"lineNumber":58,"author":{"gitId":"boolittlegiant"},"content":"            assert (fullCommand.contains(description)) : \"Error for substring for Event description\";","lastModifiedDate":"2021-11-30"},{"lineNumber":59,"author":{"gitId":"boolittlegiant"},"content":"            if (description.isEmpty() || description.equals(\"\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":60,"author":{"gitId":"boolittlegiant"},"content":"                throw new TaskManagerException(\"Description missing for Event\");","lastModifiedDate":"2021-11-30"},{"lineNumber":61,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":62,"author":{"gitId":"boolittlegiant"},"content":"            String event \u003d fullCommand.substring(idxOfBy, fullCommand.length()).substring(\"/at\".length()).trim();","lastModifiedDate":"2021-11-30"},{"lineNumber":63,"author":{"gitId":"boolittlegiant"},"content":"            if (event.isEmpty() || event.equals(\"\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":64,"author":{"gitId":"boolittlegiant"},"content":"                throw new TaskManagerException(\"Missing event for Event\");","lastModifiedDate":"2021-11-30"},{"lineNumber":65,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":66,"author":{"gitId":"boolittlegiant"},"content":"            return new Event(description, LocalDateTime.parse(event));","lastModifiedDate":"2021-11-30"},{"lineNumber":67,"author":{"gitId":"boolittlegiant"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":68,"author":{"gitId":"boolittlegiant"},"content":"            throw new TaskManagerException(\"Date/Time format incorrect...\");","lastModifiedDate":"2021-11-30"},{"lineNumber":69,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":70,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":71,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":71}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package storage;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import task.Deadline;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"import task.Event;","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"import task.Task;","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"import task.Todo;","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"import java.io.File;","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"import java.util.List;","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"@SuppressWarnings(\"Duplicates\")","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"public class Storage {","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"    private String filePath \u003d \"/data/tasks.txt\";","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"    public String getFilePath() {","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"        return filePath;","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-11-30"},{"lineNumber":34,"author":{"gitId":"boolittlegiant"},"content":"        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-30"},{"lineNumber":35,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":36,"author":{"gitId":"boolittlegiant"},"content":"        List\u003cString\u003e lines \u003d getLines(this.filePath);","lastModifiedDate":"2021-11-30"},{"lineNumber":37,"author":{"gitId":"boolittlegiant"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-11-30"},{"lineNumber":38,"author":{"gitId":"boolittlegiant"},"content":"            if (line.trim().isEmpty()) { //ignore empty lines","lastModifiedDate":"2021-11-30"},{"lineNumber":39,"author":{"gitId":"boolittlegiant"},"content":"                continue;","lastModifiedDate":"2021-11-30"},{"lineNumber":40,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":41,"author":{"gitId":"boolittlegiant"},"content":"            loadedTasks.add(createTask(line)); //convert the line to a task and add to the list","lastModifiedDate":"2021-11-30"},{"lineNumber":42,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":43,"author":{"gitId":"boolittlegiant"},"content":"        return loadedTasks;","lastModifiedDate":"2021-11-30"},{"lineNumber":44,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":45,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":46,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":47,"author":{"gitId":"boolittlegiant"},"content":"    private Task createTask(String line) {","lastModifiedDate":"2021-11-30"},{"lineNumber":48,"author":{"gitId":"boolittlegiant"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-11-30"},{"lineNumber":49,"author":{"gitId":"boolittlegiant"},"content":"        String[] s \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-11-30"},{"lineNumber":50,"author":{"gitId":"boolittlegiant"},"content":"        if (s[0].trim().equals(\"T\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":51,"author":{"gitId":"boolittlegiant"},"content":"            task \u003d new Todo(s[2].trim());","lastModifiedDate":"2021-11-30"},{"lineNumber":52,"author":{"gitId":"boolittlegiant"},"content":"            if ((1 \u003d\u003d Integer.parseInt(s[1].trim()))) {","lastModifiedDate":"2021-11-30"},{"lineNumber":53,"author":{"gitId":"boolittlegiant"},"content":"                task.markAsDone();","lastModifiedDate":"2021-11-30"},{"lineNumber":54,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":55,"author":{"gitId":"boolittlegiant"},"content":"        } else if (s[0].trim().equals(\"D\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":56,"author":{"gitId":"boolittlegiant"},"content":"            task \u003d new Deadline(s[2], LocalDateTime.parse(s[3].trim()));","lastModifiedDate":"2021-11-30"},{"lineNumber":57,"author":{"gitId":"boolittlegiant"},"content":"            if ((1 \u003d\u003d Integer.parseInt(s[1].trim()))) {","lastModifiedDate":"2021-11-30"},{"lineNumber":58,"author":{"gitId":"boolittlegiant"},"content":"                task.markAsDone();","lastModifiedDate":"2021-11-30"},{"lineNumber":59,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":60,"author":{"gitId":"boolittlegiant"},"content":"        }   else if (s[0].trim().equals(\"E\")) {","lastModifiedDate":"2021-11-30"},{"lineNumber":61,"author":{"gitId":"boolittlegiant"},"content":"            task \u003d new Event(s[2], LocalDateTime.parse(s[3].trim()));","lastModifiedDate":"2021-11-30"},{"lineNumber":62,"author":{"gitId":"boolittlegiant"},"content":"            if ((1 \u003d\u003d Integer.parseInt(s[1].trim()))) {","lastModifiedDate":"2021-11-30"},{"lineNumber":63,"author":{"gitId":"boolittlegiant"},"content":"                task.markAsDone();","lastModifiedDate":"2021-11-30"},{"lineNumber":64,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":65,"author":{"gitId":"boolittlegiant"},"content":"        } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":66,"author":{"gitId":"boolittlegiant"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2021-11-30"},{"lineNumber":67,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":68,"author":{"gitId":"boolittlegiant"},"content":"        return task;","lastModifiedDate":"2021-11-30"},{"lineNumber":69,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":70,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":71,"author":{"gitId":"boolittlegiant"},"content":"    /**","lastModifiedDate":"2021-11-30"},{"lineNumber":72,"author":{"gitId":"boolittlegiant"},"content":"     * Returns the lines in the form of a List\u003cString\u003e variable","lastModifiedDate":"2021-11-30"},{"lineNumber":73,"author":{"gitId":"boolittlegiant"},"content":"     *","lastModifiedDate":"2021-11-30"},{"lineNumber":74,"author":{"gitId":"boolittlegiant"},"content":"     * @param filePath","lastModifiedDate":"2021-11-30"},{"lineNumber":75,"author":{"gitId":"boolittlegiant"},"content":"     * @return List\u003cString\u003e lines","lastModifiedDate":"2021-11-30"},{"lineNumber":76,"author":{"gitId":"boolittlegiant"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-11-30"},{"lineNumber":77,"author":{"gitId":"boolittlegiant"},"content":"     */","lastModifiedDate":"2021-11-30"},{"lineNumber":78,"author":{"gitId":"boolittlegiant"},"content":"    private List\u003cString\u003e getLines(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-11-30"},{"lineNumber":79,"author":{"gitId":"boolittlegiant"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-11-30"},{"lineNumber":80,"author":{"gitId":"boolittlegiant"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-11-30"},{"lineNumber":81,"author":{"gitId":"boolittlegiant"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-11-30"},{"lineNumber":82,"author":{"gitId":"boolittlegiant"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-11-30"},{"lineNumber":83,"author":{"gitId":"boolittlegiant"},"content":"            lines.add(s.nextLine());","lastModifiedDate":"2021-11-30"},{"lineNumber":84,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":85,"author":{"gitId":"boolittlegiant"},"content":"        return lines;","lastModifiedDate":"2021-11-30"},{"lineNumber":86,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":87,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":88,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":89,"author":{"gitId":"boolittlegiant"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-11-30"},{"lineNumber":90,"author":{"gitId":"boolittlegiant"},"content":"        try {","lastModifiedDate":"2021-11-30"},{"lineNumber":91,"author":{"gitId":"boolittlegiant"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-11-30"},{"lineNumber":92,"author":{"gitId":"boolittlegiant"},"content":"            if (Files.isDirectory(Paths.get(\"/data\"))) {","lastModifiedDate":"2021-11-30"},{"lineNumber":93,"author":{"gitId":"boolittlegiant"},"content":"                System.out.println(\"dir exists\");","lastModifiedDate":"2021-11-30"},{"lineNumber":94,"author":{"gitId":"boolittlegiant"},"content":"            } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":95,"author":{"gitId":"boolittlegiant"},"content":"                Files.createDirectories(Paths.get(\"/data\"));","lastModifiedDate":"2021-11-30"},{"lineNumber":96,"author":{"gitId":"boolittlegiant"},"content":"                System.out.println(\"dir did not exist\");","lastModifiedDate":"2021-11-30"},{"lineNumber":97,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":98,"author":{"gitId":"boolittlegiant"},"content":"            File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2021-11-30"},{"lineNumber":99,"author":{"gitId":"boolittlegiant"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-11-30"},{"lineNumber":100,"author":{"gitId":"boolittlegiant"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-11-30"},{"lineNumber":101,"author":{"gitId":"boolittlegiant"},"content":"                if (s.hasNext()) {","lastModifiedDate":"2021-11-30"},{"lineNumber":102,"author":{"gitId":"boolittlegiant"},"content":"                    fw.write(\"\\r\\n\");","lastModifiedDate":"2021-11-30"},{"lineNumber":103,"author":{"gitId":"boolittlegiant"},"content":"                }","lastModifiedDate":"2021-11-30"},{"lineNumber":104,"author":{"gitId":"boolittlegiant"},"content":"                fw.write(task.save());","lastModifiedDate":"2021-11-30"},{"lineNumber":105,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":106,"author":{"gitId":"boolittlegiant"},"content":"            fw.close();","lastModifiedDate":"2021-11-30"},{"lineNumber":107,"author":{"gitId":"boolittlegiant"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-30"},{"lineNumber":108,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":109,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":110,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":111,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":111}},{"path":"src/main/java/storage/helper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package storage;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"import static contants.Constants.*;","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"public class helper {","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"    public static String getDateInFileWriteFormat() {","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"        String pattern \u003d \"ddMMMyyyy\";","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(pattern);","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"        String date \u003d simpleDateFormat.format(new Date());","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"        return date;","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"    public static void helpMessage() {","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"        String helpMessage \u003d String.format(\"\\n%-15s%s\\n\\n%-15s%s\\n\\n%-15s%s\\n\\n%-15s%s\\n\\n%-15s%s\\n\\n%-15s%s\\n \\n%-15s%s\\n\",","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"                TODO, TODO_HELP_STATEMENT,","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"                DEADLINE, DEADLINE_HELP_STATEMENT,","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"                EVENT, EVENT_HELP_STATEMENT,","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"                LIST, LIST_HELP_STATEMENT,","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"                DONE, DONE_HELP_STATEMENT,","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"                NOTDONE, NOTDONE_HELP_STATEMENT,","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"                DELETE, DELETE_HELP_STATEMENT);","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"        System.out.println(helpMessage);","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":29}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package task;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"        super(description);","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"    public void setBy(LocalDateTime by) {","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"        return by;","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"    @Override","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"    public String toString() {","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"    @Override","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"    public String save() {","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"        return \"D\" + \" | \" + (this.getStatusForSave() ? 1 : 0) + \" | \" + this.getName().trim()","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"                + \" | \" + this.getBy().toString().trim() + System.lineSeparator();","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":34,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":34}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package task;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"public class Event extends Task {","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"        super(description);","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"    public void setBy(LocalDateTime at) {","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"        return this.at;","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"    @Override","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"    public String toString() {","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"    @Override","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"    public String save() {","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"        return \"E\" + \" | \" + (this.getStatusForSave() ? 1 : 0) + \" | \" + this.getName().trim()","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"                + \" | \" + this.getAt().toString().trim() + System.lineSeparator();","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":33}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package task;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"public class Task {","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"    protected String name;","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"    public Task(String name) {","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"    public String getName() {","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"        return name;","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"    public String getStatus() {","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"        return (isDone ? \"X\" : \" \"); //X is done","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"    public Boolean getStatusForSave() {","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"        return this.isDone;","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"    public void markNotDone() {","lastModifiedDate":"2021-11-30"},{"lineNumber":34,"author":{"gitId":"boolittlegiant"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-30"},{"lineNumber":35,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":36,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":37,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":38,"author":{"gitId":"boolittlegiant"},"content":"    public String toString() {","lastModifiedDate":"2021-11-30"},{"lineNumber":39,"author":{"gitId":"boolittlegiant"},"content":"        return (\"[\" + getStatus() + \"] \" + name);","lastModifiedDate":"2021-11-30"},{"lineNumber":40,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":41,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":42,"author":{"gitId":"boolittlegiant"},"content":"    public String save() {","lastModifiedDate":"2021-11-30"},{"lineNumber":43,"author":{"gitId":"boolittlegiant"},"content":"        return this.getName();","lastModifiedDate":"2021-11-30"},{"lineNumber":44,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":45,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":46,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"},{"lineNumber":47,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":48,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":49,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":49}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package task;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"        super(description);","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"    @Override","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"    public String toString() {","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"    @Override","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"    public String save() {","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"        return \"T\" + \" | \" + (this.getStatusForSave() ? 1 : 0) + \" | \" + super.save() + System.lineSeparator();","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":18}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"boolittlegiant"},"content":"package tasklist;","lastModifiedDate":"2021-11-30"},{"lineNumber":2,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":3,"author":{"gitId":"boolittlegiant"},"content":"import task.Task;","lastModifiedDate":"2021-11-30"},{"lineNumber":4,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":5,"author":{"gitId":"boolittlegiant"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-30"},{"lineNumber":6,"author":{"gitId":"boolittlegiant"},"content":"import java.util.List;","lastModifiedDate":"2021-11-30"},{"lineNumber":7,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":8,"author":{"gitId":"boolittlegiant"},"content":"public class TaskList {","lastModifiedDate":"2021-11-30"},{"lineNumber":9,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":10,"author":{"gitId":"boolittlegiant"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-30"},{"lineNumber":11,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":12,"author":{"gitId":"boolittlegiant"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-11-30"},{"lineNumber":13,"author":{"gitId":"boolittlegiant"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-11-30"},{"lineNumber":14,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":15,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":16,"author":{"gitId":"boolittlegiant"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-11-30"},{"lineNumber":17,"author":{"gitId":"boolittlegiant"},"content":"        String tasksDescription \u003d \"\";","lastModifiedDate":"2021-11-30"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"boolittlegiant"},"content":"            tasksDescription +\u003d tasks.get(i).getName().trim();","lastModifiedDate":"2021-11-30"},{"lineNumber":20,"author":{"gitId":"boolittlegiant"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2021-11-30"},{"lineNumber":21,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":22,"author":{"gitId":"boolittlegiant"},"content":"            } else {","lastModifiedDate":"2021-11-30"},{"lineNumber":23,"author":{"gitId":"boolittlegiant"},"content":"                tasksDescription +\u003d \"|\";","lastModifiedDate":"2021-11-30"},{"lineNumber":24,"author":{"gitId":"boolittlegiant"},"content":"            }","lastModifiedDate":"2021-11-30"},{"lineNumber":25,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":26,"author":{"gitId":"boolittlegiant"},"content":"        return tasksDescription;","lastModifiedDate":"2021-11-30"},{"lineNumber":27,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":28,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":29,"author":{"gitId":"boolittlegiant"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-11-30"},{"lineNumber":30,"author":{"gitId":"boolittlegiant"},"content":"        return this.tasks;","lastModifiedDate":"2021-11-30"},{"lineNumber":31,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":32,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":33,"author":{"gitId":"boolittlegiant"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2021-11-30"},{"lineNumber":34,"author":{"gitId":"boolittlegiant"},"content":"        return tasks.size();","lastModifiedDate":"2021-11-30"},{"lineNumber":35,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":36,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":37,"author":{"gitId":"boolittlegiant"},"content":"    public void addATask(Task task) {","lastModifiedDate":"2021-11-30"},{"lineNumber":38,"author":{"gitId":"boolittlegiant"},"content":"        System.out.println(task);","lastModifiedDate":"2021-11-30"},{"lineNumber":39,"author":{"gitId":"boolittlegiant"},"content":"        tasks.add(task);","lastModifiedDate":"2021-11-30"},{"lineNumber":40,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":41,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":42,"author":{"gitId":"boolittlegiant"},"content":"    public void printAllTasks() {","lastModifiedDate":"2021-11-30"},{"lineNumber":43,"author":{"gitId":"boolittlegiant"},"content":"        System.out.println(\"Tasks:\");","lastModifiedDate":"2021-11-30"},{"lineNumber":44,"author":{"gitId":"boolittlegiant"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-11-30"},{"lineNumber":45,"author":{"gitId":"boolittlegiant"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2021-11-30"},{"lineNumber":46,"author":{"gitId":"boolittlegiant"},"content":"            System.out.println(\"[\" + (i) + \"] \" + t);","lastModifiedDate":"2021-11-30"},{"lineNumber":47,"author":{"gitId":"boolittlegiant"},"content":"            i++;","lastModifiedDate":"2021-11-30"},{"lineNumber":48,"author":{"gitId":"boolittlegiant"},"content":"        }","lastModifiedDate":"2021-11-30"},{"lineNumber":49,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":50,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":51,"author":{"gitId":"boolittlegiant"},"content":"    public static String getTaskCount() {","lastModifiedDate":"2021-11-30"},{"lineNumber":52,"author":{"gitId":"boolittlegiant"},"content":"        return \"Tasks in the list: \" + tasks.size();","lastModifiedDate":"2021-11-30"},{"lineNumber":53,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":54,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":55,"author":{"gitId":"boolittlegiant"},"content":"    public static int getNoOfTasks() {","lastModifiedDate":"2021-11-30"},{"lineNumber":56,"author":{"gitId":"boolittlegiant"},"content":"        return tasks.size();","lastModifiedDate":"2021-11-30"},{"lineNumber":57,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":58,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":59,"author":{"gitId":"boolittlegiant"},"content":"    public void markAsDone(String fullCommand) {","lastModifiedDate":"2021-11-30"},{"lineNumber":60,"author":{"gitId":"boolittlegiant"},"content":"        int index \u003d Integer.parseInt(fullCommand.substring(\"done\".length()).trim());","lastModifiedDate":"2021-11-30"},{"lineNumber":61,"author":{"gitId":"boolittlegiant"},"content":"        tasks.get(index - 1).markAsDone();","lastModifiedDate":"2021-11-30"},{"lineNumber":62,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":63,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":64,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":65,"author":{"gitId":"boolittlegiant"},"content":"    public void markNotDone(String fullCommand) {","lastModifiedDate":"2021-11-30"},{"lineNumber":66,"author":{"gitId":"boolittlegiant"},"content":"        int index \u003d Integer.parseInt(fullCommand.substring(\"notdone\".length()).trim());","lastModifiedDate":"2021-11-30"},{"lineNumber":67,"author":{"gitId":"boolittlegiant"},"content":"        tasks.get(index - 1).markNotDone();","lastModifiedDate":"2021-11-30"},{"lineNumber":68,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":69,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":70,"author":{"gitId":"boolittlegiant"},"content":"","lastModifiedDate":"2021-11-30"},{"lineNumber":71,"author":{"gitId":"boolittlegiant"},"content":"    public void deleteTask(String fullCommand) {","lastModifiedDate":"2021-11-30"},{"lineNumber":72,"author":{"gitId":"boolittlegiant"},"content":"        int index \u003d Integer.parseInt(fullCommand.substring(\"remove\".length()).trim());","lastModifiedDate":"2021-11-30"},{"lineNumber":73,"author":{"gitId":"boolittlegiant"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2021-11-30"},{"lineNumber":74,"author":{"gitId":"boolittlegiant"},"content":"    }","lastModifiedDate":"2021-11-30"},{"lineNumber":75,"author":{"gitId":"boolittlegiant"},"content":"}","lastModifiedDate":"2021-11-30"}],"authorContributionMap":{"boolittlegiant":75}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"boolittlegiant"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-11-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"boolittlegiant":1,"-":20}}]
