{"authorDailyContributionsMap":{"lockarhythm":[{"date":"2021-08-17","commitResults":[{"hash":"50d1085fcee239f3ac6e897f95d4d77b4c7e666e","messageTitle":"Basic bazel setup.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"b5eb9ac02d5e0210821512169b18691f6bc859ea","messageTitle":"Update documentation.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":8,"deletions":0}}},{"hash":"7aa0bffeea7ef399bdd2b79a2126077edf4c527e","messageTitle":"Add unit test, test runner and refactor.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":6},"md":{"insertions":6,"deletions":0}}},{"hash":"f659ebbf42051134f2e407896a09c35db482765c","messageTitle":"Cleaner test.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":8}}}]},{"date":"2021-08-20","commitResults":[{"hash":"1e8da3d60bb220c08dd05462e086de4576e0b40d","messageTitle":"Split into packages. Implement Level 1.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":161,"deletions":9}}},{"hash":"e15de968beb734f4ca2f125e4b718e80b6dbd4b1","messageTitle":"Fix bug -- should return response text.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"67cbff0657b9175a3f991b05f7fd8210d9468568","messageTitle":"Implement level 2 -- Add, List.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":7}}},{"hash":"7321f72ab8425cb1c43d4d7592e2c6b1e96d96b5","messageTitle":"Refactor into separate method.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":7}}}]},{"date":"2021-08-21","commitResults":[{"hash":"8545772e149f721dba869b6b38fb3657f90a7359","messageTitle":"Implements Level-3: Mark as Done","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":19}}},{"hash":"9aa137f3a8f2444f4c9ebeadf5d40ea1a39d8498","messageTitle":"Refactor markasdone as separate responder.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":61}}}]},{"date":"2021-08-23","commitResults":[{"hash":"85c0c594f39e4fa2f57092d06ec6320a6e24a5a0","messageTitle":"Implement A-TextUiTesting for macOS and bazel.","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"sh":{"insertions":3,"deletions":3}}},{"hash":"6a850922425bd1361ebea85ab974dd1be154ad1b","messageTitle":"Basic github workflow: * Installs bazelisk * Builds JAR * Runs unit tests * Upload JAR artifact.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":21,"deletions":26}}}]},{"date":"2021-08-24","commitResults":[{"hash":"f30fd0645b6087b995fb7e4c176a17180a6ea2ad","messageTitle":"Run through google-java-format. Add checkstyle config. (#1)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":247,"deletions":268},"md":{"insertions":6,"deletions":0}}},{"hash":"6c2adf84ab35c06064f31b3317a4f315a96f4e6a","messageTitle":"Update README layout","messageBody":"Credits: https://undraw.co/license","fileTypesAndContributionMap":{"md":{"insertions":3,"deletions":1}}},{"hash":"dd6438f0c3a910efd9fcbbbbfe5a37078f1d0d97","messageTitle":"Add pre-commit hook. (#2)","messageBody":"Helps to enforce code style before committing","fileTypesAndContributionMap":{"sh":{"insertions":13,"deletions":0},"md":{"insertions":10,"deletions":0}}}]},{"date":"2021-08-25","commitResults":[{"hash":"ee1fd2926cf00d27b613a4373c7f5a4a3d42624f","messageTitle":"Fix Level-3 mark as done. (#3)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":23,"deletions":3}}}]},{"date":"2021-08-29","commitResults":[{"hash":"437b3859d88a2e5198d48f6f0863cd469e1a2baf","messageTitle":"More classes (#4)","messageBody":"- To prepare for GUI version of Duke, we extract out the core Application that accepts a UI implementation. In this MR, we implement TerminalUI for terminal/console interfaces. Later on, we can add GraphicalUI for JavaFX.\r\n- The duke application is viewed as a REPL, where on the evaluate step, we ask the QueryInterpreter to evaluate the query inputted by the user.\r\n- The SimpleQueryInterpreter class implements QueryInterpreter. It delegates the query to smaller QueryInterpreters, each only responding to a subset of query/commands.\r\n- QueryResponder is renamed to QueryInterpreter.\r\n- Response is renamed to Result. The Result class represents the result of a query interpretation.","fileTypesAndContributionMap":{"java":{"insertions":204,"deletions":151},"sh":{"insertions":2,"deletions":2}}}]},{"date":"2021-08-31","commitResults":[{"hash":"0605449c50a6f586fa06b12518a18804d2b90156","messageTitle":"Implement Level-4, A-Inheritance. Implement partially Level-5. (#5)","messageBody":"* Implement Level-4, A-Inheritance. Implement partially Level-5.\r\n\r\n* Fix tests.\r\n\r\n* Deprecate list.add method.","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":4},"java":{"insertions":281,"deletions":93}}},{"hash":"99c1e95d727e49d405602b7a97ed2bb6b93643ae","messageTitle":"Implement Level-5 and A-Exceptions. Throw DukeException instead of returning null. (#6)","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":6}}},{"hash":"52c3d42d71499adc4e2070c8d943d2bcdcc4b3ea","messageTitle":"Add gif demo in README","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":0}}}]},{"date":"2021-09-21","commitResults":[{"hash":"27456d4cce74ca24731517df09f41efbafaeebd6","messageTitle":"Implement delete Level-6 (#8)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":55,"deletions":0}}}]},{"date":"2021-10-17","commitResults":[{"hash":"38456e3fcec14dbac753f6c8ab8aef5bf9617065","messageTitle":"Save tasks (#9)","messageBody":"* WIP. Add Storage.\r\n\r\n* Working state.\r\n\r\n* And fixed test.\r\n\r\n* Basic implementation and cleanup.","fileTypesAndContributionMap":{"java":{"insertions":124,"deletions":4}}}]},{"date":"2021-10-18","commitResults":[{"hash":"59884c4352631f3995e17835991f63edce54c2e8","messageTitle":"Implement Level-8 minimum. (#10)","messageBody":"* Implement Level-8 minimum.\r\n\r\n* Fix and add more tests. And basic date time parsing.\r\n\r\n* Store datetime.","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":36,"deletions":9},"sh":{"insertions":10,"deletions":0}}},{"hash":"a8eccff79a2805adc7f5e9a680509f082cfcbde6","messageTitle":"Improve Text UI tests. Added tests for saved serialized data. (#11)","messageBody":"* Improve ui tests. Added serialization tests.\r\n\r\n* Fix workflow.\r\n\r\n* Remove tasks.json","fileTypesAndContributionMap":{"sh":{"insertions":12,"deletions":6}}}]},{"date":"2021-10-24","commitResults":[{"hash":"0c8a48eee4e70667a9a7d9437a07c64885ab9123","messageTitle":"Implement C-Sort: Sort tasks by \"Date\" or\" Done\" fields (#12)","messageBody":"* Add sorting by date or done field, with ui tests.\r\n* Use own Gson date serializers\r\n* Use a fixed bazelisk version for more deterministic builds.\r\n* Update README.md","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":178,"deletions":9},"sh":{"insertions":1,"deletions":1},"md":{"insertions":5,"deletions":2}}}]},{"date":"2021-10-25","commitResults":[{"hash":"50d0cce867ea6301bbbc960ca7ff2b543f10a9b1","messageTitle":"Basic implementation for Level-9: find feature. (#13)","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":43,"deletions":0},"sh":{"insertions":1,"deletions":1}}},{"hash":"11ef984fcfaba268c4b2877d489f8f521cf65edb","messageTitle":"Use NLP for dates parsing and include time in formatting. (#14)","messageBody":"* Better dates parsing and formatting.\r\n* Fix test command.","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":14,"deletions":1}}},{"hash":"94ad2b65ad49b79c7d5aee01174f933cb6c44546","messageTitle":"Run through code formatter. (#15)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":137}}}]},{"date":"2021-10-26","commitResults":[{"hash":"c401a189948a103ae9d83dbeb174efbcce98fdd5","messageTitle":"Fix code quality feedback #16 (#17)","messageBody":"Co-authored-by: Goh Yisheng \u003cmail.yisheng@gmail.com\u003e","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"fd53b7493e1c2d04d7624e41b9ddaf1e58466ffc","messageTitle":"Implement A-Assertions (#18)","messageBody":"* Add assertions.\r\n\r\n* Create QA build.\r\n\r\n* Fix build.\r\n\r\n* Update readme.\r\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0},"sh":{"insertions":2,"deletions":2},"md":{"insertions":3,"deletions":0}}}]},{"date":"2021-11-14","commitResults":[{"hash":"ff37085622d1a6d97c8d40a3b7a8f8bcb0fd47f2","messageTitle":"Add java docs (#25)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"lockarhythm":{"java":1193,"md":54,"fxml":0,"sh":33,"bat":0,"gradle":0,"txt":27}},"authorContributionVariance":{"lockarhythm":9057.754},"authorDisplayNameMap":{"lockarhythm":"GOH ..HENG"}}
