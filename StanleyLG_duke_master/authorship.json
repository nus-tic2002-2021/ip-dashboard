[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"# duke.duke project template","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StanleyLG":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StanleyLG":1,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.parser.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.parser.CommandParser;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    private static StorageTaskList storageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    private UI ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * Beginning function taking in filepath","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param filePath - filepath to storage","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"        storageTaskList \u003d new StorageTaskList(filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"            taskList \u003d new TaskList(storageTaskList.load());","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"                Command c \u003d CommandParser.parse(fullCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"                c.execute(taskList, ui, storageTaskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"                ui.showError(e);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"            } finally {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"                ui.showLine();","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"        ui.showExit();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"StanleyLG":52,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"     * Throws base class for self-defined exceptions.","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     * @param message   the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    public DukeException() {}","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"StanleyLG":15}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class EmptyDescriptionException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     * Throws when user did not give a description for the task.","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     * @param message   the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":14}},{"path":"src/main/java/duke/exception/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"public class EmptyTaskListException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     * Throws when the task list is empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * @param message Printing message overload.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    public EmptyTaskListException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    /*","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":16}},{"path":"src/main/java/duke/exception/SavingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class SavingException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"     * Throws when there is problem saving the current task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     * @param message   the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    public SavingException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":14}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class TaskNotFoundException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"     * Throws when failed to identify task, either given wrong information or task does not exist.","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     * @param message   the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    public TaskNotFoundException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":13}},{"path":"src/main/java/duke/exception/TimeManagementException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class TimeManagementException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    /** Throws when date-time not given for deadline/event task. */","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"    public TimeManagementException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":8}},{"path":"src/main/java/duke/exception/TimeParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"public class TimeParseException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     * Throws when error occurred while parsing time.","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     * @param message the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    public TimeParseException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":13}},{"path":"src/main/java/duke/exception/UnknownSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.exception;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class UnknownSyntaxException extends DukeException{","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"     * Throws when user input does not categorize under any of the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     * @param message   the pre-defined message.","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    public UnknownSyntaxException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":12}},{"path":"src/main/java/duke/parser/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    /** Declares CommandBase Object. */","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    private CommandBase commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    /** Checks if the input is \"bye\". */","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    private boolean shouldExit;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"     * Checks if to exit or continue the runtime after each execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList task list object","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param ui ui object","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList storage task list object","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    public void execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        this.shouldExit \u003d commandBase.execute(taskList, ui, storageTaskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"     * Checks if isExit true.","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"     * @return isExit true or false.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"        return this.shouldExit;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"     * Returns CommandBase object.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"     * @return CommandBase object.","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"    public CommandBase getCommandBase() {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"        return commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"    /** Sets  CommandBase object. */","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"    public void setCmd(CommandBase commandBase) {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"        this.commandBase \u003d commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":49}},{"path":"src/main/java/duke/parser/CommandAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class CommandAdd extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     * Creates Add Command Constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     * @param command the full command.","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    public CommandAdd(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":13}},{"path":"src/main/java/duke/parser/CommandBase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.EmptyTaskListException;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.UnknownSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.ReturnMessages;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":" * Creates base command class.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":" * CommandBase is the base class of all command objects. It contains some public attributes and methods.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":" * Each class that inherits CommandBase only needs to perform its own duty.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"public class CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    /** Declares command user input. */","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    protected String fullCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    /** Declares command to be executed. */","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"    protected String keyword;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    /** Declares command parameters. */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    protected String detail;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    /** Returns message object. */","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    private static ReturnMessages returnMessage \u003d new ReturnMessages();","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     * Tells the command to parse into keyword and detail(If needed).","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     * @param command full command of user input.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"     * @throws IndexOutOfBoundsException thrown when able to identify keyword but not the rest of the descriptions","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"     * @throws UnknownSyntaxException thrown when syntax is unreadable","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"     * @throws EmptyDescriptionException thrown after detecting description is empty","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"    public CommandBase(String command) throws ArrayIndexOutOfBoundsException, UnknownSyntaxException, EmptyDescriptionException{","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"        this.fullCommand \u003d command;","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"        this.keyword \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"        this.detail \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"        if(command.contains(CommandEnums.TODO.getName()) || command.contains(CommandEnums.DEADLINE.getName()) || command.contains(CommandEnums.EVENT.getName()) || command.contains(CommandEnums.FIND.getName())){","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"            try {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"                String[] toWords \u003d command.split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"                this.keyword \u003d toWords[0];","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"                this.detail \u003d toWords[1];","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"            } catch(ArrayIndexOutOfBoundsException aio) {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"                if(command.contains(CommandEnums.TODO.getName()) || command.contains(CommandEnums.DEADLINE.getName()) || command.contains(CommandEnums.EVENT.getName())){","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"                    throw new EmptyDescriptionException(keyword);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"                } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"                    throw new UnknownSyntaxException(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"    public CommandBase() {","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"     * Executes command.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList user generate.","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"     * @param ui show interactive information.","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList info where to storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"     * @return if true, the program stops, otherwise it starts.","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList){","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"     * Replies a done/add command.","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList gets the full task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"     * @throws EmptyTaskListException thrown if task list is empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"     * @throws UnknownSyntaxException thrown if syntax is unknown.","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"     * @throws TaskNotFoundException thrown if task is not found.","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"    public  void reply(TaskList taskList) throws EmptyTaskListException, UnknownSyntaxException, TaskNotFoundException {","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"        if(fullCommand.contains(\"done\")){","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"            try {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"                String[] doneCommand \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"                taskList.getTask(Integer.parseInt(doneCommand[1]) - 1).setDone();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"                returnMessage.taskDoneFeedback();","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"                System.out.println(\"     \" + taskList.getTask(Integer.parseInt(doneCommand[1]) - 1).toString());","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"                returnMessage.separator();","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"                return;","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"StanleyLG"},"content":"            } catch(NumberFormatException nf){","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"StanleyLG"},"content":"                throw new TaskNotFoundException(\"task not found\");","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.taskAddFeedback();","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"StanleyLG"},"content":"            System.out.println(\"     \" + taskList.getLastTask().toString());","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"StanleyLG"},"content":"            System.out.println(\"     Now you have \" + taskList.getListSize() + \" tasks in the list.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.separator();","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"StanleyLG"},"content":"        } catch(ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"StanleyLG"},"content":"            throw new EmptyTaskListException(\"empty task\");","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":104}},{"path":"src/main/java/duke/parser/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class CommandBye extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * Creates bye command constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     * @param command Full command.","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    public CommandBye(String command){","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     * Executes of bye command.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList user generate.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * @param ui show interactive information.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList info where to storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * @return if true, the program stops, otherwise it starts.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        storageTaskList.save(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":30}},{"path":"src/main/java/duke/parser/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TimeManagementException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TimeParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.UnknownSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"public class","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"CommandDeadline extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    static final int  dateLength \u003d 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * Creates deadline constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * @param command full command.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    public CommandDeadline(String command){","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"     * Executes deadline command.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList user generate.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     * @param ui show interactive information.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList info where to storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"     * @return if true, the program stops, otherwise it starts.","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"     * @throws TimeManagementException thrown when datetime not specified","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"     * @throws TimeParseException thrown when datetime format is wrong","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) throws TimeManagementException, TimeParseException{","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"        boolean success \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"            if (!CommandEnums.DEADLINE.getName().equals(super.keyword)){","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"                throw new UnknownSyntaxException(super.keyword);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"            String[] deadlineCommand \u003d super.detail.split(\"/by\", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"            //region time parse","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"            String[] dateTimes \u003d deadlineCommand[1].split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"            LocalDateTime dateT \u003d timeParse(dateTimes[1]);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"            //endregion","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"            Task task \u003d new Deadline(deadlineCommand[0], dateT);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"            success \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeManagementException();","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"        } catch (TimeParseException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"        if (success) {","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"            reply(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"     * Returns parsed time as format {DD-MM-YYYY}.","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"     * @param str - the string of datetime.","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"     * @return - Date in its correct format.","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"     * @throws TimeParseException thrown when date format is wrong","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"    private LocalDateTime timeParse(String str) throws TimeParseException{","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"        if (!str.contains(\"/\")){","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(\"DateTime Format DD/MM/YYYY\");","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"        // gen yyyy,mm,dd ssss","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"        String[] date \u003d str.split(\"/\", 3);","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"        if (date.length \u003c dateLength){","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(\"DateTime Format DD/MM/YYYY\");","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"        // gen time","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"        String[] time \u003d date[2].split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"        int year \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"        int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"        int dayOfMth \u003d Integer.parseInt(time[0]);","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"        int hour \u003d get24HrFormat(time[1]);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"StanleyLG"},"content":"        LocalDateTime localDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"StanleyLG"},"content":"            localDate \u003d LocalDateTime.of(year,month,dayOfMth,hour,0,0,0);","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"StanleyLG"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"StanleyLG"},"content":"        return localDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"StanleyLG"},"content":"     * Transforms time to 24hour format.","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"StanleyLG"},"content":"     * @param t string such as [1AM] [10PM].","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"StanleyLG"},"content":"     * @return integer time such as 1, 22.","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"StanleyLG"},"content":"    private int get24HrFormat(String t){","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"StanleyLG"},"content":"        int timeInterval \u003d 12;","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"StanleyLG"},"content":"        int timeVal;","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"StanleyLG"},"content":"        if(t.contains(\"AM\")){","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"StanleyLG"},"content":"            timeVal \u003d Integer.parseInt(t.replace(\"AM\", \"\").stripTrailing());","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"StanleyLG"},"content":"        } else{","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"StanleyLG"},"content":"            timeVal \u003d Integer.parseInt(t.replace(\"PM\", \"\").stripTrailing());","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"StanleyLG"},"content":"            timeVal +\u003dtimeInterval;","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"StanleyLG"},"content":"        return timeVal;","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":119}},{"path":"src/main/java/duke/parser/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class CommandDelete extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     * Creates delete command constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     * @param command full command.","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    public CommandDelete(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * Executes delete command.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList user generate.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     * @param ui show interactive information.","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList info where to storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     * @return if true, the program stops, otherwise it starts.","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        taskList.deleteTask(Integer.parseInt(super.fullCommand.split(\" \", 2)[1]));","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":31}},{"path":"src/main/java/duke/parser/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class CommandDone extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * Creates done command constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     * @param command full command","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    public CommandDone(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     * Executes done command.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList user generate.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * @param ui show interactive information.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList info where to storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * @return if true, the program stops, otherwise it starts.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        reply(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":30}},{"path":"src/main/java/duke/parser/CommandEnums.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public enum CommandEnums {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    SAVE(\"save\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    FIND(\"find\")","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    ;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"     * Creates Enum  constructor","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     * @param name the keyword for the command","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    CommandEnums(String name) {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    private String name;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    public String getName() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        return name;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"StanleyLG":33}},{"path":"src/main/java/duke/parser/CommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.UnknownSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"public class CommandError extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     * Creates error command constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * Used when unknown syntax is detected.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     * @param command full command","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     * @throws UnknownSyntaxException throws unknown syntax if unable to identify","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    public CommandError(String command) throws UnknownSyntaxException{","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"        throw new UnknownSyntaxException(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":17}},{"path":"src/main/java/duke/parser/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TimeManagementException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TimeParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.UnknownSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Events;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"public class CommandEvent extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    static final int  dateLength \u003d 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * Creates event Command Constructor","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"    public CommandEvent(String command)  {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"     * Executes event command.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList user generate.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     * @param ui show interactive information.","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList info where to storage.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     * @return if true, the program stops, otherwise it starts.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"     * @throws TimeManagementException time management exception if no datetime is given","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) throws TimeManagementException{","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"        boolean success \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"            if (!CommandEnums.EVENT.getName().equals(super.keyword)){","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"                throw new UnknownSyntaxException(super.keyword);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"            String[] dt \u003d super.detail.split(\"/at\", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"            String description \u003d dt[0];","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"            String dateTime \u003d dt[1].substring(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"            LocalDate date \u003d dateParse(dateTime);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"            String[] dateTimeInformation \u003d dateTime.split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"            String timeRange \u003d dateTimeInformation[1];","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"            String from \u003d timeRange.split(\"-\", 2)[0];","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"            String to \u003d timeRange.split(\"-\", 2)[1];","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"            Task task \u003d new Events(description, date, timeParse(get24HrFormat(from)),timeParse(get24HrFormat(to)));","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"            success \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeManagementException();","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"        if (success) {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"            reply(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"     * Returns parsed time in format  {DD-MM-YYYY}.","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"     * @param str - the string of datetime.","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"     * @return - Date in its correct format.","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"     * @throws TimeParseException thrown when time format is wrong","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"    private LocalDate dateParse(String str) throws TimeParseException{","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"        if (!str.contains(\"/\")){","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(\"DateTime Format DD/MM/YYYY\");","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"        // gen yyyy,mm,dd ssss","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"        String[] date \u003d str.split(\"/\", 3);","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"        if (date.length \u003c dateLength){","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(\"DateTime Format DD/MM/YYYY\");","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"        // gen time","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"        String[] time \u003d date[2].split(\" \", 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"        int year \u003d Integer.parseInt(date[0]);","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"        int month \u003d Integer.parseInt(date[1]);","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"        int dayOfMth \u003d Integer.parseInt(time[0]);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"        LocalDate localDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"StanleyLG"},"content":"            localDate \u003d LocalDate.of(year,month,dayOfMth);","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"StanleyLG"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"StanleyLG"},"content":"            throw new TimeParseException(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"StanleyLG"},"content":"        return localDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"StanleyLG"},"content":"     * Transforms time to 24hour format.","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"StanleyLG"},"content":"     * @param t string such as [1AM] [10PM].","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"StanleyLG"},"content":"     * @return integer time such as 1, 22.","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"StanleyLG"},"content":"    private int get24HrFormat(String t){","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"StanleyLG"},"content":"        int timeinterval \u003d 12;","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"StanleyLG"},"content":"        int timeVal;","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"StanleyLG"},"content":"        if(t.contains(\"AM\")){","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"StanleyLG"},"content":"            timeVal \u003d Integer.parseInt(t.replace(\"AM\", \"\").stripTrailing());","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"StanleyLG"},"content":"        } else{","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"StanleyLG"},"content":"            timeVal \u003d Integer.parseInt(t.replace(\"PM\", \"\").stripTrailing());","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"StanleyLG"},"content":"            timeVal +\u003dtimeinterval;","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"StanleyLG"},"content":"        return timeVal;","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"StanleyLG"},"content":"     * Returns time in LocalTime format.","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"StanleyLG"},"content":"     * @param t the integer time [1] [22]","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"StanleyLG"},"content":"     * @return time in LocalTime [01:00:00] [22:00:00]","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"StanleyLG"},"content":"    private LocalTime timeParse(int t){","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"StanleyLG"},"content":"        return LocalTime.of(t,0,0);","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":128}},{"path":"src/main/java/duke/parser/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class CommandFind extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * Creates find Command Constructor","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    public CommandFind(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * Executes done command","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList the full task list for saving purpose","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param ui       UI object","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList  storage object","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        try{","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"            taskList.printFoundTaskList(super.detail);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        } catch(Exception e){","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":33}},{"path":"src/main/java/duke/parser/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class CommandList extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * Creates list Command Constructor","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    public CommandList(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * Executes list command","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList the full task list for saving purpose","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param ui       UI object","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList  storage object","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        taskList.printTaskList();","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":29}},{"path":"src/main/java/duke/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class CommandParser {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"     * Generates different CMD objects according to the input parameters","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"     * @see CommandBase","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"        Command command \u003d new Command();","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        if (fullCommand.contains(CommandEnums.DONE.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandDone(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.LIST.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandList(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.DELETE.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandDelete(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.BYE.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandBye(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.SAVE.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandSave(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.TODO.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandTodo(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.EVENT.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandEvent(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"        } else if (fullCommand.contains(CommandEnums.DEADLINE.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandDeadline(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        } else if(fullCommand.contains(CommandEnums.FIND.getName())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandFind(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"            command.setCmd(new CommandError(fullCommand));","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"        return command;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":35}},{"path":"src/main/java/duke/parser/CommandSave.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"public class CommandSave extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     * Creates save Command Constructor","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    public CommandSave(String command){","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * Executes save command","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList the full task list for saving purpose","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param ui       UI object","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList  storage object","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        storageTaskList.save(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":29}},{"path":"src/main/java/duke/parser/CommandTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.UnknownSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageFixedDurationReference;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import duke.task.FixedDurationTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.UI;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"public class CommandTodo extends CommandBase {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    private static StorageFixedDurationReference loadFixedDurationRecord;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    private static FixedDurationTaskList fixedDurationTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"     * Creates TO DO Command","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    public CommandTodo(String command) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"        super(command);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     * Executes TO DO command","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList the full task list for saving purpose","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"     * @param ui       UI object","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"     * @param storageTaskList  storage object","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"    public boolean execute(TaskList taskList, UI ui, StorageTaskList storageTaskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"        boolean success \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"            if (!CommandEnums.TODO.getName().equals(super.keyword)){","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"                throw new UnknownSyntaxException(super.keyword);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"            loadFixedDurationRecord \u003d new StorageFixedDurationReference();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"            fixedDurationTaskList \u003d new FixedDurationTaskList(loadFixedDurationRecord.load());","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"            int duration \u003d fixedDurationTaskList.findRecord(super.detail);","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"            Task task;","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"            if (duration \u003e 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"                task \u003d new ToDos(super.detail, duration);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"            } else{","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"                task \u003d new ToDos(super.detail);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"            success \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"            throw new UnknownSyntaxException(super.keyword);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"        if (success) {","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"            reply(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"        return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":59}},{"path":"src/main/java/duke/storage/StorageFixedDurationReference.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.FixedDurationTask;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.task.FixedDurationTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.ReturnMessages;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import java.io.File;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"public class StorageFixedDurationReference {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    protected boolean isExist;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"    protected String fileName;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    protected File file;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    private static ReturnMessages returnMessage \u003d new ReturnMessages();","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    Scanner scanner;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"    /** Creates Storage_Unscheduled object. */","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    public StorageFixedDurationReference() {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"        //this.fileName \u003d fileName;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        this.file \u003d new File(System.getProperty(\"user.dir\") + \"/src/main/java/Duke/storage/fixedDurationTask.txt\"); // create a File for the given file path","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        this.fileName \u003d file.getName();","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"     * loads info from hard disk.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     * @return task list from hard disk.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"    public FixedDurationTaskList load() throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"        FixedDurationTaskList unscheduledRecords \u003d new FixedDurationTaskList();","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"                String line;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"                    // process the line","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"                    unscheduledRecords.addTask(decodeStrToFixedDurationTask(line));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"                //fail to parse","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"                throw new DukeException(\"file parse fail\");","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"            try {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"                createFile();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"                //fail to create file","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"                throw new DukeException(\"create file fail\");","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"        return unscheduledRecords;","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"     * Creates File if not exist.","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"     * @exception  IOException throws a IO Exception if file exists.","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"            boolean create \u003d file.createNewFile();","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"            this.isExist \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"            System.out.println(\"File exists\");","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"        this.isExist \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.createSuccessFeedback(file.getName());","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"     * Decodes the str to unscheduled task records with description and duration.","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"     * @param str the full string per line.","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"     * @return created task object.","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"    public FixedDurationTask decodeStrToFixedDurationTask(String str) {","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"        String[] line \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"        FixedDurationTask unscheduledRecord;","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"        unscheduledRecord \u003d new FixedDurationTask(line[0], Integer.parseInt(line[1]));","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"        return unscheduledRecord;","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"StanleyLG":90}},{"path":"src/main/java/duke/storage/StorageTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.*;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.ReturnMessages;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import java.io.*;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"public class StorageTaskList {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    protected boolean isExist;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    protected String fileName;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    protected File file;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"    private static ReturnMessages returnMessage \u003d new ReturnMessages();","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    private static StorageFixedDurationReference loadFixedDurationRecord;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    private static FixedDurationTaskList fixedDurationTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    Scanner scanner;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * Checks current file existence status.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"     * @return true or false.","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    public boolean existence(){","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        return isExist;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     * Creates Storage object.","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     * @param fileName   the file saving the information of task list","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"    public StorageTaskList(String fileName) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"        this.file \u003d new File(System.getProperty(\"user.dir\") + \"/src/main/java/Duke/storage/\"+fileName); // create a File for the given file path","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"     * Loads info from hard disk.","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"     * @return task list from hard disk.","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.loadingFileFeedback();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"                String line;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"                    // process the line","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"                    taskList.addTask(decodeStrToTask(line));","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"                //fail to parse","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"                throw new DukeException(\"file parse fail\");","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"                createFile();","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"                //fail to create file","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"                throw new DukeException(\"create file fail\");","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.loadSuccessFeedback();","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"        return taskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"     * Creates File if not exist.","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"     * @exception  IOException throws a IO Exception if file exists.","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"            boolean create \u003d file.createNewFile();","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"            this.isExist \u003d true;","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"            System.out.println(\"File exists\");","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"        this.isExist \u003d true;","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.createSuccessFeedback(file.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"StanleyLG"},"content":"     * Saves task list to hard disk.","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"StanleyLG"},"content":"     * @param taskList - data to save.","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"StanleyLG"},"content":"    public void save(TaskList taskList)  {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"StanleyLG"},"content":"        FileWriter myWriter;","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"StanleyLG"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"StanleyLG"},"content":"            myWriter \u003d new FileWriter(file.getAbsoluteFile(), false);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"StanleyLG"},"content":"            FileWriter finalMyWriter \u003d myWriter;","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"StanleyLG"},"content":"            taskList.getTaskList().forEach((task) -\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"StanleyLG"},"content":"                try {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"StanleyLG"},"content":"                    finalMyWriter.write(task.encodeTask() + \"\\n\");","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"StanleyLG"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"StanleyLG"},"content":"                    //","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"StanleyLG"},"content":"                    throw new DukeException(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"StanleyLG"},"content":"                }","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"StanleyLG"},"content":"            });","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"StanleyLG"},"content":"            myWriter.close();","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"StanleyLG"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"StanleyLG"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"StanleyLG"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.saveSuccessFeedback();","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"StanleyLG"},"content":"     * Decodes the str to its individual task format.","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"StanleyLG"},"content":"     * @param str the full string per line.","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"StanleyLG"},"content":"     * @return created task object.","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"StanleyLG"},"content":"    public Task decodeStrToTask(String str) {","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"StanleyLG"},"content":"        String[] lines \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"StanleyLG"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"StanleyLG"},"content":"        switch (lines[0]) {","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"StanleyLG"},"content":"        case \"T\":","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"StanleyLG"},"content":"            loadFixedDurationRecord \u003d new StorageFixedDurationReference();","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"StanleyLG"},"content":"            fixedDurationTaskList \u003d new FixedDurationTaskList(loadFixedDurationRecord.load());","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"StanleyLG"},"content":"            int duration \u003d fixedDurationTaskList.findRecord(lines[2]);","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"StanleyLG"},"content":"            if (duration \u003e 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"StanleyLG"},"content":"                task \u003d new ToDos(lines[2], duration);","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"StanleyLG"},"content":"            } else{","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"StanleyLG"},"content":"                task \u003d new ToDos(lines[2]);","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"StanleyLG"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"StanleyLG"},"content":"        case \"D\":","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"StanleyLG"},"content":"            LocalDate date \u003d LocalDate.parse(lines[3]);","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"StanleyLG"},"content":"            LocalTime time \u003d LocalTime.parse(lines[4]);","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"StanleyLG"},"content":"            task \u003d new Deadline(lines[2], LocalDateTime.of(date,time));","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"StanleyLG"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"StanleyLG"},"content":"        case \"E\":","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"StanleyLG"},"content":"            task \u003d new Events(lines[2], LocalDate.parse(lines[3]), LocalTime.parse(lines[4]), LocalTime.parse(lines[5]));","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"StanleyLG"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"StanleyLG"},"content":"        if (Task.DONE.equals(lines[1])) {","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"StanleyLG"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"StanleyLG"},"content":"                task.setDone();","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"StanleyLG"},"content":"        return task;","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"StanleyLG":153}},{"path":"src/main/java/duke/storage/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"T | 0 | read book | 1","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"D | 0 | return book  | 2021-10-24 | 22:00","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"D | 0 | return book  | 2021-10-24 | 22:00","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"E | 0 | project meeting  | 2021-10-24 | 14:00 | 16:00","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"D | 0 | return book  | 2021-11-05 | 22:00","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"E | 0 | project meeting  | 2022-07-30 | 14:00 | 16:00","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"E | 0 | new year  | 2022-02-02 | 00:00 | 12:00","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"D | 0 | return book  | 2020-10-29 | 03:00","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"D | 0 | return book  | 2021-12-25 | 16:00","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"T | 0 | eat | 0","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"E | 0 | Finish Homework  | 2021-12-25 | 16:00 | 18:00","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"E | 0 | new year  | 2022-02-02 | 00:00 | 12:00","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"T | 0 | read book | 1","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"T | 0 | study book | 0","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"StanleyLG":14}},{"path":"src/main/java/duke/storage/fixedDurationTask.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"read sales report | 2","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"read book | 1","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"do homework | 4","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"submit claims | 1","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"StanleyLG":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     * Creates Deadline task.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     * @param description - the task for the deadline.","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"     * @param by - the deadline\u0027s datetime.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"        super(description);","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    /** Prints task by its own style. */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.toLocalDate().toString() + \"[\"+ by.toLocalDate().getDayOfWeek() +\"] \"+ by.toLocalTime().toString()+\")\";","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    /** Encodes function for storage within text file. */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    public String encodeTask() {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"        return \"D\" + super.encodeTask() + \" | \" + by.toLocalDate().toString() + \" | \" + by.toLocalTime().toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"StanleyLG":31}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"public class Events extends Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    protected LocalTime start;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    protected LocalTime end;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     * Creates Event task.","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"     * @param description - Description of Event.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"     * @param start - Date/Time event is held.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"     * @param end - Date/Time event ends.","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * @param date - the date event is held.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    public Events(String description, LocalDate date, LocalTime start, LocalTime end) {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"        super(description);","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    /** Prints task by its own style. */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        return \"[E]\" + super.toString() + \" (on:\" + date.toString() + \"[\" + date.getDayOfWeek().toString() + \"]     from:\" + start.toString() +\"    to:\" + end.toString() +\")\";","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    /** Encodes function for storage within text file */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"    public String encodeTask() {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"        return \"E\" + super.encodeTask() + \" | \" + date.toString() + \" | \" + start.toString() + \" | \" + end.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"StanleyLG":35}},{"path":"src/main/java/duke/task/FixedDurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class FixedDurationTask {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    protected String description;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    protected int duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     * Creates FixedDuration Task.","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     * @param desc its fixed description.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     * @param duration its fixed duration.","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    public FixedDurationTask(String desc, int duration){","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"        this.description \u003d desc;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    public String getDesc(){","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"        return this.description;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    public int getDuration(){","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        return this.duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"StanleyLG":26}},{"path":"src/main/java/duke/task/FixedDurationTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"public class FixedDurationTaskList {","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    protected int listSize;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    private ArrayList\u003cFixedDurationTask\u003e unscheduleTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    /** Creates Fixed Duration Task List */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    public FixedDurationTaskList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        unscheduleTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * Creates Fixed Duration Task List  with records within.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param load - the task list that already contained task.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"    public FixedDurationTaskList(FixedDurationTaskList load) {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"        this.listSize \u003d load.listSize;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        this.unscheduleTaskList \u003d load.unscheduleTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"     * Gets the list size.","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"     * @return - list size in integer.","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    public int getListSize(){","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"        return this.listSize;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"     * Adds an fixed duration task record to  list.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"     * @param task - the full task information.","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"    public void addTask(FixedDurationTask task){","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"        this.unscheduleTaskList.add(task);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"        this.listSize++;","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"     * Finds if a fixed duration task exists in record.","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"     * @param description find by description.","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"     * @return the task ID if exists.","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"    public int findRecord(String description){","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"        for(FixedDurationTask ut : unscheduleTaskList){","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"            if(description.equals(ut.getDesc())){","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"                return ut.getDuration();","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"        return 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":60}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    protected String description;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    public static final String DONE \u003d \"1\";","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"    public static final String UNDONE \u003d \"0\";","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     * Creates Task base.","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"     * @param description - the description string.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * Returns task\u0027s current status.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * @return - done or not done.","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"     * Returns task\u0027s current status for code usage.","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     * @return - 0 or 1.","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"    public String getStatusCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"        return (isDone ? DONE : UNDONE); // mark done task with 1","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"     * Returns the full description of each task.","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"     * @return - returns task description.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"    public String getTaskInfo(){","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"    /** Sets the task to Done. */","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"    public void setDone(){","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"     * Base Function to print task.","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"     * @return tasks [] TASK.","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"        return \"[\"+getStatusIcon()+\"] \" + description;","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"     * Encodes task for storage.","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"     * @return | X | TASK.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"    public String encodeTask() {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"        return \" | \" + getStatusCode() + \" | \" + description;","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"StanleyLG":70}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.EmptyTaskListException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.ui.ReturnMessages;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"public class TaskList {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    protected int listSize;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    private static ReturnMessages printer \u003d new ReturnMessages();","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    /** Creates task list. */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     * Creates Task list with tasks within.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"     * @param load - the task list that already contained task.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    public TaskList(TaskList load) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        this.listSize \u003d load.listSize;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        this.taskList \u003d load.taskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"     * Deletes a specific task uniquely identified via taskID.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     * @param taskID - the unique identifier for each task.","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     * @throws TaskNotFoundException - when a task is not found.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"     * @throws EmptyTaskListException - when the task list is empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"    public void deleteTask(int taskID) throws TaskNotFoundException, EmptyTaskListException {","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"        int taskPosition \u003d taskID -1;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"        if(taskPosition \u003e this.listSize || taskPosition \u003c 0){","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"            throw new TaskNotFoundException(\"task not found\");","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task: \" );","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     \" + taskList.get(taskPosition).toString());","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"        this.taskList.remove(taskPosition);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"        this.listSize--;","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"        if(this.listSize \u003d\u003d 0){","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"            throw new EmptyTaskListException(\"empty task\");","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Now you have \" + this.listSize + \" tasks in the list.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"        printer.separator();","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"     * Adds a task to task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"     * @param task - the full task information.","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"    public void addTask(Task task){","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"        this.listSize++;","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"     * Gets a task via its task ID.","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"     * @param ID - the unique identifier for a task.","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"     * @return - returns the task.","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"    public Task getTask(int ID){","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"        return taskList.get(ID);","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"     * Gets the last task added.","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"     * @return - return the task.","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"    public Task getLastTask(){","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"        return taskList.get(listSize-1);","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"     * Gets the list size.","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"     * @return - list size in integer.","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"    public int getListSize(){","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"        return this.listSize;","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"StanleyLG"},"content":"    public void save(){}","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"StanleyLG"},"content":"     * Prints the tasks within the task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"StanleyLG"},"content":"     * @throws EmptyTaskListException - thrown if task list is empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"StanleyLG"},"content":"    public void printTaskList() throws EmptyTaskListException {","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"StanleyLG"},"content":"        if(this.listSize \u003d\u003d 0){","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"StanleyLG"},"content":"            throw new EmptyTaskListException(\"empty task\");","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"StanleyLG"},"content":"        printer.printFullTaskList(taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"StanleyLG"},"content":"     * Getter for getting the task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"StanleyLG"},"content":"     * @return - returns entire task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"StanleyLG"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"StanleyLG"},"content":"        return taskList;","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"StanleyLG"},"content":"     * Finds tasks containing specific keyword.","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"StanleyLG"},"content":"     * @param keyword - the keyword to find.","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"StanleyLG"},"content":"     * @throws EmptyTaskListException - thrown if task list is empty.","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"StanleyLG"},"content":"    public void printFoundTaskList(String keyword) throws EmptyTaskListException {","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"StanleyLG"},"content":"        if(this.listSize \u003d\u003d 0){","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"StanleyLG"},"content":"            throw new EmptyTaskListException(\"empty task\");","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"StanleyLG"},"content":"        printer.taskFound(keyword, taskList);","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"StanleyLG":129}},{"path":"src/main/java/duke/task/Task_Enum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"/** Enumerate for Task */","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"public enum Task_Enum {","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"    TODO,","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"    DEADLINE,","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    EVENT,","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"StanleyLG":8}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.task;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"    protected int duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"     * Creates To Do task","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"     * @param description - Description of To Do task.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        this(description,0);","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"     * Creates To Do task.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"     * @param description - Description of To Do task.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"     * @param duration - unscheduled fixed duration.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"    public ToDos(String description, int duration) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        super(description);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    public int getDuration(){","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        return this.duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    public void setDuration(int duration){","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"    /** Prints task by its own style. */","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"        if(this.duration\u003e0){","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"            return \"[T]\" + super.toString()+ \" (requires: \" + duration + \" Hour)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"    /** Encodes function for storage within text file. */","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"    public String encodeTask() {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"        return \"T\" + super.encodeTask() + \" | \" + duration;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"StanleyLG":48}},{"path":"src/main/java/duke/ui/ReturnMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"/** Handles message output. */","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"public class ReturnMessages {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    public void separator(){","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks when marking a task done. */","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    public void taskDoneFeedback(){","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks when adding a task. */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"    public void taskAddFeedback(){","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks on program startup. */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    public void welcomeFeedback(){","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Here are my functionality....\");","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Check Existing Tasks:    list\");","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Mark a Task done:        done {taskID}\");","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Delete a Task:           delete {taskID}\");","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Add a Todo Task:         todo {action}\");","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Save Current State:      save\");","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Add a Event Task:        event xxxx /at {date by YYYY/MM/DD} {startTime}AM/PM-{endTime}AM/PM\");","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Add a Deadline Task:     deadline XXXX /by {date by YYYY/MM/DD} {Time}AM/PM\");","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    End the program:         bye\");","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks on program exit. */","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"    public void exitFeedback(){","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks when loading file. */","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"    public void loadingFileFeedback(){","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Loading File...\");","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks on file load success. */","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"    public void loadSuccessFeedback(){","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     File Loaded Successfully, use command \u0027list\u0027 to view...\");","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks on file save. */","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"    public void saveSuccessFeedback(){","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Successfully wrote to the file.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks on file create. */","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"    public void createSuccessFeedback(String name){","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"File created: \" + name);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"StanleyLG"},"content":"     * Returns full task list with numbering.","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"StanleyLG"},"content":"     * @param list the full task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"StanleyLG"},"content":"    public void printFullTaskList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"StanleyLG"},"content":"        int numbering \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"StanleyLG"},"content":"        for(Task t : list){","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"StanleyLG"},"content":"            System.out.println(\"    \"+numbering+\".\"+t.toString());","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"StanleyLG"},"content":"            numbering++;","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"StanleyLG"},"content":"     * Returns task found with keyword with its correct numbering.","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"StanleyLG"},"content":"     * @param key keyword.","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"StanleyLG"},"content":"     * @param list full task list.","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"StanleyLG"},"content":"    public void taskFound(String key, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"StanleyLG"},"content":"        int numbering \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"StanleyLG"},"content":"        for(Task t : list){","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"StanleyLG"},"content":"            if(t.getTaskInfo().contains(key)){","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"StanleyLG"},"content":"                System.out.println(\"    \"+numbering+\".\"+t.toString());","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"StanleyLG"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"StanleyLG"},"content":"            numbering++;","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"StanleyLG"},"content":"     * Feedbacks message on emptyDescription Exception thrown.","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"StanleyLG"},"content":"     * @param taskType The type of task (To Do, Event, Deadline).","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_emptyDescription(String taskType){","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"StanleyLG"},"content":"        System.out.printf(\"     OOPS!!! The description of a %s cannot be empty.\\n\", taskType);","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks message on emptyTaskList Exception thrown. */","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_emptyTaskList(){","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     OOPS!!! The list is empty ^_^\");","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"StanleyLG"},"content":"     * Feedbacks message on unknownSyntax Exception thrown.","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"StanleyLG"},"content":"     * @param message - user input.","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_unknownSyntax(String message){","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"StanleyLG"},"content":"        System.out.printf(\"     OOPS!!! I\u0027m sorry, but I don\u0027t know what [%s] means :-(\\n\", message);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"StanleyLG"},"content":"     * Feedbacks message on task not found Exception thrown.","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"StanleyLG"},"content":"     * @param message - the task description.","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_taskNotFound(String message){","lastModifiedDate":"2021-10-03"},{"lineNumber":153,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"StanleyLG"},"content":"        System.out.printf(\"     OOPS!!! Please key in by Tasks.Task ID instead of [%s]\\n\", message);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks message on noTimeConcept Exception thrown. */","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_noTimeConcept(){","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     HEY!!! Please give a due date for deadlines and events or the syntax could be wrong\");","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks message on Time Parse Exception thrown. */","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_timeParse(String message){","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"StanleyLG"},"content":"        System.out.printf(\"     There seems to have problem with your time format [%s]\\n\", message);","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks message on Saving Exception thrown. */","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_cantSave(){","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     OOPS!!! Exception caught while saving \u003e_\u003c|||\");","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks message on Loading Exception thrown. */","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_loadingError(){","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"StanleyLG"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"StanleyLG"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"StanleyLG"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"StanleyLG"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"StanleyLG"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     OOPS!!! Something went wrong while loading\");","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"StanleyLG"},"content":"    /** Feedbacks message on an Unknown Exception thrown. */","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"StanleyLG"},"content":"    public void exception_feedback_unknownError(){","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(\"     Sorry, An unknown error occurred\");","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"StanleyLG"},"content":"        separator();","lastModifiedDate":"2021-10-23"},{"lineNumber":196,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":197,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"StanleyLG":197}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.EmptyTaskListException;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.SavingException;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TimeManagementException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.UnknownSyntaxException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"import duke.exception.TimeParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"public class UI{","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"    private static ReturnMessages returnMessage \u003d new ReturnMessages();","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"    private Scanner in;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"    public void showWelcome(){","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.welcomeFeedback();","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"    public void showLoadingError(){","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.exception_feedback_loadingError();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"     * Reads cmd user input.","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"     * @return - command read from user Input.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"        boolean end \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"        String command;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"        command \u003d in.nextLine();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"StanleyLG"},"content":"        return command;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"StanleyLG"},"content":"    public void showLine() {","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.separator();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"StanleyLG"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"StanleyLG"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"StanleyLG"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"StanleyLG"},"content":"     * Returns the error msg will output by this.","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"StanleyLG"},"content":"     * All exceptions inherit DukeException.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"StanleyLG"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"StanleyLG"},"content":"     * @param e the exception object.","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"StanleyLG"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"StanleyLG"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"StanleyLG"},"content":"        if (e instanceof EmptyDescriptionException) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_emptyDescription(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"StanleyLG"},"content":"        } else if (e instanceof EmptyTaskListException) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_emptyTaskList();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"StanleyLG"},"content":"        } else if (e instanceof SavingException) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_cantSave();","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"StanleyLG"},"content":"        } else if (e instanceof TaskNotFoundException) {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_taskNotFound(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"StanleyLG"},"content":"        } else if (e instanceof TimeManagementException) {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_noTimeConcept();","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"StanleyLG"},"content":"        } else if (e instanceof UnknownSyntaxException){","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_unknownSyntax(e.getMessage());","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"StanleyLG"},"content":"        } else if (e instanceof TimeParseException){","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_timeParse(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"StanleyLG"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"StanleyLG"},"content":"            returnMessage.exception_feedback_unknownError();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"StanleyLG"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"StanleyLG"},"content":"    public void showExit() {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"StanleyLG"},"content":"        returnMessage.exitFeedback();","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"StanleyLG":81}},{"path":"src/test/java/duke/StorageTests/StorageTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.StorageTests;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.storage.StorageTaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Events;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"import java.io.File;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"public class StorageTaskListTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"    public void storage() throws IOException {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"        LocalDateTime sample \u003d LocalDateTime.of(2021,12,25,16,0,0);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"        ToDos toDos \u003d new ToDos(\"eat\");","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", sample);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"        Events event \u003d new Events(\"Finish Homework\",sample.toLocalDate(),sample.toLocalTime(),sample.toLocalTime().plusHours(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"        tasks.addTask(toDos);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"        tasks.addTask(event);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        StorageTaskList store \u003d new StorageTaskList(\"Testing.txt\");","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"        assertFalse(store.existence());","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"        store.createFile();","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"        store.save(tasks);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"StanleyLG"},"content":"        assertTrue(store.existence());","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"StanleyLG"},"content":"        StorageTaskList store2 \u003d new StorageTaskList(\"Testing.txt\");","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(tasks.getLastTask().toString(), store2.load().getLastTask().toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"StanleyLG"},"content":"        File cleanUP \u003d new File(System.getProperty(\"user.dir\") + \"/src/main/java/Duke/storage/Testing.txt\"); // create a File for the given file path","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"StanleyLG"},"content":"        boolean wrapUp \u003d cleanUP.delete();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"StanleyLG":40}},{"path":"src/test/java/duke/TaskTests/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.TaskTests;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"    public void deadline(){","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"        LocalDateTime sample \u003d LocalDateTime.of(2021,12,25,16,0,0);","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", sample);","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(\"[D][ ] return book(by: 2021-12-25[SATURDAY] 16:00)\", deadline.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(\"D | 0 | return book | 2021-12-25 | 16:00\", deadline.encodeTask());","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"StanleyLG":21}},{"path":"src/test/java/duke/TaskTests/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.TaskTests;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Events;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"public class EventTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"    public void event(){","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        LocalDateTime sample \u003d LocalDateTime.of(2021,12,25,16,0,0);","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"        Events event \u003d new Events(\"Finish Homework\",sample.toLocalDate(),sample.toLocalTime(),sample.toLocalTime().plusHours(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(\"[E][ ] Finish Homework (on:2021-12-25[SATURDAY]     from:16:00    to:18:00)\", event.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(\"E | 0 | Finish Homework | 2021-12-25 | 16:00 | 18:00\", event.encodeTask());","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"StanleyLG":18}},{"path":"src/test/java/duke/TaskTests/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.TaskTests;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import duke.task.Events;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"public class TaskListTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"    public void TaskList(){","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"        LocalDateTime sample \u003d LocalDateTime.of(2021,12,25,16,0,0);","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"        ToDos toDos \u003d new ToDos(\"eat\");","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", sample);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"        Events event \u003d new Events(\"Finish Homework\",sample.toLocalDate(),sample.toLocalTime(),sample.toLocalTime().plusHours(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"        tasks.addTask(toDos);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"StanleyLG"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"StanleyLG"},"content":"        tasks.addTask(event);","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(3, tasks.getListSize());","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(event,tasks.getLastTask());","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(toDos, tasks.getTask(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"StanleyLG":31}},{"path":"src/test/java/duke/TaskTests/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"package duke.TaskTests;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"public class ToDosTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"    public void todo(){","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"        ToDos toDos \u003d new ToDos(\"eat\");","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(\"[T][ ] eat\", toDos.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"        assertEquals(\"T | 0 | eat\", toDos.encodeTask());","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"StanleyLG":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"StanleyLG"},"content":"to do read book","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"StanleyLG"},"content":"deadline return book","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"StanleyLG"},"content":"deadline return book /by 2021-10-24 10PM","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"StanleyLG"},"content":"deadline return book /by 2021/10/24 10PM","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"StanleyLG"},"content":"event project meeting","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"StanleyLG"},"content":"event project meeting /at 2021-10-24 2-4PM","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"StanleyLG"},"content":"event project meeting /at 2021/10/24 2PM-4PM","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"StanleyLG"},"content":"to do join sports club","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"StanleyLG"},"content":"to do borrow book","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"StanleyLG"},"content":"deadline return book /by 2021/11/5 10PM","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"StanleyLG"},"content":"event project meeting /at 2022/7/30 2PM-4PM","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"StanleyLG"},"content":"event new year /at 2022/2/2 0AM-12AM","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"StanleyLG"},"content":"save","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"StanleyLG"},"content":"list","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"done 1","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"StanleyLG"},"content":"done 2","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"list","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"StanleyLG"},"content":"done project meeting","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"StanleyLG"},"content":"done 3","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"StanleyLG"},"content":"done 5","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"StanleyLG"},"content":"done 6","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"StanleyLG":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"StanleyLG"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.duke.java","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"StanleyLG"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StanleyLG":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"StanleyLG"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"StanleyLG":1,"-":37}}]
