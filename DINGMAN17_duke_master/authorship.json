[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DINGMAN17"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"DINGMAN17"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"DINGMAN17"},"content":"    protected String by;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"DINGMAN17"},"content":"    public Deadline(String taskName, String by) {","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"DINGMAN17"},"content":"        super(taskName);","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"DINGMAN17"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"DINGMAN17"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"DINGMAN17"},"content":"        return by;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"DINGMAN17"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"DINGMAN17"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"DINGMAN17"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"DINGMAN17"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"DINGMAN17"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"DINGMAN17"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"DINGMAN17"},"content":"        if (!(o instanceof Deadline)) return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"DINGMAN17"},"content":"        if (!super.equals(o)) return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"DINGMAN17"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"DINGMAN17"},"content":"        return getBy().equals(deadline.getBy());","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"DINGMAN17"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"DINGMAN17"},"content":"        return Objects.hash(super.hashCode(), getBy());","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"DINGMAN17"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"DINGMAN17":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DINGMAN17"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"DINGMAN17"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"DINGMAN17"},"content":"    protected static String[] validTypesTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"DINGMAN17"},"content":"    public static Task[] tasks;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"DINGMAN17"},"content":"        printGreeting();","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"DINGMAN17"},"content":"        //take user input","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"DINGMAN17"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"DINGMAN17"},"content":"        validTypesTask \u003d new String[]{\"todo\", \"deadline\", \"event\"};","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"DINGMAN17"},"content":"        //initiate an Array to store tasks, assume numTask \u003c\u003d 100","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"DINGMAN17"},"content":"        tasks \u003d new Task[100];","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"DINGMAN17"},"content":"        Task.totalTasks \u003d 0;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"DINGMAN17"},"content":"        while (true) {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"DINGMAN17"},"content":"            String command \u003d in.nextLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"DINGMAN17"},"content":"            if (processInput(command)) break;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"DINGMAN17"},"content":"        System.out.println(\"Bye. Have a nice day!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"DINGMAN17"},"content":"    private static String[] checkUserInput(String command) throws InvalidUserInputException {","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"DINGMAN17"},"content":"        //TODO: improve this method","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"DINGMAN17"},"content":"        String taskType \u003d command.split(\" \")[0].toLowerCase();","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"DINGMAN17"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"DINGMAN17"},"content":"        String time \u003d null;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"DINGMAN17"},"content":"        //handle task type","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"DINGMAN17"},"content":"        if (!Arrays.asList(validTypesTask).contains(taskType)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"DINGMAN17"},"content":"            throw new InvalidUserInputException(\"Please enter a valid type of task\");","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"DINGMAN17"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"DINGMAN17"},"content":"            if (taskType.equals(\"deadline\") || taskType.equals(\"event\")){","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"DINGMAN17"},"content":"                try {","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"DINGMAN17"},"content":"                    taskName \u003d command.split(\" \", 2)[1].split(\"/\")[0].trim();","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"DINGMAN17"},"content":"                    //handle task time","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"DINGMAN17"},"content":"                    String timeFormat \u003d command.split(\"/\")[1].substring(0, 2);","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"DINGMAN17"},"content":"                    time \u003d command.split(\"/\")[1].substring(2);","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"DINGMAN17"},"content":"                    //TODO: decide whether empty time is allowed","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"DINGMAN17"},"content":"                    if (!timeFormat.equalsIgnoreCase(\"by\") \u0026\u0026 taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"DINGMAN17"},"content":"                        throw new InvalidUserInputException(\"please specify a deadline using keyword \\\"by\\\"\");","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"DINGMAN17"},"content":"                    } else if (!timeFormat.equalsIgnoreCase(\"at\") \u0026\u0026 taskType.equals(\"event\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"DINGMAN17"},"content":"                        throw new InvalidUserInputException(\"please specify a time for the event\");","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"DINGMAN17"},"content":"                    }","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"DINGMAN17"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"DINGMAN17"},"content":"                    throw new InvalidUserInputException(\"Please use \\\"/\\\" to specify the time\");","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"DINGMAN17"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"DINGMAN17"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"DINGMAN17"},"content":"            //handle task description","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"DINGMAN17"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"DINGMAN17"},"content":"                if (taskType.equals(\"todo\")){","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"DINGMAN17"},"content":"                    taskName \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"DINGMAN17"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"DINGMAN17"},"content":"                if (taskName.matches(\"[0-9]+\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"DINGMAN17"},"content":"                    throw new InvalidUserInputException(\"please enter a valid task description that contains alphabets\");","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"DINGMAN17"},"content":"                } else if (taskName.equals(\"\")){","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"DINGMAN17"},"content":"                    throw new InvalidUserInputException(\"empty task, please include the task description\");","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"DINGMAN17"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"DINGMAN17"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"DINGMAN17"},"content":"                throw new InvalidUserInputException(\"empty task, please include the task description\");","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"DINGMAN17"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"DINGMAN17"},"content":"            //TODO: add more invalid cases","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"DINGMAN17"},"content":"        return new String[]{taskType, taskName, time};","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"DINGMAN17"},"content":"    private static boolean processInput(String command) {","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"DINGMAN17"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"DINGMAN17"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"DINGMAN17"},"content":"        //print out the list","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"DINGMAN17"},"content":"        else if (command.equals(\"list\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"DINGMAN17"},"content":"            printTasks(Task.totalTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"DINGMAN17"},"content":"        //set status of a task to done","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"DINGMAN17"},"content":"        else if (command.startsWith(\"done\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"DINGMAN17"},"content":"            changeTaskStatus(command);","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"DINGMAN17"},"content":"        //add task to the list","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"DINGMAN17"},"content":"        else {","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"DINGMAN17"},"content":"            //check whether the user input is valid","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"DINGMAN17"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"DINGMAN17"},"content":"                //check if the type of task is valid","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"DINGMAN17"},"content":"                String[] inputs \u003d checkUserInput(command);","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"DINGMAN17"},"content":"                addTask(inputs);","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"DINGMAN17"},"content":"            } catch (InvalidUserInputException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"DINGMAN17"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"DINGMAN17"},"content":"                return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"DINGMAN17"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"DINGMAN17"},"content":"        return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"DINGMAN17"},"content":"    public static void printTasks(int numTask) {","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"DINGMAN17"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"DINGMAN17"},"content":"        for (int i\u003d0; i\u003c numTask; i++){","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"DINGMAN17"},"content":"            Task task \u003d tasks[i];","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"DINGMAN17"},"content":"            System.out.println(i+1+\".\"+task);","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"DINGMAN17"},"content":"    private static void printGreeting() {","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"DINGMAN17"},"content":"        //print greeting messages","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"DINGMAN17"},"content":"        String greeting \u003d \"Hey this is Blanc, welcome to your universe\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"DINGMAN17"},"content":"                + \"I will provide everything you need:))\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"DINGMAN17"},"content":"        String instruction \u003d \"Please follow the instructions below\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"DINGMAN17"},"content":"                + \"1. \\\"list\\\": print a list of tasks\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"DINGMAN17"},"content":"                + \"2. \\\"done +number\\\" (e.g. done 2): set the task status to done\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"DINGMAN17"},"content":"                + \"3. add task using \\\"todo\\\" \\\"deadline\\\" \\\"event\\\" keyword\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"DINGMAN17"},"content":"                + \"4. \\\"bye\\\": end the program\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"DINGMAN17"},"content":"                +\"Please type any command to start: \\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"DINGMAN17"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"DINGMAN17"},"content":"        System.out.println(instruction);","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"DINGMAN17"},"content":"    private static void addTask(String[] inputs) {","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"DINGMAN17"},"content":"        //check if it\u0027s a new task, if yes, add it into the list","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"DINGMAN17"},"content":"        boolean redundant \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"DINGMAN17"},"content":"        Task newTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"DINGMAN17"},"content":"        if (inputs[0].equals(\"todo\")){","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"DINGMAN17"},"content":"            newTask \u003d new Todo(inputs[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"DINGMAN17"},"content":"        } else if (inputs[0].equals(\"deadline\")){","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"DINGMAN17"},"content":"            newTask \u003d new Deadline(inputs[1], inputs[2]);","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"DINGMAN17"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"DINGMAN17"},"content":"            newTask \u003d new Event(inputs[1], inputs[2]);","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"DINGMAN17"},"content":"        for (Task task : tasks){","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"DINGMAN17"},"content":"            if (task !\u003d null \u0026\u0026 task.equals(newTask)){","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"DINGMAN17"},"content":"                redundant \u003d true;","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"DINGMAN17"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"DINGMAN17"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"DINGMAN17"},"content":"        if (!redundant){","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"DINGMAN17"},"content":"            tasks[Task.totalTasks] \u003d newTask;","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"DINGMAN17"},"content":"            Task.totalTasks++;","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"DINGMAN17"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"DINGMAN17"},"content":"                    \" \" + newTask + \"\\nNow you have \" + Task.totalTasks + \" tasks in the list.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"DINGMAN17"},"content":"        else {","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"DINGMAN17"},"content":"            System.out.println(\"The same task has been added previously, please enter another task\");","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"DINGMAN17"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"DINGMAN17"},"content":"    private static void changeTaskStatus(String command) {","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"DINGMAN17"},"content":"        int indexOfTask \u003d Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"DINGMAN17"},"content":"        //make sure the index is not out of the list","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"DINGMAN17"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"DINGMAN17"},"content":"            Task taskDone \u003d tasks[indexOfTask - 1];","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"DINGMAN17"},"content":"            taskDone.setDone(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"DINGMAN17"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + taskDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"DINGMAN17"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"DINGMAN17"},"content":"            System.out.println(\"Oops you don\u0027t have that many tasks, please enter a number \u003c\u003d \" + Task.totalTasks);","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"DINGMAN17"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"DINGMAN17"},"content":"            System.out.println(\"Oops there is no task 0, please start with task 1\");","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"DINGMAN17":155,"-":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DINGMAN17"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"DINGMAN17"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"DINGMAN17"},"content":"    protected String at;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"DINGMAN17"},"content":"    public Event(String taskName, String at) {","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"DINGMAN17"},"content":"        super(taskName);","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"DINGMAN17"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"DINGMAN17"},"content":"    public String getAt() {","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"DINGMAN17"},"content":"        return at;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"DINGMAN17"},"content":"    public void setAt(String at) {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"DINGMAN17"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"DINGMAN17"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"DINGMAN17"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"DINGMAN17"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"DINGMAN17"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"DINGMAN17"},"content":"        if (!(o instanceof Event)) return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"DINGMAN17"},"content":"        if (!super.equals(o)) return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"DINGMAN17"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"DINGMAN17"},"content":"        return Objects.equals(getAt(), event.getAt());","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"DINGMAN17"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"DINGMAN17"},"content":"        return Objects.hash(super.hashCode(), getAt());","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"DINGMAN17"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"DINGMAN17":38}},{"path":"src/main/java/InvalidUserInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DINGMAN17"},"content":"public class InvalidUserInputException extends Exception {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"DINGMAN17"},"content":"    public InvalidUserInputException() {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"DINGMAN17"},"content":"    public InvalidUserInputException(String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"DINGMAN17"},"content":"        super(message);","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"DINGMAN17"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"DINGMAN17":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DINGMAN17"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"DINGMAN17"},"content":"public class Task {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"DINGMAN17"},"content":"    protected String taskName;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"DINGMAN17"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"DINGMAN17"},"content":"    static int totalTasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"DINGMAN17"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"DINGMAN17"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"DINGMAN17"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"DINGMAN17"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"DINGMAN17"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"DINGMAN17"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"DINGMAN17"},"content":"        return taskName;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"DINGMAN17"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"DINGMAN17"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"DINGMAN17"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"DINGMAN17"},"content":"        return isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"DINGMAN17"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"DINGMAN17"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"DINGMAN17"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"DINGMAN17"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"DINGMAN17"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"DINGMAN17"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"DINGMAN17"},"content":"        if (!(o instanceof Task)) return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"DINGMAN17"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"DINGMAN17"},"content":"        return isDone() \u003d\u003d task.isDone() \u0026\u0026 getTaskName().equals(task.getTaskName());","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"DINGMAN17"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"DINGMAN17"},"content":"        return Objects.hash(getTaskName(), isDone());","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"DINGMAN17"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"DINGMAN17":50}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DINGMAN17"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"DINGMAN17"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"DINGMAN17"},"content":"        super(taskName);","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"DINGMAN17"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"DINGMAN17"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"DINGMAN17"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"DINGMAN17"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"DINGMAN17"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"DINGMAN17"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"DINGMAN17":11}}]
