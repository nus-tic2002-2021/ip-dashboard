[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"# duke project template","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"\t","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"   Hello! I\u0027m Duke by Kelvin","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"vrhuvarkelvin":4,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"    archiveBaseName \u003d \"ChanKhaiWen\"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"run {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"vrhuvarkelvin":6,"-":44}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"T | 0 | project","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"D | 1 | quiz  | 2021-10-10 2359","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"E | 0 | project meeting  | 2021-08-08 2200~2300","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"E | 0 | meeting  | 2021-08-08 1400~1800","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"vrhuvarkelvin":4}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.InvalidInputException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String input;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of AddCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    public AddCommand(String taskType, String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType(taskType);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"        setAdd(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates user input","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input in String","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setAdd(String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks.addTask(taskType, input);","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgError(e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":42}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"public abstract class Command {","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String taskType;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of command","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"    public Command(){","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates task type of task","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskType task type of task object","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To check if user want to quit program","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return boolean of true or false","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"    public boolean isQuit(){","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"        return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract void execute(TaskList tasks, Storage storage, UI ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":43}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.TaskNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String input;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of DeleteCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    public DeleteCommand(String taskType, String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType(taskType);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"        setDelete(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates user input","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input in String","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setDelete(String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks.deleteTask(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgInvalidTaskNum();","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (TaskNotFoundException e){","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgTaskNotFound();","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":44}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.TaskNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String input;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of DoneCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    public DoneCommand(String taskType, String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType(taskType);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"        setDone(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates user input","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input in String","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setDone(String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks.setTaskDone(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgInvalidTaskNum();","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (TaskNotFoundException e){","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgTaskNotFound();","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":44}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of ExitCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"    public ExitCommand(){","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        tasks.saveList();","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        UI.msgBye();","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"        storage.saveFile(tasks.getSave());","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Override if user input to quit program","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return boolean of true","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public boolean isQuit() {","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        return true;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":38}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String input;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of FindCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    public FindCommand(String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        setFind(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates user input","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input in String","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setFind(String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"        tasks.msgForFind(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":37}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of ListCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"    public ListCommand(){","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui){","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        tasks.msgForList();","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":26}},{"path":"src/main/java/command/UndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.TaskNotFoundException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class UndoneCommand extends Command{","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String input;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of UndoneCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    public UndoneCommand(String taskType, String input){","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType(taskType);","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"        setUndone(input);","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates user input","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input in String","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setUndone(String input){","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks.setTaskUndone(input);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgInvalidTaskNum();","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (TaskNotFoundException e){","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"            UI.msgTaskNotFound();","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"vrhuvarkelvin":44}},{"path":"src/main/java/command/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package command;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import duke.UI;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.InvalidInputException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class ViewCommand extends Command{","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String input;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of ViewCommand","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    public ViewCommand(String input){","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType(taskType);","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"        setView(input);","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates user input","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input in String","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setView(String input){","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To execute the command","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param tasks tasklist of tasks","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param storage read/write to text file","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param ui user input","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void execute(TaskList tasks, Storage storage, UI ui) {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        try{","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks.msgForView(input);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (InvalidInputException e){","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"            ui.msgError(e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"vrhuvarkelvin":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package duke;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import task.TaskList;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.FileException;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.CommandInvalidException;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.InvalidInputException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"import command.*;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    private UI ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"    private Parser parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    private Storage storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static String Path \u003d \"data/tasks.txt\";;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Read and convert String in text (filepath) to a TaskList object.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for Duke Object.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Filepath was given in Main method to call this constructor.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Creates a UI, Parser, Storage object.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * If encounter error to read the txt file, auto create a new empty Tasklist object.","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param filePath Path of the text.file to be read/save.","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"        try{","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"File loaded successfully.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (FileException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\tFile format is corrupted. Creating new file.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"Error reading file or does not exist. Creating new file.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Brain of the Duke object - Execute the duke object until isQuit is True.","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void runDuke(){","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"        ui.msgWelcome();","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"        boolean isQuit \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"        while (!isQuit){","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"            try {","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"                ui.showLine();","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"                isQuit \u003d c.isQuit();","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"            } catch (CommandInvalidException e){","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"\\tUnrecognized Command\");","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"\\tPlease enter description after command/command format is incorrect.\");","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"                ui.msgError(e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"            } finally {","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"                ui.showLine();","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"        new Duke(Path).runDuke();","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vrhuvarkelvin":68,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package duke;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import command.*;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.InvalidInputException;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.CommandInvalidException;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"public class Parser {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Parser to read user input message and create new commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Support Shorter aliases for user commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     * e.g.(t - todo, d - deadline, e - event, del - delete, l - list, b - bye, f - find, v - view).","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input user input message.","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return Different types of commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws InvalidInputException if input message have errors.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws CommandInvalidException if wrong command was given by users.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static Command parse(String input) throws  InvalidInputException, CommandInvalidException {","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"        String taskType;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"        String[] userInputArray;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        userInputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        taskType \u003d userInputArray[0].toLowerCase();","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        assert userInputArray.length \u003e\u003d 1 : \"Invalid Input\";","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"        switch (taskType){","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"todo\":","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"deadline\":","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"event\":","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"t\":","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"d\":","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"e\":","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new AddCommand(taskType, userInputArray[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"delete\":","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"del\":","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new DeleteCommand(taskType, userInputArray[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"done\":","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new DoneCommand(taskType, userInputArray[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"undone\":","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new UndoneCommand(taskType, userInputArray[1]);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"find\":","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"f\":","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new FindCommand(userInputArray[1]);","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"view\":","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"v\":","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new ViewCommand(userInputArray[1]);","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"list\":","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"l\":","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"            if (userInputArray.length \u003e\u003d 2){","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"                throw new InvalidInputException(\"LIST_COMMAND_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new ListCommand();","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"bye\":","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"b\":","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"        default:","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new CommandInvalidException();","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":61}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package duke;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.io.File;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"public class Storage {","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static String filePath;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"    private ArrayList\u003cString\u003e loadFile;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"    public Storage(String filePath){","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        loadFile \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Creates a new file with parent directory OR/","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Load existing file.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void newFile(){","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"File created\");","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"            } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"Loading existing file\");","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.err.println(e);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Save all tasks into a text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Activate when ExitCommand is called.","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param TaskDetailsString array of strings to save into the txt file.","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void saveFile(ArrayList\u003cString\u003e TaskDetailsString){","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"            writeToFile(TaskDetailsString);","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Create a new loaded file object (Consists of ArrayList\u003cString\u003e).","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return loaded file with all tasks in ArrayList\u003cString\u003e format.","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"    public ArrayList\u003cString\u003e load(){","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"            readFile(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"            newFile();","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"        return loadFile;","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"    private void writeToFile(ArrayList\u003cString\u003e saveFileList) throws IOException {","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"        for(String saveFile : saveFileList) {","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"            fw.write(saveFile + System.lineSeparator());","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"        fw.close();","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"    private void readFile(String filePath) throws FileNotFoundException  {","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"            String read \u003d s.nextLine();","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"            loadFile.add(read);","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":83}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package duke;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"public class UI {","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String DIVIDER_LINE \u003d \"_________________________________________________________________________________________\";","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String LONGER_DIVIDER_LINE \u003d \"_____________________________________________________________________________________________________________\";","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String INPUT_FORMAT_ERROR \u003d \"Please do not use \u0027|\u0027 as it breaks the program.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String MISSING_EVENT_END_TIME \u003d \"Please specify the event end time.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String TODO_MISSING_DESCRIPTION \u003d \"Please specify task description.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String INVALID_DATE_TIME_FORMAT \u003d \"Please use correct date \u0026 time format: 2021-10-28 2100.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"Please use correct date format: 2021-10-28.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String DEADLINE_COMMAND_ERROR \u003d \"Please specify the deadline of the task and/or task description is missing.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String DEADLINE_DESCRIPTION_ERROR \u003d \"Deadline command is incorrect or too many /by. Please try again.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String EVENT_COMMAND_ERROR \u003d \"Please specify the time of the task and/or task description is missing.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String EVENT_DESCRIPTION_ERROR \u003d \"Event command is incorrect or too many /at or /to. Please try again.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String EVENT_INVALID_DATE_TIME_FORMAT_ERROR \u003d \"The date time format after /at is incorrect. Please use correct format: event project /at 2021-11-11 1300 /to 1500\";","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String LIST_COMMAND_ERROR \u003d \"Please do not type anything after \u0027list\u0027 or \u0027l\u0027 command.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final String WRONG_COMMAND_ERROR \u003d \"Wrong command is used. Deadline task should use /by meanwhile Event task should use /at and /to\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgWelcome() {","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        showLongerLine();","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println((\"Hello from\\n\" + logo));","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"Hello! I\u0027m Duke by Kelvin\");","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"        msgAllCommands();","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"        showLongerLine();","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgAllCommands(){","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tHere are the commands available:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t1) Enter \u0027todo\u0027 OR \u0027t\u0027 \u0027text\u0027                             ----- To add a TODO task \");","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. todo buy tickets OR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. t buy tickets\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t2) Enter \u0027deadline\u0027 OR \u0027d\u0027 \u0027text\u0027 \u0027/by\u0027 \u0027date \u0026 time\u0027     ----- To add a DEADLINE task \");","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. deadline quiz /by 2021-10-10 2359 OR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. d quiz /by 2021-10-10 2359\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t3) Enter \u0027event\u0027 OR \u0027e\u0027 \u0027text\u0027 \u0027/at\u0027 \u0027date \u0026 time\u0027 \u0027/to\u0027 \u0027time\u0027   ----- To add a EVENT task \");","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. event project meeting /at 2021-08-08 1400 /to 1600 OR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. e project meeting /at 2021-08-08 1400 /to 1600\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t4) Enter \u0027list\u0027 OR \u0027l\u0027                      ----- To view all tasks in list \");","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. list OR l\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t5) Enter \u0027done\u0027 \u0027number\u0027                    ----- To mark the task as done \");","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. done 3\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t6) Enter \u0027undone\u0027 \u0027number\u0027                  ----- To mark the task as not done \");","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. undone 3\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t7) Enter \u0027delete\u0027 OR \u0027del\u0027 \u0027number\u0027         ----- To delete the task \");","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. delete 3 OR del 3\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t8) Enter \u0027find\u0027 OR \u0027f\u0027 \u0027text\u0027               ----- To find the tasks which contains the keyword \");","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. find project OR f project\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t9) Enter \u0027view\u0027 OR \u0027v\u0027 \u0027date\u0027               ----- To view the tasks on specified date \");","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. view 2021-08-08 OR v 2021-08-08\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t10) Enter \u0027bye\u0027 OR \u0027b\u0027                       ----- To exit the program \");","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t   e.g. bye OR b\\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static void msgBye(){","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static void msgInvalidTaskNum(){","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t Invalid task number format! The correct format is e.g. delete/done/undone 3!\");","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static void msgTaskNotFound(){","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\t Task cannot be found! Please enter again!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Activate scanner to read user command","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return user input message","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String readCommand(){","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"        return in.nextLine();","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void showLine(){","lastModifiedDate":"2021-11-12"},{"lineNumber":85,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void showLongerLine(){","lastModifiedDate":"2021-11-12"},{"lineNumber":89,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(LONGER_DIVIDER_LINE);","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Show user different types of error msg","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param errorMsg Error message","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static void msgError(String errorMsg){","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.print(\"\\tError occurred: \");","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"vrhuvarkelvin"},"content":"        switch(errorMsg){","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"INPUT_FORMAT_ERROR\":","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(INPUT_FORMAT_ERROR);","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"TODO_MISSING_DESCRIPTION\":","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(TODO_MISSING_DESCRIPTION);","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"MISSING_EVENT_END_TIME\":","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(MISSING_EVENT_END_TIME);","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"INVALID_DATE_FORMAT\":","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(INVALID_DATE_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"INVALID_DATE_TIME_FORMAT\":","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(INVALID_DATE_TIME_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"DEADLINE_COMMAND_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(DEADLINE_COMMAND_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"DEADLINE_DESCRIPTION_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(DEADLINE_DESCRIPTION_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"EVENT_COMMAND_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(EVENT_COMMAND_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"EVENT_DESCRIPTION_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(EVENT_DESCRIPTION_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"EVENT_INVALID_DATE_TIME_FORMAT_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(EVENT_INVALID_DATE_TIME_FORMAT_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"LIST_COMMAND_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(LIST_COMMAND_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"WRONG_COMMAND_ERROR\":","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(WRONG_COMMAND_ERROR);","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"vrhuvarkelvin"},"content":"        default:","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"Unrecognized error\");","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":141}},{"path":"src/main/java/error/CommandInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package error;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"public class CommandInvalidException extends Exception{","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":5}},{"path":"src/main/java/error/FileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package error;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"public class FileException extends Exception{","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":4}},{"path":"src/main/java/error/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package error;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"    public InvalidInputException (String errorMsg){","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(errorMsg);","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"vrhuvarkelvin":7}},{"path":"src/main/java/error/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package error;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"public class TaskNotFoundException extends Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":4}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"public abstract class Task {","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected String taskDescription;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected TaskType typeOfTask;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of Task object","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param description task description","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get the task description","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task description in String","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTask(){","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        return taskDescription;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract void print();","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract void setTaskDone();","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract void setTaskUndone();","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract String getTaskDescription();","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract String getSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"    public abstract String getTaskType();","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get the date time of task object except todo task return null","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return date/time of TaskDeadline/TaskEvents","lastModifiedDate":"2021-11-12"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"    public LocalDateTime getDateTime(){","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"        return null;","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task status (Done/Not done)","lastModifiedDate":"2021-11-12"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return  Task status in String (1 / 0)","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getDone(){","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"        if(isDone){","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"            return \"1\";","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"            return \"0\";","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"vrhuvarkelvin":57}},{"path":"src/main/java/task/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String PRINT_FORMAT \u003d \"MMM d yyyy HH:mm a\";","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String SAVE_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for TaskDeadline object","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription Task description of deadline object","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param deadline deadline of task in Date \u0026 Time format","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskDeadline(String taskDescription, LocalDateTime deadline){","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.typeOfTask \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for TaskDeadline object (activates when you load tasks from text file)","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription task description","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param deadline deadline of task in Date \u0026 Time format","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param isDone Done status of object","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskDeadline(String taskDescription, LocalDateTime deadline, Boolean isDone){","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"        setDeadline(deadline);","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType();","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task description","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task description in String","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"        return taskDescription;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print deadline of task","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return deadline of task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getDeadlinePrint(){","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(PRINT_FORMAT));","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print deadline of task to be saved in text file format","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return deadline of task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getDeadlineSave(){","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(SAVE_FORMAT));","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task type","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task type in String (e.g. \"D\")","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"        return TaskType.toStringTaskType(typeOfTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task info to be saved in text file format","lastModifiedDate":"2021-11-12"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task info in String","lastModifiedDate":"2021-11-12"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getSave(){","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"        String save \u003d getTaskType() + \" | \" + getDone() + \" | \" + getTaskDescription() + \" | \" + getDeadlineSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"        return save;","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":85,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get deadline of task","lastModifiedDate":"2021-11-12"},{"lineNumber":86,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":87,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return deadline of task in LocalDateTime","lastModifiedDate":"2021-11-12"},{"lineNumber":88,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":89,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"vrhuvarkelvin"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"vrhuvarkelvin"},"content":"        return deadline;","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":95,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates deadline of task","lastModifiedDate":"2021-11-12"},{"lineNumber":96,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":97,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param deadline deadline of task in LocalDateTime","lastModifiedDate":"2021-11-12"},{"lineNumber":98,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":99,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setDeadline(LocalDateTime deadline){","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":104,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates task type of task","lastModifiedDate":"2021-11-12"},{"lineNumber":105,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":106,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskType(){","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.typeOfTask \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":111,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To mark task as done","lastModifiedDate":"2021-11-12"},{"lineNumber":112,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":113,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskDone(){","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"vrhuvarkelvin"},"content":"                \"\\t  [\" + getTaskType() + \"][X] \" + getTaskDescription() + \"(by: \" + getDeadlinePrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":120,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To mark task as not done","lastModifiedDate":"2021-11-12"},{"lineNumber":121,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":122,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskUndone(){","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tOkay! I\u0027ve marked this task as not done:\\n\" +","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"vrhuvarkelvin"},"content":"                \"\\t  [\" + getTaskType() + \"][ ] \" + getTaskDescription() + \"(by: \" + getDeadlinePrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":129,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print task info","lastModifiedDate":"2021-11-12"},{"lineNumber":130,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":131,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void print(){","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t  [\" + getTaskType() + \"][X] \" + getTaskDescription() + \"(by: \" + getDeadlinePrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"vrhuvarkelvin"},"content":"        else {","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t  [\" + getTaskType() + \"][ ] \" + getTaskDescription() + \"(by: \" + getDeadlinePrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":140,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":141,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print task info","lastModifiedDate":"2021-11-12"},{"lineNumber":142,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":143,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task info in String","lastModifiedDate":"2021-11-12"},{"lineNumber":144,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":145,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"vrhuvarkelvin"},"content":"        String frontTxt \u003d \"[\" + getTaskType() + \"][ ] \";","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (isDone){","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"vrhuvarkelvin"},"content":"            frontTxt \u003d \"[\" + getTaskType() + \"][X] \";","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"vrhuvarkelvin"},"content":"        return (frontTxt + getTaskDescription() + \"(by: \" + getDeadlinePrint() + \")\");","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"vrhuvarkelvin":153}},{"path":"src/main/java/task/TaskEvents.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"public class TaskEvents extends Task{","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String START_TIME_PRINT_FORMAT \u003d \"MMM d yyyy HH:mm a\";","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String END_TIME_PRINT_FORMAT \u003d \"HH:mm a\";","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String START_TIME_SAVE_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"    private final String END_TIME_SAVE_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for TaskEvents object","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription Task description of event object","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param startTime start date \u0026 time of event","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param endTime end time of event","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskEvents(String taskDescription, LocalDateTime startTime, LocalTime endTime){","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType();","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        setStartTime(startTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"        setEndTime(endTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for TaskEvents object (activates when you load tasks from text file)","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription task description","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param isDone Done status of object","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param startTime start date \u0026 time of event","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param endTime end time of event","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskEvents(String taskDescription, LocalDateTime startTime, LocalTime endTime, Boolean isDone){","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        setStartTime(startTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"        setEndTime(endTime);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        setTaskType();","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task description","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task description in String","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"        return taskDescription;","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print time period of event","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return time period of event in String","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTimePeriodPrint(){","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"        return (startTime.format(DateTimeFormatter.ofPattern(START_TIME_PRINT_FORMAT)) + \"~\" +","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"                endTime.format(DateTimeFormatter.ofPattern(END_TIME_PRINT_FORMAT)));","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get time period of event in Text file format","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return time period of event in String","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTimePeriodSave(){","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"        return (startTime.format(DateTimeFormatter.ofPattern(START_TIME_SAVE_FORMAT)) + \"~\" +","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"                endTime.format(DateTimeFormatter.ofPattern(END_TIME_SAVE_FORMAT)));","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task type","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task type in String (e.g. \"E\")","lastModifiedDate":"2021-11-12"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"        return TaskType.toStringTaskType(typeOfTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":85,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get start time of event","lastModifiedDate":"2021-11-12"},{"lineNumber":86,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":87,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return  start time of event in LocalDateTime","lastModifiedDate":"2021-11-12"},{"lineNumber":88,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":89,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"vrhuvarkelvin"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"vrhuvarkelvin"},"content":"        return startTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":95,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task info to be saved in text file format","lastModifiedDate":"2021-11-12"},{"lineNumber":96,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":97,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task info in String","lastModifiedDate":"2021-11-12"},{"lineNumber":98,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":99,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getSave(){","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"vrhuvarkelvin"},"content":"        String save \u003d getTaskType() + \" | \" +  getDone() + \" | \" + getTaskDescription() + \" | \" + getTimePeriodSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"vrhuvarkelvin"},"content":"        return save;","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":105,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To mark task as done","lastModifiedDate":"2021-11-12"},{"lineNumber":106,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":107,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskDone(){","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"vrhuvarkelvin"},"content":"                \"\\t  [\" + getTaskType() + \"][X] \" + getTaskDescription() + \"(at: \" + getTimePeriodPrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":114,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To mark task as not done","lastModifiedDate":"2021-11-12"},{"lineNumber":115,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":116,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskUndone(){","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tOkay! I\u0027ve marked this task as not done:\\n\" +","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"vrhuvarkelvin"},"content":"                \"\\t  [\" + getTaskType() + \"][ ] \" + getTaskDescription() + \"(at: \" + getTimePeriodPrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":123,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates start time of event object","lastModifiedDate":"2021-11-12"},{"lineNumber":124,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":125,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param startTime start time of event in LocalDateTime","lastModifiedDate":"2021-11-12"},{"lineNumber":126,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":127,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setStartTime(LocalDateTime startTime){","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":132,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates end time of event object","lastModifiedDate":"2021-11-12"},{"lineNumber":133,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":134,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param endTime start time of event in LocalTime","lastModifiedDate":"2021-11-12"},{"lineNumber":135,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":136,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setEndTime(LocalTime endTime){","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":141,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Initiates task type of event object","lastModifiedDate":"2021-11-12"},{"lineNumber":142,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":143,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskType(){","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.typeOfTask \u003d TaskType.EVENT;","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":148,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print task info","lastModifiedDate":"2021-11-12"},{"lineNumber":149,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":150,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void print(){","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t  [\" + getTaskType() + \"][X] \" + getTaskDescription() + \"(at: \" + getTimePeriodPrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"vrhuvarkelvin"},"content":"        else {","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t  [\" + getTaskType() + \"][ ] \" + getTaskDescription() + \"(at: \" + getTimePeriodPrint() + \")\");","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":160,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print task info","lastModifiedDate":"2021-11-12"},{"lineNumber":161,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":162,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task info in String","lastModifiedDate":"2021-11-12"},{"lineNumber":163,"author":{"gitId":"vrhuvarkelvin"},"content":"      */","lastModifiedDate":"2021-11-12"},{"lineNumber":164,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"vrhuvarkelvin"},"content":"        String frontTxt \u003d \"[\" + getTaskType() + \"][ ] \";","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (isDone){","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"vrhuvarkelvin"},"content":"            frontTxt \u003d \"[\" + getTaskType() + \"][X] \";","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"vrhuvarkelvin"},"content":"        return (frontTxt + getTaskDescription() + \"(at: \" + getTimePeriodPrint() + \")\");","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"vrhuvarkelvin":172}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.FileException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.InvalidInputException;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.TaskNotFoundException;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"public class TaskList {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static ArrayList\u003cString\u003e taskSave;","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static Task recentDelete;","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final DateTimeFormatter TIME_FORMATTER_EVENT_END_TIME \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"        taskSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Takes in input of String from loaded file (txt file) and creates a new list with Tasks.","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param loadFile String from text file.","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws FileException If file is not found.","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskList(ArrayList\u003cString\u003e loadFile) throws FileException{","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"        taskSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"        String[] taskArray;","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"        loadFile.listIterator();","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"        for(String task : loadFile){","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskArray \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"            String taskType, taskStatus, taskDescription;","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"            LocalDateTime date;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"            Boolean isDone \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskType \u003d taskArray[0];","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskStatus \u003d taskArray[1];","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskDescription \u003d taskArray[2];","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"            if(taskStatus.equals(\"1\")){","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"                isDone \u003d true;","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"            switch (taskType){","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"            case \"T\":","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"                list.add(new TaskToDo(taskDescription, isDone));","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"            case \"D\":","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"                try{","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"                    date \u003d LocalDateTime.parse(taskArray[3], DATE_TIME_FORMATTER);","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"                    list.add(new TaskDeadline(taskDescription, date, isDone));","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"                } catch (Exception e){","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"                    throw new FileException();","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"                }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"            case \"E\":","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"                LocalDateTime startTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"                LocalTime endTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"                String[] time \u003d taskArray[3].split(\"~\");","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"                try{","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"                    startTime \u003d LocalDateTime.parse(time[0], DATE_TIME_FORMATTER);","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"                    endTime \u003d LocalTime.parse(time[1], TIME_FORMATTER_EVENT_END_TIME);","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"                    list.add(new TaskEvents(taskDescription, startTime, endTime, isDone));","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"                } catch (Exception e){","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"                    throw new FileException();","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"                }","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"                break;","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"     * add new TODO object into TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription Task description e.g. Project Meeting.","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void addItemToDo(String taskDescription) throws InvalidInputException{","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"vrhuvarkelvin"},"content":"        if(taskDescription.isEmpty()){","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"TODO_MISSING_DESCRIPTION\");","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.add(new TaskToDo(taskDescription));","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"vrhuvarkelvin"},"content":"        msgForAdd();","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"vrhuvarkelvin"},"content":"     * add new DEADLINE object into Tasklist.","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param msgInput UserCommand (Task Description + /by + date \u0026 time).","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws InvalidInputException If input is not correct (Too short or too long) or format is incorrect.","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void addItemToDeadline(String msgInput) throws InvalidInputException{","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (msgInput.contains(\"/at\")){","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"WRONG_COMMAND_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"vrhuvarkelvin"},"content":"        String[] input \u003d msgInput.split(\"/by \");","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"vrhuvarkelvin"},"content":"        LocalDateTime date;","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (input.length \u003c 2 || input[0].equals(\"\")){","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"DEADLINE_COMMAND_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"vrhuvarkelvin"},"content":"        } else if (input.length \u003e 2){","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"DEADLINE_DESCRIPTION_ERROR\");","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"vrhuvarkelvin"},"content":"            date \u003d LocalDateTime.parse(input[1],DATE_TIME_FORMATTER);","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"INVALID_DATE_TIME_FORMAT\");","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"vrhuvarkelvin"},"content":"        assert input.length \u003d\u003d 2 : \"Invalid Input\";","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.add(new TaskDeadline(input[0], date));","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"vrhuvarkelvin"},"content":"        msgForAdd();","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"vrhuvarkelvin"},"content":"     * add new EVENTS object into TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param msgInput UserCommand (Task Description + /at + date \u0026 time + /to time).","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws InvalidInputException If input is not correct (Too short or too long) or format is incorrect.","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void addItemToEvents(String msgInput) throws InvalidInputException{","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (msgInput.contains(\"/by\")){","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"WRONG_COMMAND_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"vrhuvarkelvin"},"content":"        String[] input \u003d msgInput.split(\"/at \");","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (input[1].equals(\" \")){","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"EVENT_COMMAND_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"vrhuvarkelvin"},"content":"        String[] time \u003d input[1].split(\" /to \");","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"vrhuvarkelvin"},"content":"        LocalDateTime startTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"vrhuvarkelvin"},"content":"        LocalTime endTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"vrhuvarkelvin"},"content":"        if(time.length \u003d\u003d 1){","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"MISSING_EVENT_END_TIME\");","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"vrhuvarkelvin"},"content":"        } else if (input.length \u003c 2 || input[0].equals(\"\")){","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"EVENT_COMMAND_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"vrhuvarkelvin"},"content":"        } else if (input.length \u003e 2){","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"EVENT_DESCRIPTION_ERROR\");","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"vrhuvarkelvin"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"vrhuvarkelvin"},"content":"            startTime \u003d LocalDateTime.parse(time[0], DATE_TIME_FORMATTER);","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"vrhuvarkelvin"},"content":"            endTime \u003d LocalTime.parse(time[1], TIME_FORMATTER_EVENT_END_TIME);","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"EVENT_INVALID_DATE_TIME_FORMAT_ERROR\");","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"vrhuvarkelvin"},"content":"        assert input.length \u003d\u003d 2 : \"Invalid Input\";","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"vrhuvarkelvin"},"content":"        assert time.length \u003d\u003d 2 : \"Invalid Input\";","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.add(new TaskEvents(input[0], startTime, endTime));","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"vrhuvarkelvin"},"content":"        msgForAdd();","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Set the task to Done status.","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param index index of the task in TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws TaskNotFoundException If task index is not found in TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskDone(String index) throws TaskNotFoundException {","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"vrhuvarkelvin"},"content":"        Integer taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (list.size() \u003c taskNumber){","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.get(taskNumber-1).setTaskDone();","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskUndone(String index) throws TaskNotFoundException {","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"vrhuvarkelvin"},"content":"        Integer taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (list.size() \u003c taskNumber){","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.get(taskNumber-1).setTaskUndone();","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Delete the task","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param index index of the task in TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws TaskNotFoundException If task index is not found in TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void deleteTask(String index) throws TaskNotFoundException {","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"vrhuvarkelvin"},"content":"        Integer taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (list.size() \u003c taskNumber){","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":200,"author":{"gitId":"vrhuvarkelvin"},"content":"        recentDelete \u003d list.get(taskNumber-1);","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.remove(taskNumber-1);","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"vrhuvarkelvin"},"content":"        msgForDelete();","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":204,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To determine the type of task.","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Called by AddCommand.","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskType The type of task (TODO, DEADLINE, EVENT).","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input Task description.","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws InvalidInputException If input is not correct.","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void addTask(String taskType, String input) throws InvalidInputException {","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"vrhuvarkelvin"},"content":"        assert taskType.equals(\"todo\") || taskType.equals(\"t\") || taskType.equals(\"deadline\")","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"vrhuvarkelvin"},"content":"                || taskType.equals(\"d\") || taskType.equals(\"event\") || taskType.equals(\"e\") : \"Invalid TaskType\";","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"vrhuvarkelvin"},"content":"        switch (taskType) {","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"todo\":","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"t\":","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"vrhuvarkelvin"},"content":"            addItemToDo(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":221,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":222,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"deadline\":","lastModifiedDate":"2021-11-06"},{"lineNumber":223,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"d\":","lastModifiedDate":"2021-11-06"},{"lineNumber":224,"author":{"gitId":"vrhuvarkelvin"},"content":"            addItemToDeadline(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":225,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":226,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"event\":","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"vrhuvarkelvin"},"content":"        case \"e\":","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"vrhuvarkelvin"},"content":"            addItemToEvents(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-06"},{"lineNumber":230,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":231,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":234,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Get the String format of each task and put them in an ArrayList of String.","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void saveList(){","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"vrhuvarkelvin"},"content":"        for(Task task : list){","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskSave.add(task.getSave());","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To consolidate all tasks into String.","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return ArrayList of String to be stored in Text File.","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":247,"author":{"gitId":"vrhuvarkelvin"},"content":"    public ArrayList\u003cString\u003e getSave(){","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"vrhuvarkelvin"},"content":"        return taskSave;","lastModifiedDate":"2021-11-06"},{"lineNumber":249,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":252,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":253,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Message to user when a task is added.","lastModifiedDate":"2021-11-06"},{"lineNumber":254,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgForAdd(){","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2021-11-06"},{"lineNumber":257,"author":{"gitId":"vrhuvarkelvin"},"content":"        list.get(list.size()-1).print();","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":259,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Print out all tasks in TaskList.","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgForList(){","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"vrhuvarkelvin"},"content":"        if(list.size() \u003d\u003d 0){","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t List is empty!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"vrhuvarkelvin"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":269,"author":{"gitId":"vrhuvarkelvin"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":270,"author":{"gitId":"vrhuvarkelvin"},"content":"            for(Task task : list){","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"\\t\" + index + \".\" + task);","lastModifiedDate":"2021-11-06"},{"lineNumber":272,"author":{"gitId":"vrhuvarkelvin"},"content":"                index++;","lastModifiedDate":"2021-11-06"},{"lineNumber":273,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":274,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":275,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":276,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":277,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":278,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Message to user when a task is deleted.","lastModifiedDate":"2021-11-06"},{"lineNumber":279,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgForDelete(){","lastModifiedDate":"2021-11-06"},{"lineNumber":281,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tNoted. I have removed the task: \");","lastModifiedDate":"2021-11-06"},{"lineNumber":282,"author":{"gitId":"vrhuvarkelvin"},"content":"        recentDelete.print();","lastModifiedDate":"2021-11-06"},{"lineNumber":283,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tNow you have \" + (list.size()) +\" task(s) in the list\");","lastModifiedDate":"2021-11-06"},{"lineNumber":284,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":287,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Message to user when find for matching/non matching tasks in List.","lastModifiedDate":"2021-11-07"},{"lineNumber":288,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":289,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param input User input to search for which keyword in List.","lastModifiedDate":"2021-11-07"},{"lineNumber":290,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":291,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgForFind(String input){","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"vrhuvarkelvin"},"content":"        int matchedTaskIndex \u003d 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":293,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":294,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2021-11-06"},{"lineNumber":295,"author":{"gitId":"vrhuvarkelvin"},"content":"        for (Task task : list){","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"vrhuvarkelvin"},"content":"            if (task.getTaskDescription().toLowerCase().contains(input.toLowerCase())){","lastModifiedDate":"2021-11-06"},{"lineNumber":297,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"\\t\" + matchedTaskIndex + \".\" + task);","lastModifiedDate":"2021-11-06"},{"lineNumber":298,"author":{"gitId":"vrhuvarkelvin"},"content":"                matchedTaskIndex++;","lastModifiedDate":"2021-11-06"},{"lineNumber":299,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":300,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":301,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (matchedTaskIndex \u003d\u003d 1){","lastModifiedDate":"2021-11-06"},{"lineNumber":302,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t No matched task in your list!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":303,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":304,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":306,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":307,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Message to user when user wants to search all tasks on the specified date","lastModifiedDate":"2021-11-07"},{"lineNumber":308,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param inputDate User specified date","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @throws InvalidInputException If user give wrong format of date","lastModifiedDate":"2021-11-07"},{"lineNumber":311,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":312,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void msgForView(String inputDate) throws InvalidInputException{","lastModifiedDate":"2021-11-07"},{"lineNumber":313,"author":{"gitId":"vrhuvarkelvin"},"content":"        int matchedDateIndex \u003d 1;","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tHere are the matching tasks on the specified date in your list:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":316,"author":{"gitId":"vrhuvarkelvin"},"content":"        try{","lastModifiedDate":"2021-11-07"},{"lineNumber":317,"author":{"gitId":"vrhuvarkelvin"},"content":"            LocalDate date \u003d LocalDate.parse(inputDate, DATE_FORMATTER);","lastModifiedDate":"2021-11-07"},{"lineNumber":318,"author":{"gitId":"vrhuvarkelvin"},"content":"            for (Task task : list){","lastModifiedDate":"2021-11-07"},{"lineNumber":319,"author":{"gitId":"vrhuvarkelvin"},"content":"                if(task.getDateTime() !\u003d null){","lastModifiedDate":"2021-11-07"},{"lineNumber":320,"author":{"gitId":"vrhuvarkelvin"},"content":"                    if(task.getDateTime().toLocalDate().equals(date)){","lastModifiedDate":"2021-11-07"},{"lineNumber":321,"author":{"gitId":"vrhuvarkelvin"},"content":"                        System.out.println(\"\\t\" + matchedDateIndex + \".\" + task);","lastModifiedDate":"2021-11-07"},{"lineNumber":322,"author":{"gitId":"vrhuvarkelvin"},"content":"                        matchedDateIndex++;","lastModifiedDate":"2021-11-07"},{"lineNumber":323,"author":{"gitId":"vrhuvarkelvin"},"content":"                    }","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"vrhuvarkelvin"},"content":"                }","lastModifiedDate":"2021-11-07"},{"lineNumber":325,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"vrhuvarkelvin"},"content":"            if (matchedDateIndex \u003d\u003d 1){","lastModifiedDate":"2021-11-07"},{"lineNumber":327,"author":{"gitId":"vrhuvarkelvin"},"content":"                System.out.println(\"\\t No matched task with the specified date in your list!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":328,"author":{"gitId":"vrhuvarkelvin"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":329,"author":{"gitId":"vrhuvarkelvin"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-11-07"},{"lineNumber":330,"author":{"gitId":"vrhuvarkelvin"},"content":"            throw new InvalidInputException(\"INVALID_DATE_FORMAT\");","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":335,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get size of the TaskList","lastModifiedDate":"2021-11-12"},{"lineNumber":336,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":337,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return size of ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-11-12"},{"lineNumber":338,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":339,"author":{"gitId":"vrhuvarkelvin"},"content":"    public int getSize(){","lastModifiedDate":"2021-11-12"},{"lineNumber":340,"author":{"gitId":"vrhuvarkelvin"},"content":"        return list.size();","lastModifiedDate":"2021-11-12"},{"lineNumber":341,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":342,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":343,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":344,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get taskList","lastModifiedDate":"2021-11-12"},{"lineNumber":345,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":346,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return tasks in ArrayList\u003cTask\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":347,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":348,"author":{"gitId":"vrhuvarkelvin"},"content":"    public ArrayList\u003cTask\u003e getList(){","lastModifiedDate":"2021-11-12"},{"lineNumber":349,"author":{"gitId":"vrhuvarkelvin"},"content":"        return list;","lastModifiedDate":"2021-11-12"},{"lineNumber":350,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":351,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":352,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":352}},{"path":"src/main/java/task/TaskToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"public class TaskToDo extends Task {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for TaskToDo object","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription Task description of todo object","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskToDo (String taskDescription){","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.typeOfTask \u003d TaskType.TODOS;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"     * Constructor for TaskToDo object (activates when you load tasks from text file)","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param taskDescription task description","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @param isDone Done status of object","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    public TaskToDo (String taskDescription, Boolean isDone){","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        super(taskDescription);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.typeOfTask \u003d TaskType.TODOS;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task description","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task description in String","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"        return taskDescription;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task type","lastModifiedDate":"2021-11-12"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task type in String (e.g. \"T\")","lastModifiedDate":"2021-11-12"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"        return TaskType.toStringTaskType(typeOfTask);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To get task info to be saved in text file format","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task info to be saved into text file","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String getSave(){","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"        String save \u003d getTaskType() + \" | \" + getDone() + \" | \" + getTaskDescription();","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"        return save;","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To mark task as done","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskDone(){","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\\n\" + \"\\t  [\" + getTaskType() + \"][X] \" + getTaskDescription());","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To mark task as not done","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskUndone(){","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"        System.out.println(\"\\tOkay! I\u0027ve marked this task as not done:\\n\" + \"\\t  [\" + getTaskType() + \"][ ] \" + getTaskDescription());","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print task info","lastModifiedDate":"2021-11-12"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void print(){","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (isDone) {","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t  [\" + getTaskType() + \"][X] \" + getTaskDescription());","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"        else {","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"            System.out.println(\"\\t  [\" + getTaskType() + \"][ ] \" + getTaskDescription());","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"vrhuvarkelvin"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":85,"author":{"gitId":"vrhuvarkelvin"},"content":"     * To print task info","lastModifiedDate":"2021-11-12"},{"lineNumber":86,"author":{"gitId":"vrhuvarkelvin"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":87,"author":{"gitId":"vrhuvarkelvin"},"content":"     * @return task info in String","lastModifiedDate":"2021-11-12"},{"lineNumber":88,"author":{"gitId":"vrhuvarkelvin"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":89,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"vrhuvarkelvin"},"content":"    public String toString() {","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"vrhuvarkelvin"},"content":"        String frontTxt \u003d \"[\" + getTaskType() + \"][ ] \";","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"vrhuvarkelvin"},"content":"        if (isDone){","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"vrhuvarkelvin"},"content":"            frontTxt \u003d \"[\" + getTaskType() + \"][X] \";","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"vrhuvarkelvin"},"content":"        return (frontTxt + getTaskDescription());","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"vrhuvarkelvin":98}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"public enum TaskType {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"    TODOS, DEADLINE, EVENT;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"    public static String toStringTaskType(TaskType typeOfTask){","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"        switch (typeOfTask){","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"        case TODOS:","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"        case DEADLINE:","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"        case EVENT:","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"            break;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"        return taskType;","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"vrhuvarkelvin":21}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vrhuvarkelvin"},"content":"package task;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.InvalidInputException;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"vrhuvarkelvin"},"content":"import error.TaskNotFoundException;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"vrhuvarkelvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vrhuvarkelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vrhuvarkelvin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vrhuvarkelvin"},"content":"public class TaskListTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"vrhuvarkelvin"},"content":"    ArrayList\u003cTask\u003e testTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vrhuvarkelvin"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER_EVENT_END_TIME \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void addNewTaskTest(){","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskList.add(new TaskToDo(\"project\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskList.add(new TaskDeadline(\"quiz\", LocalDateTime.parse(\"2021-11-22 1400\", DATE_TIME_FORMATTER)));","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskList.add(new TaskEvents(\"meeting\", LocalDateTime.parse(\"2021-08-22 2300\", DATE_TIME_FORMATTER),","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"vrhuvarkelvin"},"content":"                LocalTime.parse(\"0100\", DATE_TIME_FORMATTER_EVENT_END_TIME)));","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"project\", testTaskList.get(0).getTaskDescription());","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"quiz\", testTaskList.get(1).getTaskDescription());","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"meeting\", testTaskList.get(2).getTaskDescription());","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"T\", testTaskList.get(0).getTaskType());","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"D\", testTaskList.get(1).getTaskType());","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"E\", testTaskList.get(2).getTaskType());","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskDoneTest(){","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vrhuvarkelvin"},"content":"        Task a \u003d new TaskToDo(\"project\");","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", a.getDone());","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vrhuvarkelvin"},"content":"        a.setTaskDone();","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"1\", a.getDone());","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vrhuvarkelvin"},"content":"        Task b \u003d new TaskDeadline(\"quiz\", LocalDateTime.parse(\"2021-11-22 1400\", DATE_TIME_FORMATTER));","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", b.getDone());","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vrhuvarkelvin"},"content":"        b.setTaskDone();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"1\", b.getDone());","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vrhuvarkelvin"},"content":"        Task c \u003d new TaskEvents(\"meeting\", LocalDateTime.parse(\"2021-08-22 2300\", DATE_TIME_FORMATTER),","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"vrhuvarkelvin"},"content":"                LocalTime.parse(\"0100\", DATE_TIME_FORMATTER_EVENT_END_TIME));","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", c.getDone());","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vrhuvarkelvin"},"content":"        c.setTaskDone();","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"1\", c.getDone());","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":56,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void setTaskUndoneTest(){","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"vrhuvarkelvin"},"content":"        Task a \u003d new TaskToDo(\"project\");","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", a.getDone());","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"vrhuvarkelvin"},"content":"        a.setTaskDone();","lastModifiedDate":"2021-11-12"},{"lineNumber":62,"author":{"gitId":"vrhuvarkelvin"},"content":"        a.setTaskUndone();","lastModifiedDate":"2021-11-12"},{"lineNumber":63,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", a.getDone());","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"vrhuvarkelvin"},"content":"        Task b \u003d new TaskDeadline(\"quiz\", LocalDateTime.parse(\"2021-11-22 1400\", DATE_TIME_FORMATTER));","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", b.getDone());","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"vrhuvarkelvin"},"content":"        b.setTaskDone();","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"vrhuvarkelvin"},"content":"        b.setTaskUndone();","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", b.getDone());","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vrhuvarkelvin"},"content":"        Task c \u003d new TaskEvents(\"meeting\", LocalDateTime.parse(\"2021-08-22 2300\", DATE_TIME_FORMATTER),","lastModifiedDate":"2021-11-12"},{"lineNumber":72,"author":{"gitId":"vrhuvarkelvin"},"content":"                LocalTime.parse(\"0100\", DATE_TIME_FORMATTER_EVENT_END_TIME));","lastModifiedDate":"2021-11-12"},{"lineNumber":73,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", c.getDone());","lastModifiedDate":"2021-11-12"},{"lineNumber":74,"author":{"gitId":"vrhuvarkelvin"},"content":"        c.setTaskDone();","lastModifiedDate":"2021-11-12"},{"lineNumber":75,"author":{"gitId":"vrhuvarkelvin"},"content":"        c.setTaskUndone();","lastModifiedDate":"2021-11-12"},{"lineNumber":76,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(\"0\", c.getDone());","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":79,"author":{"gitId":"vrhuvarkelvin"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":80,"author":{"gitId":"vrhuvarkelvin"},"content":"    public void deleteTaskTest() throws InvalidInputException, TaskNotFoundException {","lastModifiedDate":"2021-11-12"},{"lineNumber":81,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":82,"author":{"gitId":"vrhuvarkelvin"},"content":"        TaskList testTaskListDelete \u003d new TaskList();","lastModifiedDate":"2021-11-12"},{"lineNumber":83,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":84,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskListDelete.addTask(\"todo\", \"project\");","lastModifiedDate":"2021-11-12"},{"lineNumber":85,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskListDelete.addTask(\"deadline\", \"quiz /by 2021-11-22 1400\");","lastModifiedDate":"2021-11-12"},{"lineNumber":86,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskListDelete.addTask(\"event\", \"meeting /at 2021-08-22 2300 /to 0100\");","lastModifiedDate":"2021-11-12"},{"lineNumber":87,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":88,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(3, testTaskListDelete.getSize());","lastModifiedDate":"2021-11-12"},{"lineNumber":89,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskListDelete.deleteTask(\"2\");","lastModifiedDate":"2021-11-12"},{"lineNumber":90,"author":{"gitId":"vrhuvarkelvin"},"content":"        testTaskListDelete.deleteTask(\"1\");","lastModifiedDate":"2021-11-12"},{"lineNumber":91,"author":{"gitId":"vrhuvarkelvin"},"content":"        assertEquals(1, testTaskListDelete.getSize());","lastModifiedDate":"2021-11-12"},{"lineNumber":92,"author":{"gitId":"vrhuvarkelvin"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":93,"author":{"gitId":"vrhuvarkelvin"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":94,"author":{"gitId":"vrhuvarkelvin"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vrhuvarkelvin":94}}]
