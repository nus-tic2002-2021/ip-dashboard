[{"path":"src/main/Common/Help.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package Common;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import data.Commands;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import static Common.Message.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"public class Help {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"     * Display HELP content for user. To aid user to accustom to the command supported in this DUKE Application.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"     * @param s is parameter comes after HELP command to understand the individual command usages.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    public static void HelpCommand(String[] s){","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"        Commands commandKey \u003d null;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"        final String command;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"        if(s.length \u003e 1){","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"            command \u003d s[1].trim().toUpperCase();","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"        }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"            command \u003d \"BREAKTHROUGH\";","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"            commandKey \u003d Commands.valueOf(command);","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        }catch (IllegalArgumentException e){","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"            commandKey \u003d Commands.BREAKTHROUGH;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"        switch (commandKey){","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"            case DONE:","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_DONE);","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"            case TODO:","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_TODO);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"            case LIST:","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_LIST);","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"            case DEADLINE:","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_DEADLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"            case EVENT:","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_EVENT);","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"            case FIND:","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_FIND);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"            case SAVE:","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_SAVE); // Individual Feature","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"            case DELETE:","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_DELETE);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"            case VIEW:","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_VIEW); // Individual Feature","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"            case BYE:","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"                System.out.println(HELP_BYE);","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"            case BREAKTHROUGH:","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"               System.out.println(Message.getListOfCommandForUser());","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":64}},{"path":"src/main/Common/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package Common;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import static ui.Ui.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import data.Acronym;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import data.DeadLine;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"import data.Event;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"public class Message {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"    /*","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"    *A collection of System Messages","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"    */","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"    private final static String FILE_PATH_ERROR \u003d BUFFER + \" File Path Error!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"    private final static String FILE_IO_ERROR \u003d BUFFER + \" File IO ERROR while loading data!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"    private final static String FILE_EXTENSION_ERROR \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"            + \"Set file extention to .txt to archive the data from current session.\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"    private final static String DATA_LOADED_FROM_FILE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"User Data file exists in the \"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"            + Storage.getAbsFilePath(true) + NEWLINE_BUFFER +\"Data loaded into the DUKE Application successfully!\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"    private final static String NO_DATA_FILE_FOUND \u003d NEWLINE_BUFFER +\"File do not exist! Unable load data from \"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"            + Storage.getAbsFilePath(true) + \" to the ArrayList.\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"    private final  static String NO_ARCHIVE_FILE \u003d NEWLINE_BUFFER +\" Unable to write to archive file upon user Save command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"            + Storage.getAbsFilePath(false) + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"    private final static String NULL_POINTER_ERROR \u003d NEWLINE_BUFFER + \"Invalid Selection! \"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"Choose correct the number from the list \" + NEWLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"    private final static String NUMBER_EXCEPTION \u003d NEWLINE_BUFFER +\"This is not a number! or Single Digit number! Please Enter a Number\";","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"    private final static String INCORRECT_COMMAND \u003d \"Incorrect Command! Use HELP to find out more\";","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"    private final static String DATE_TIME_FORMAT_ERROR \u003d NEWLINE_BUFFER +\" error in date time format \" +","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"            \"example usage 01/01/2021 0000 or 21/12/2022 2359\" +NEWLINE+ BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"    private final static String ARRAYINDEXOUTOFBOUND \u003d NEWLINE_BUFFER + \"Missing Argument! \"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"Command is expecting argument \" + NEWLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"    private final static String BYE_ERROR \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER +","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"            \"BYE Command do not take any arguments\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"            + \"eg BYE or bye\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"    private final static String OUT_OF_RANGE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"            + \"OUT OF RANGE! Please check the task list again\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"    /*","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"    * A collection of USER HELP Command messages","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"    */","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"    private final static String LIST_OF_COMMAND_FOR_USER \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Supported Command for HELP:\"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"DONE, LIST, TODO, EVENT,DEADLINE, SAVE, DELETE, HELP, FIND, VIEW, BYE\"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"Example use of HELP command: HELP DONE or HELP LIST\" + NEWLINE","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER +\"The User command listed above are case insensitive so user can use them without worries \" + NEWLINE_BUFFER +","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"            \"but arguments which follows after the user command has specific format to follow. \" + NEWLINE_BUFFER +","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"            \"You may familiarise the usage of command through HELP usercommand\"+ NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_DONE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of DONE command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"done \u0027Task No\u0027 Task No is a positive index number from tasklist. A tasklist can be invoke using LIST command.\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"            + \"eg done 1 or done 2\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_TODO \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of TODO command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"todo \u0027Task Description\u0027 eg todo meeting or Todo cut hair\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_LIST \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of LIST command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"LIST is a standalone command which takes no arguments. eg LIST or list\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_DEADLINE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of DEADLINE command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"deadline \u0027Task description\u0027 /by \u0027timestamp\u0027 \" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"            + \"eg deadline \u0027project submission\u0027 /by \u002701/01/2022 1900\u0027\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_EVENT \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of EVENT command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"event \u0027Task description\u0027 /at \u0027timestamp\u0027 \" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"            + \"eg event \u0027food fare\u0027 /at \u002701/03/2022 0900\u0027\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_FIND \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of FIND command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"FIND \u0027keyword\u0027. A Keyword search looks for words in the description of the task in the Tasklist\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"samsspl"},"content":"            + \"eg find \u0027food\u0027 or Find \u0027meeting\u0027\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_SAVE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of SAVE command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"SAVE \u0027new file name\u0027.txt \" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"samsspl"},"content":"            + \"Save command is a way to archive the tasklist to a new file location in the current session, \" + NEWLINE_BUFFER +","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"samsspl"},"content":"            \"rather than keeping them in the current data file.\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"samsspl"},"content":"            + \"eg Save \u0027userdatabackup.txt\u0027 or SAVE \u0027data_backup.txt\u0027\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_DELETE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of DELETE command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"DELETE \u0027Task No\u0027. Task No is a positive index number from tasklist. A tasklist can be invoke using LIST command.\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"samsspl"},"content":"            + \"eg DELETE 1 or delete 2\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_VIEW \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of VIEW command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"VIEW \u0027TIMESTAMP\u0027. VIEW is a command to look up a specific date schedule.\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"samsspl"},"content":"            + \"eg VIEW \u002701/02/2022\u0027 or VIEW \u002712/01/2021\u0027\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"samsspl"},"content":"    public final static String HELP_BYE \u003d BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + \"Usage of BYE command: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"samsspl"},"content":"            + NEWLINE_BUFFER + \"BYE is a standalone command to end the current session of this DUKE application.\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"samsspl"},"content":"            + \"eg BYE or bye\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"samsspl"},"content":"    /*","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"samsspl"},"content":"    *methods to call these help Strings","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"samsspl"},"content":"    */","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"samsspl"},"content":"     * Display Task removal message from tasklist when delete command is called","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"samsspl"},"content":"     * This removal message methods is called before the actual task deleted.","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"samsspl"},"content":"     * @param itemlist takes in as readonly param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"samsspl"},"content":"     * @param idx is a specific index from the task list to be removed","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"samsspl"},"content":"    public static void taskremovedinMessage(final List\u003cTask\u003e itemlist, int idx)","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"samsspl"},"content":"        System.out.println(BUFF_PLUS_HORRIZONTALLINE + \"\\n\" + BUFFER +\"Noted. I\u0027ve removed this task: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"samsspl"},"content":"                + \"\\n\" + BUFFER + \"  [\"+itemlist.get(idx).getAcronym()+\"][\"+itemlist.get(idx).getStatusIcon()+\"] \"","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"samsspl"},"content":"                + itemlist.get(idx).getDescription()","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"samsspl"},"content":"                + \"\\n\"+ BUFFER +\"Now you have \"+ (itemlist.size()-1) +\" tasks in the list\");","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"samsspl"},"content":"     * Display Task being added into the tasklist from ListTask class task holder","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"samsspl"},"content":"     * @param it takes in as readonly param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"samsspl"},"content":"    public static void taskAddedinMessage(final List\u003cTask\u003e it)","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"samsspl"},"content":"        if(it.get(it.size()-1).getAcronym().equals(Acronym.T)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER+ \"Got it. I\u0027ve added this task: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE_BUFFER + \"  [\"+it.get(it.size()-1).getAcronym()+\"][ ] \" + it.get(it.size()-1).getDescription()","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE_BUFFER + \"Now you have \" + (it.size()) + \" tasks in the list.\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"samsspl"},"content":"        }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER+ \"Got it. I\u0027ve added this task: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE_BUFFER + \"  [\"+it.get(it.size()-1).getAcronym()+\"][ ] \" + it.get(it.size()-1).getDescription() +\" \"","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"samsspl"},"content":"                    + it.get(it.size()-1).displayDateTime() + NEWLINE_BUFFER + \"Now you have \" + (it.size())","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"samsspl"},"content":"                    + \" tasks in the list.\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"samsspl"},"content":"     * Display Task set to complete message from ListTask when DONE command is called","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"samsspl"},"content":"     * This setTaskDoneMessage methods is called after the actual task set as DONE.","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"samsspl"},"content":"     * @param it takes in as readonly param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"samsspl"},"content":"     * @param idx is a specific index from the task list to be set as Done","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"samsspl"},"content":"    public static void setTaskDoneMessage(final List\u003cTask\u003e it, int idx)","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"samsspl"},"content":"        if(it.get(idx).getAcronym().equals(Acronym.T)){","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"samsspl"},"content":"            System.out.println(new StringBuilder().append(BUFF_PLUS_HORRIZONTALLINE).append(NEWLINE_BUFFER)","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"samsspl"},"content":"                    .append(\"Nice! I\u0027ve marked this task as done: \")","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"samsspl"},"content":"                    .append(NEWLINE_BUFFER).append(\"[\").append(it.get(idx).getStatusIcon())","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"samsspl"},"content":"                    .append(\"] \").append(it.get(idx).getDescription()).append(NEWLINE).append(BUFF_PLUS_HORRIZONTALLINE));","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"samsspl"},"content":"        }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"samsspl"},"content":"            System.out.println(new StringBuilder().append(BUFF_PLUS_HORRIZONTALLINE).append(NEWLINE_BUFFER)","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"samsspl"},"content":"                    .append(\"Nice! I\u0027ve marked this task as done: \")","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"samsspl"},"content":"                    .append(NEWLINE_BUFFER).append(\"[\").append(it.get(idx).getStatusIcon())","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"samsspl"},"content":"                    .append(\"] \").append(it.get(idx).getDescription()).append(\" \")","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"samsspl"},"content":"                    .append(it.get(idx).displayDateTime()).append(NEWLINE).append(BUFF_PLUS_HORRIZONTALLINE));","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"samsspl"},"content":"     * Display Task that are already set as completed message from ListTask when DONE command is called","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"samsspl"},"content":"     * This getTaskDoneMessage methods is called when the actual task is already set to DONE.","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"samsspl"},"content":"     * @param it takes in as readonly param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"samsspl"},"content":"     * @param idx is a specific index from the task list to be set as Done","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"samsspl"},"content":"    public static void getTaskDoneMessage(final List\u003cTask\u003e it, int idx)","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"samsspl"},"content":"        if(it.get(idx).getAcronym().equals(Acronym.T)){","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"samsspl"},"content":"            System.out.println(new StringBuilder().append(BUFF_PLUS_HORRIZONTALLINE).append(NEWLINE_BUFFER)","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"samsspl"},"content":"                    .append(\"The task you selected is already marked as completed: \")","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"samsspl"},"content":"                    .append(NEWLINE_BUFFER).append(\"[\").append(it.get(idx).getStatusIcon())","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"samsspl"},"content":"                    .append(\"] \").append(it.get(idx).getDescription()).append(NEWLINE).append(BUFF_PLUS_HORRIZONTALLINE));","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"samsspl"},"content":"        }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"samsspl"},"content":"            System.out.println(new StringBuilder().append(BUFF_PLUS_HORRIZONTALLINE).append(NEWLINE_BUFFER)","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"samsspl"},"content":"                    .append(\"The task you selected is already marked as completed: \")","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"samsspl"},"content":"                    .append(NEWLINE_BUFFER).append(\"[\").append(it.get(idx).getStatusIcon())","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"samsspl"},"content":"                    .append(\"] \").append(it.get(idx).getDescription()).append(\" \")","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"samsspl"},"content":"                    .append(it.get(idx).displayDateTime()).append(NEWLINE).append(BUFF_PLUS_HORRIZONTALLINE));","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"samsspl"},"content":"     * View and Find Command is used to call this displayTaskAfterFiltered method through ViewScheduleByDate and FindKeywordCommand method respectively","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"samsspl"},"content":"     * Display the List of Task which already filtered by keywords Search or filtered by specific date","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"samsspl"},"content":"     * @param tks is a List of task passed FindKeywordCommand method from FindCommand Class","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"samsspl"},"content":"     * @param type can be VIEW or FIND command but not both, specified by User.","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"samsspl"},"content":"     * @param date is only use for VIEW command, FIND command will just leave a blank for date param","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"samsspl"},"content":"    public static void displayTaskAfterFiltered(final List\u003cTask\u003e tks, String type, String date){","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"samsspl"},"content":"        String header \u003d \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"samsspl"},"content":"        if(type.equalsIgnoreCase(\"view\")){","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"samsspl"},"content":"            header \u003d \"Here are the Tasks schedule for the date: \" + date;","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"samsspl"},"content":"        if(type.equalsIgnoreCase(\"find\")){","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"samsspl"},"content":"            header \u003d \"Here are the matching Task in your list: \";","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"samsspl"},"content":"        StringBuilder output \u003d new StringBuilder(BUFF_PLUS_HORRIZONTALLINE","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"samsspl"},"content":"                + NEWLINE_BUFFER + header);","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"samsspl"},"content":"        for(int i \u003d 0; i \u003c (tks.size()); i++){","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"samsspl"},"content":"            String desc \u003d tks.get(i).getDescription().trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"samsspl"},"content":"            Acronym acro \u003d tks.get(i).getAcronym();","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"samsspl"},"content":"            String status \u003d tks.get(i).getStatusIcon();","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"samsspl"},"content":"            String time \u003d tks.get(i).displayDateTime();","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"samsspl"},"content":"            int indx \u003d i + 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"samsspl"},"content":"            output.append(NEWLINE_BUFFER).append(indx).append(\".[\").append(acro).append(\"]\")","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"samsspl"},"content":"                    .append(\"[\").append(status).append(\"] \").append(desc);","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"samsspl"},"content":"            if(acro.equals(Acronym.E)){","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"samsspl"},"content":"                output.append(\" (at: \").append(time).append(\" )\");","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"samsspl"},"content":"            }else if(acro.equals(Acronym.D)){","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"samsspl"},"content":"                output.append(\" (by: \").append(time).append(\" )\");","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"samsspl"},"content":"        if(tks.isEmpty()){","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"samsspl"},"content":"            output.append(NEWLINE_BUFFER).append(\"NO Task Matches your query!\");","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"samsspl"},"content":"        output.append(NEWLINE).append(BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"samsspl"},"content":"        System.out.println(output);","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"samsspl"},"content":"    public static String showFilePathErrorMessage() {","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"samsspl"},"content":"        return FILE_PATH_ERROR;","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"samsspl"},"content":"    public static String showFileIOErrorMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"samsspl"},"content":"       return FILE_IO_ERROR;","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"samsspl"},"content":"    public static String incorrectSelection()","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"samsspl"},"content":"        return NULL_POINTER_ERROR;","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"samsspl"},"content":"    public static String getDateTimeFormatError()","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"samsspl"},"content":"        return DATE_TIME_FORMAT_ERROR;","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"samsspl"},"content":"    public static String getIncorrectCommand()","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"samsspl"},"content":"        return INCORRECT_COMMAND;","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"samsspl"},"content":"    public static String getNumberException()","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"samsspl"},"content":"        return NUMBER_EXCEPTION;","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"samsspl"},"content":"    public static String getListOfCommandForUser()","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"samsspl"},"content":"        return LIST_OF_COMMAND_FOR_USER;","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"samsspl"},"content":"    public static String getArrayindexoutofbound()","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"samsspl"},"content":"        return ARRAYINDEXOUTOFBOUND;","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"samsspl"},"content":"    public static String getByeError()","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"samsspl"},"content":"        return BYE_ERROR;","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"samsspl"},"content":"    public static String getFileExtensionError()","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"samsspl"},"content":"        return FILE_EXTENSION_ERROR;","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"samsspl"},"content":"    public static String getDataLoadedFromFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"samsspl"},"content":"        return DATA_LOADED_FROM_FILE;","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"samsspl"},"content":"    public static String getNoDataFileFound()","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"samsspl"},"content":"        return NO_DATA_FILE_FOUND;","lastModifiedDate":"2021-11-08"},{"lineNumber":258,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"samsspl"},"content":"    public static String getNoArchiveFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"samsspl"},"content":"        return NO_ARCHIVE_FILE;","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"samsspl"},"content":"    public static String getOutOfRange()","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":267,"author":{"gitId":"samsspl"},"content":"        return OUT_OF_RANGE;","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":269}},{"path":"src/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"import Common.Message;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"import data.Commands;","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import functions.ListTask;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"import static ui.Ui.BUFFER;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"public class Duke {","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    private Storage storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"    private Ui ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"    private ListTask newlist \u003d new ListTask();","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"            newlist.init();","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        }catch (InvalidPathException p){","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFFER+p.getMessage() + Message.showFilePathErrorMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        }catch (IOException o){","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFFER+o.getMessage() + Message.showFileIOErrorMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"    public void run() {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"        String userInput \u003d ui.readUserInput();  // Read user input","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"        while(!userInput.trim().equalsIgnoreCase(Commands.BYE.toString())){","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"            newlist.addTask(userInput, storage);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"            userInput \u003d ui.readUserInput();","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"        ui.showValedicMessage();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"    public static void main(String[] args)","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"        (new Duke(\"data/userdata.txt\")).run();","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":44}},{"path":"src/main/data/Acronym.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package data;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"public enum Acronym {","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"    T, E, D","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":5}},{"path":"src/main/data/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package data;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":" * List of commands supported in this DUKE Application. Some are user command and some are system usage behind the scene","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"public enum Commands {","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"    DONE, LIST, TODO, EVENT, DEADLINE, SAVE, DELETE, HELP, FIND, VIEW, BREAKTHROUGH, BYE","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":8}},{"path":"src/main/data/DeadLine.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package data;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"public class DeadLine extends Task{","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"    protected String date;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"    private LocalDateTime bywhen;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"    private String dateTimeForStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"     * deadline class constructor mainly called from ListTask class for adding deadline Task","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"     * @param des Description of the task","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"     * @param acro Acronym of the Task, in this case D out of (T,E,D)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"     * @param dat TimeStamp of the task","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"    public DeadLine(String des, Acronym acro, String dat){","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"        super(des,acro);","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        bywhen \u003d Parser.parseStringDateTimetoLocaLDateTime(dat);","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"        date \u003d Parser.parseDateForDisplay(bywhen);","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        dateTimeForStorage \u003d Parser.parseDateForStorage(bywhen);","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"    public String displayDateTime(){","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"        return date;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"    public String getDateTimeForStorage()","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"        return dateTimeForStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"    public LocalDateTime getbywhen(){","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"        return bywhen;","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":41}},{"path":"src/main/data/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package data;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"public class Event extends Task{","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"    private String clock;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"    private LocalDateTime atwhen;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"    private String dateTimeForStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    public Event(String des, Acronym acro, String hour) {","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"        super(des, acro);","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"        dateTimeForStorage \u003d hour;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"        atwhen \u003d Parser.parseStringDateTimetoLocaLDateTime(hour);","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"        clock \u003d Parser.parseDateForDisplay(atwhen);","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"    public String displayDateTime(){","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        return clock;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"    public String getDateTimeForStorage()","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"        return dateTimeForStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"    public LocalDateTime getAtwhen(){","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"        return atwhen;","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":34}},{"path":"src/main/data/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package data;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"public class Task {","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"    private String description;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"    private boolean isDone;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"    // T for todo, E for Events, D for deadlines","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"    private Acronym acronym;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"    public Task(){}","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"     * Constructor for Task Class with 2 param to set for description and acronym","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"     * At the start of this method called task is set to false.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"     * @param des is for description of the task","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"     * @param acr is for acronym of the task (T,E,D)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"    public Task(String des, Acronym acr){","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"        description \u003d des;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"        acronym \u003d acr;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"     * Setter for isDone variable. Task mark as DONE","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"     * @param done is passed so that in future can implement for user to mark as undone if necessary","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"    public void setDone(boolean done){","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"     * Method to show whether the task is completed or not in the task list","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"     * @return a String type X for done and \" \" for not yet done","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"     * Method to show the completeness of the task in the task list","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"     * @return return boolean status depending on isDone status","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"    public boolean getDone(){","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"        return isDone;","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"     * Method to show the description of the task in the task list","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"     * @return return String type description variable","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"    public String getDescription(){","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"        return description;","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"     * Method to get the acronym of the task","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"     * @return return Acronym type. Acronym is an Enumeration containing T, E, D","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"    public Acronym getAcronym() { return acronym; }","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"     * Method to display date and time but here in Task class there are no date or time variable","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"     * this is just a empty method to be overridden by Class Event and DeadLine","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"samsspl"},"content":"     * @return \"\" return nothing","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"samsspl"},"content":"    public String displayDateTime(){","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"samsspl"},"content":"        return \"\";","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":70}},{"path":"src/main/functions/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package functions;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import Common.Message;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import static ui.Ui.BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"public class DeleteCommand extends ListTask{","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"     * Instead of a class constructor, I have created a static method since there aren\u0027t any variable usages.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"     * From this method, taskremovedinMessage method from Message class is called","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"     * @param item takes in as param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"     * @param idx is a specific index from the task list to be removed","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"    public static void deleteTask(List\u003cTask\u003e item, int idx)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        int idxTodelete \u003d idx -1;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"        if(idxTodelete \u003c item.size() \u0026\u0026 idxTodelete \u003e\u003d 0)","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        {","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"            Message.taskremovedinMessage(item,idxTodelete);","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"            item.remove(idxTodelete);","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"        }else {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"            throw new NullPointerException(Message.incorrectSelection());","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"        System.out.println(BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":32}},{"path":"src/main/functions/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package functions;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import Common.Message;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import java.util.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"public class FindCommand extends ListTask {","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"     * Instead of a class constructor, I have created a static method since there aren\u0027t any variable usages.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"     * From this method, displayTaskAfterFiltered method from Message class is called","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"     * @param key set of string is passed to this method From ListTask class when FIND command is called","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"     * @param itemList takes in as readonly param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"    public static void FindKeywordCommand(Set\u003cString\u003e key, final List\u003cTask\u003e itemList){","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"        List\u003cTask\u003e temporaryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"        for(Task tem : itemList){","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"            Set\u003cString\u003e splitWordsInEachTask \u003d new HashSet\u003c\u003e(Arrays.asList(tem.getDescription().split(\" \")));","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"            if(!Collections.disjoint(key,splitWordsInEachTask)){","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"                temporaryList.add(tem);","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"        Message.displayTaskAfterFiltered(temporaryList,\"find\",\"\");","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":28}},{"path":"src/main/functions/ListTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package functions;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import Common.Help;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import Common.Message;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import data.DeadLine;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import data.Event;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"import data.Acronym;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"import data.Commands;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"import ui.Ui.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"import java.util.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"import static ui.Ui.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"public class ListTask","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"{","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"    private List\u003cTask\u003e itemList;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"    private int indx \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"    public ListTask(){","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"        itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"    public void init() throws IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"            Storage.load(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"            indx \u003d itemList.size();","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"        }catch (InvalidPathException p){","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFFER +p.getMessage() + NEWLINE_BUFFER + Message.showFilePathErrorMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"        }catch (IOException o){","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFFER+o.getMessage() + NEWLINE_BUFFER + Message.showFileIOErrorMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"     * user input into command for execution.","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"     * @param item full user input string","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"     * @param s the storage passed to invoke saving task to external file based on the user input","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"    public void addTask(String item, Storage s)","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"        String[] tmp \u003d item.trim().split(\" \"), tmp_string;","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"        final String command \u003d tmp[0].trim().toUpperCase();","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"        Commands commandKey \u003d null;","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"            commandKey \u003d Commands.valueOf(command);","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"        }catch (IllegalArgumentException e){","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFFER + Message.getIncorrectCommand());","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"            commandKey \u003d Commands.BREAKTHROUGH;","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"        switch (commandKey){","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"            case DONE:","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)done\");","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"                try {","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"                    setTaskDone(tmp_string[1].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"                    s.appendTaskListToExternal(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"samsspl"},"content":"                }catch (NumberFormatException e){","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + e.getMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"samsspl"},"content":"                            + Message.getNumberException() +  NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"samsspl"},"content":"                }catch (ArrayIndexOutOfBoundsException i){","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER  + i.getMessage() + Message.getArrayindexoutofbound() + NEWLINE + showList());","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"samsspl"},"content":"                }catch (Error t){","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"samsspl"},"content":"                    System.out.println(t.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"samsspl"},"content":"            case LIST:","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"samsspl"},"content":"                System.out.println(showList());","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"samsspl"},"content":"            case TODO:","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)todo\");","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"samsspl"},"content":"                try{","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"samsspl"},"content":"                    itemList.add(new Task(tmp_string[1],Acronym.T));","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"samsspl"},"content":"                    indx++;","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"samsspl"},"content":"                    Message.taskAddedinMessage(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"samsspl"},"content":"                    s.appendSingleTaskToExternal(itemList.get(itemList.size()-1));","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"samsspl"},"content":"                }catch (ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + a.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"samsspl"},"content":"                            + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"samsspl"},"content":"            case EVENT:","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)event | (?i)/at\"); // (?i) ignore case sensitivity","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"samsspl"},"content":"                try{","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"samsspl"},"content":"                    itemList.add(new Event(tmp_string[1],Acronym.E,tmp_string[2].trim()));","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"samsspl"},"content":"                    indx++;","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"samsspl"},"content":"                    Message.taskAddedinMessage(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"samsspl"},"content":"                    s.appendSingleTaskToExternal(itemList.get(itemList.size()-1));","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"samsspl"},"content":"                }catch (DateTimeException d){","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"samsspl"},"content":"                    System.out.println(d.getMessage() + Message.getDateTimeFormatError());","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"samsspl"},"content":"                }catch (ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + a.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"samsspl"},"content":"                            + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"samsspl"},"content":"            case DEADLINE:","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)deadline | (?i)/by\"); // (?i) ignore case sensitivity","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"samsspl"},"content":"                try{","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"samsspl"},"content":"                    itemList.add(new DeadLine(tmp_string[1],Acronym.D,tmp_string[2].trim()));","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"samsspl"},"content":"                    indx++;","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"samsspl"},"content":"                    Message.taskAddedinMessage(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"samsspl"},"content":"                    s.appendSingleTaskToExternal(itemList.get(itemList.size()-1));","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"samsspl"},"content":"                }catch (DateTimeException d){","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"samsspl"},"content":"                    System.out.println(d.getMessage() + Message.getDateTimeFormatError());","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"samsspl"},"content":"                }catch (ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + a.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"samsspl"},"content":"                            + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"samsspl"},"content":"            case SAVE: //for archiving","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)save\");","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"samsspl"},"content":"                DoArchiveFile(tmp_string,s);","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"samsspl"},"content":"            case DELETE:","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.trim().split(\"(?i)delete\");","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"samsspl"},"content":"                DoDeleteCommand(tmp_string,s);","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"samsspl"},"content":"            case HELP:","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"samsspl"},"content":"                String[] tmp_str \u003d item.split(\" \");","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"samsspl"},"content":"                Help.HelpCommand(tmp_str);","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"samsspl"},"content":"            case FIND:","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)FIND\");","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"samsspl"},"content":"                try{","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"samsspl"},"content":"                    Set\u003cString\u003e key \u003d new HashSet\u003c\u003e(Arrays.asList(tmp_string[1].trim().split(\" \")));","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"samsspl"},"content":"                    functions.FindCommand.FindKeywordCommand(key,itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"samsspl"},"content":"                }catch (ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + a.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"samsspl"},"content":"                            + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"samsspl"},"content":"            case VIEW:","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"samsspl"},"content":"                tmp_string \u003d item.split(\"(?i)VIEW\");","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"samsspl"},"content":"                try{","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"samsspl"},"content":"                    SearchFilteredTaskByDateTime.ViewScheduleByDate(tmp_string[1].trim(),itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"samsspl"},"content":"                }catch (ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"samsspl"},"content":"                    System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + a.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"samsspl"},"content":"                            + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"samsspl"},"content":"            case BYE:","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"samsspl"},"content":"                if(tmp.length \u003e 1){","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"samsspl"},"content":"                    System.out.println(Message.getByeError());","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"samsspl"},"content":"                }","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"samsspl"},"content":"            case BREAKTHROUGH:","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"samsspl"},"content":"                System.out.println(BUFFER + item.trim() + \" is not a command!\" + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"samsspl"},"content":"                break;","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"samsspl"},"content":"    public String showList()","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"samsspl"},"content":"        StringBuilder output \u003d new StringBuilder(BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"samsspl"},"content":"        for(int i \u003d 0; i \u003c indx; i++){","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"samsspl"},"content":"            String tem \u003d itemList.get(i).getDescription().trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"samsspl"},"content":"            Acronym acro \u003d itemList.get(i).getAcronym();","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"samsspl"},"content":"            String status \u003d itemList.get(i).getStatusIcon();","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"samsspl"},"content":"            int indx \u003d i + 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"samsspl"},"content":"            output.append(NEWLINE).append(BUFFER).append(indx).append(\".[\").append(acro).append(\"]\")","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"samsspl"},"content":"                    .append(\"[\").append(status).append(\"] \").append(tem);","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"samsspl"},"content":"            if(acro.equals(Acronym.E)){","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"samsspl"},"content":"                output.append(\" (at: \").append(itemList.get(i).displayDateTime()).append(\")\");","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"samsspl"},"content":"            }else if(acro.equals(Acronym.D)){","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"samsspl"},"content":"                output.append(\" (by: \").append(itemList.get(i).displayDateTime()).append(\")\");","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"samsspl"},"content":"        output.append(NEWLINE).append(BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"samsspl"},"content":"        return output.toString();","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"samsspl"},"content":"     * setTaskDone Method to set individual Task as DONE.","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"samsspl"},"content":"     * setTaskDone method can detect if the number specify by user is not within the range of list, it will throw new error","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"samsspl"},"content":"     * setTaskDone can also detect if the task is already marked as done before, if it\u0027s already marked, it will not call task done setter.","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"samsspl"},"content":"     * This method also called 3 different methods from Message Class to display information to User","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"samsspl"},"content":"     * @param str should be + integer within the range of list Task holder, (specify by User)","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"samsspl"},"content":"    public void setTaskDone(String str)","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"samsspl"},"content":"        int idxToSetAsDone \u003d (Integer.parseInt(str) - 1);","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"samsspl"},"content":"        if ( idxToSetAsDone \u003c (itemList.size()) \u0026\u0026 idxToSetAsDone \u003e\u003d 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"samsspl"},"content":"            if(!itemList.get(idxToSetAsDone).getDone()){","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"samsspl"},"content":"                itemList.get(idxToSetAsDone).setDone(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"samsspl"},"content":"                Message.setTaskDoneMessage(itemList,idxToSetAsDone);","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"samsspl"},"content":"            }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"samsspl"},"content":"                Message.getTaskDoneMessage(itemList,idxToSetAsDone);","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"samsspl"},"content":"        }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"samsspl"},"content":"            throw new Error(Message.getOutOfRange());","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"samsspl"},"content":"    public void DoDeleteCommand(String[] tmp, Storage s){","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"samsspl"},"content":"            DeleteCommand.deleteTask(itemList,Integer.parseInt(tmp[1].trim()));","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"samsspl"},"content":"            indx--;","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"samsspl"},"content":"            s.appendTaskListToExternal(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"samsspl"},"content":"        }catch (NumberFormatException e){","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + e.getMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"samsspl"},"content":"                    + Message.getNumberException() +  NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"samsspl"},"content":"        }catch (NullPointerException f){","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + f.getMessage()+ showList());","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"samsspl"},"content":"        }catch (ArrayIndexOutOfBoundsException a){","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + a.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"samsspl"},"content":"                    + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"samsspl"},"content":"    public void DoArchiveFile(String[] s,Storage st){","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"samsspl"},"content":"            if(!(s.length \u003e 2) \u0026\u0026 s[1].contains(\".txt\")){","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"samsspl"},"content":"                st.getNewFilePathForArchiving(s[1].trim());","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"samsspl"},"content":"                st.archiveTaskListToNewFIle(itemList);","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"samsspl"},"content":"            }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"samsspl"},"content":"                System.out.println(Message.getFileExtensionError());","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"samsspl"},"content":"        }catch(ArrayIndexOutOfBoundsException o){","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER + o.getMessage() + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"samsspl"},"content":"                    + Message.getArrayindexoutofbound() + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":235}},{"path":"src/main/functions/SearchFilteredTaskByDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package functions;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import Common.Message;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import data.Acronym;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import data.DeadLine;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import data.Event;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"import java.util.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"public class SearchFilteredTaskByDateTime extends ListTask{","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"     * One of the feature to be implemented in DUKE by me. when user used view command, DUKE will return schedule of a specific date","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"     * @param date user wants to see what kind of schedule he/she has for the specific date","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"     * @param list takes in as readonly param from ListTask class Task holder but can still be called setter/getter to change value","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"    public static void ViewScheduleByDate(String date, final List\u003cTask\u003e list){","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        List\u003cTask\u003e temporaryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"        LocalDate newDateToView \u003d Parser.parseStringDatetoLocaLDate(date);","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        for(Task singleItem : list){","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"              if(singleItem.getAcronym().equals(Acronym.D)){","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"                  DeadLine task \u003d (DeadLine)singleItem;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"                  if(task.getbywhen().toLocalDate().equals(newDateToView)){","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"                      temporaryList.add(singleItem);","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"                  }","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"              }else if(singleItem.getAcronym().equals(Acronym.E)){","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"                  Event task \u003d (Event) singleItem;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"                  if(task.getAtwhen().toLocalDate().equals(newDateToView)){","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"                      temporaryList.add(singleItem);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"                  }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"              }","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"        Message.displayTaskAfterFiltered(temporaryList,\"view\", date);","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":38}},{"path":"src/main/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"public class Parser {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"    public static String parseDateForStorage(LocalDateTime dateNTime)","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"        return dateNTime.format(formatter);","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"    public static LocalDateTime parseStringDateTimetoLocaLDateTime (String dateNTime)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"        return LocalDateTime.parse(dateNTime, formatter);","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"    public static LocalDate parseStringDatetoLocaLDate (String dateNTime)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        return LocalDate.parse(dateNTime, formatter);","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"    public static String parseDateForDisplay (LocalDateTime dateNTime)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hhmm a\");","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"        return dateNTime.format(formatter);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":30}},{"path":"src/main/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import Common.Message;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import java.io.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"import java.nio.file.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import static ui.Ui.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"public class Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"{","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"    // original file","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"    private static String filePath;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"    private static String homeLoc \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"    private static String AbsoluteFilePath;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"    private static Path path;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"    //new file for archiving","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"    private static String newAbsFilePath;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"    private static Path newPath;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"    public Storage(String fpath)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"        this.filePath \u003d fpath;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"    final public void getNewFilePathForArchiving(String newFilepath){","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"         newAbsFilePath \u003d Paths.get(homeLoc,\"duke/data/\", newFilepath).toString();","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"         newPath \u003d Paths.get(newAbsFilePath); // for future use if user wanting to load from archived file","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"    public static void initFilePath()","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"        AbsoluteFilePath \u003d Paths.get(homeLoc, \"duke\", filePath).toString();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"        path \u003d Paths.get(AbsoluteFilePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"    public static String getAbsFilePath(boolean initialFIle)","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"        if(initialFIle){","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"            return AbsoluteFilePath;","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"        }else{","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"            return newAbsFilePath;","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"    public static void load(List\u003cTask\u003e lt) throws InvalidPathException, IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"        initFilePath();","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"        try{","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"            TaskDecoder.decodeTaskListToLoad(Files.readAllLines(path),lt);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"            System.out.println(Message.getDataLoadedFromFile());","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER +e.getMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"                    + Message.getNoDataFileFound());","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"    public void appendSingleTaskToExternal(Task taskToSave)","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"samsspl"},"content":"            TaskEncoder.encodeTask(taskToSave, AbsoluteFilePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"samsspl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER +e.getMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE_BUFFER +\" Unable to append individual task to external file: \"+ AbsoluteFilePath","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"samsspl"},"content":"    public void appendTaskListToExternal(List\u003cTask\u003e taskToSave)","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"samsspl"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"samsspl"},"content":"            TaskEncoder.encodeTaskList(taskToSave,AbsoluteFilePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"samsspl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER +e.getMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE_BUFFER +\" Unable to save list of task to external file: \"+ AbsoluteFilePath","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE + BUFF_PLUS_HORRIZONTALLINE);","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"samsspl"},"content":"    public void archiveTaskListToNewFIle(List\u003cTask\u003e taskToSave)","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"samsspl"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"samsspl"},"content":"            TaskEncoder.encodeTaskList(taskToSave,newAbsFilePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"samsspl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"samsspl"},"content":"            System.out.println(BUFF_PLUS_HORRIZONTALLINE + NEWLINE_BUFFER +e.getMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"samsspl"},"content":"                    + Message.getNoArchiveFile());","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":93}},{"path":"src/main/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import data.Acronym;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import data.DeadLine;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import data.Event;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"public class TaskDecoder {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"    public static final Pattern TASK_DATA_ARGS_FORMAT \u003d // \u0027/\u0027 forward slashes are reserved for delimiter prefixes","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"            Pattern.compile(\"((^[DE]) \\\\| ([0-1]) \\\\| (.*\\\\|) (.*))|((^[T]) \\\\| ([0-1]) \\\\| (.*))\");","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"    public static void decodeTaskListToLoad(List\u003cString\u003e encodedTaskList, List\u003cTask\u003e task) throws IOException","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"        for (String encodedTask : encodedTaskList){","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"            task.add(decodeTaskFromStringLineByLine(encodedTask));","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"    private static Task decodeTaskFromStringLineByLine(String encodedTask) {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"        final Matcher matcher \u003d TASK_DATA_ARGS_FORMAT.matcher(encodedTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"            System.out.println(\"Data are not in the correct format. Unable to write to ArrayList From File\");","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"        String[] data \u003d encodedTask.split(\"[|]\");","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"        String acro \u003d data[0].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"        String isDone \u003d data[1].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"        String taskDesc \u003d data[2].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"        // Can be put in a separate method","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"        if (acro.equals(Acronym.T.toString())) { // Todo Task","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"            newTask \u003d new Task(taskDesc,Acronym.T);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"            if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"                newTask.setDone(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"        } else if (acro.equals(Acronym.D.toString())) { //Deadline Task","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"            String deadLineTimeStamp \u003d data[3].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"            newTask \u003d new DeadLine(taskDesc,Acronym.D,deadLineTimeStamp);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"            if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"                newTask.setDone(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"        } else if (acro.equals(Acronym.E.toString())) { //Event Task","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"            String eventTimeStamp \u003d data[3].trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"            newTask \u003d new Event(taskDesc, Acronym.E,eventTimeStamp);","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"            if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"                newTask.setDone(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"        return newTask;","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":58}},{"path":"src/main/storage/TaskEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import data.Acronym;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import data.DeadLine;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import data.Event;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"import data.Task;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"import java.io.File;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"public class TaskEncoder {","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"    public static void encodeTaskList(List\u003cTask\u003e toSave, String pathOfFileToSave) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"        final List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"        File newfile \u003d new File(pathOfFileToSave);","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"        if(!newfile.exists()){","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"            newfile.createNewFile();","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"        FileWriter fw \u003d new FileWriter(newfile, false);","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"        for(Task individualTask : toSave){","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"            encodedTaskList.add(encodeAcroToString(individualTask));","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"        for(String singleTask : encodedTaskList){","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"            bw.write(singleTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"            bw.newLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"        bw.close();","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"    public static void encodeTask(Task toSave, String pathOfFileToSave) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"            String encodedTask \u003d encodeAcroToString(toSave);","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"            FileWriter fw \u003d new FileWriter(pathOfFileToSave, true);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"            bw.write( encodedTask);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"            bw.newLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"            bw.close();","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"    private static String encodeAcroToString(Task task){","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"        StringBuilder encodedNewString \u003d new StringBuilder();","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"        if (task.getAcronym().equals(Acronym.T)){","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(Acronym.T);","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"            encodedNewString \u003d appendEncodedTask(encodedNewString, task);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"        else if (task.getAcronym().equals(Acronym.D)){","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(Acronym.D);","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"            encodedNewString \u003d appendEncodedTask(encodedNewString, task);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"            DeadLine d \u003d (DeadLine)task;","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(\" | \");","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(d.getDateTimeForStorage());","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"        else if (task.getAcronym().equals(Acronym.E)){","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(Acronym.E);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"            encodedNewString \u003d appendEncodedTask(encodedNewString, task);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"samsspl"},"content":"            Event e \u003d (Event)task;","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(\" | \");","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"samsspl"},"content":"            encodedNewString.append(e.getDateTimeForStorage());","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"samsspl"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"samsspl"},"content":"        return encodedNewString.toString();","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"samsspl"},"content":"    private static StringBuilder appendEncodedTask(StringBuilder sb, Task task){","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"samsspl"},"content":"        sb.append(\" | \").append(task.getDone() ? \"1\" : \"0\");","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"samsspl"},"content":"        sb.append(\" | \").append(task.getDescription());","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"samsspl"},"content":"        return sb;","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":77}},{"path":"src/main/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"package ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"samsspl"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"samsspl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"samsspl"},"content":"public class Ui {","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"samsspl"},"content":"     * This is a place for improving User experience and  the basic structure of DUKE Application","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"samsspl"},"content":"    public static final String BUFF_PLUS_HORRIZONTALLINE \u003d \"\\t-----------------------------------------------------------------------------------------\";","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"samsspl"},"content":"    public static final String BUFFER \u003d \"\\t\";","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"samsspl"},"content":"    public static final String NEWLINE \u003d \"\\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"samsspl"},"content":"    public static final String NEWLINE_BUFFER \u003d \"\\n\\t\";","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"samsspl"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"samsspl"},"content":"    private final Scanner in;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"samsspl"},"content":"    private final String GREETING_MESSAGE \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"samsspl"},"content":"            BUFF_PLUS_HORRIZONTALLINE","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"samsspl"},"content":"                    + NEWLINE + BUFFER +","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"samsspl"},"content":"                    \" ____        _        \" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"samsspl"},"content":"                    + \"|  _ \\\\ _   _| | _____ \" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"samsspl"},"content":"                    + \"| | | | | | | |/ / _ \\\\\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"samsspl"},"content":"                    + \"| |_| | |_| |   \u003c  __/\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"samsspl"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + NEWLINE + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"samsspl"},"content":"                    + \"Hello! I\u0027m Duke\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samsspl"},"content":"                    + \"What can I do for you?\" + NEWLINE_BUFFER","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"samsspl"},"content":"                    + \"This is a Improved version done by Sam\" + NEWLINE","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"samsspl"},"content":"                    + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"samsspl"},"content":"    private final String VALEDICTION \u003d BUFFER + \"Bye. Hope to see you again soon!\"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"samsspl"},"content":"            + NEWLINE + BUFF_PLUS_HORRIZONTALLINE;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"samsspl"},"content":"    public Ui() {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"samsspl"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"samsspl"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"samsspl"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"samsspl"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"samsspl"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"samsspl"},"content":"     * Method to read from the System.in","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"samsspl"},"content":"     * @return return String type","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"samsspl"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"samsspl"},"content":"    public String readUserInput()","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"samsspl"},"content":"        out.println(BUFFER +\"Enter your query: \");","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"samsspl"},"content":"        return in.nextLine();","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"samsspl"},"content":"    public void showWelcomeMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"samsspl"},"content":"        out.println(GREETING_MESSAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"samsspl"},"content":"    public void showValedicMessage()","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"samsspl"},"content":"    {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"samsspl"},"content":"        out.println(VALEDICTION);","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"samsspl"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"samsspl"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"samsspl"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samsspl":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samsspl"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"samsspl"},"content":"blah","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"samsspl"},"content":"bye","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"samsspl":3}}]
