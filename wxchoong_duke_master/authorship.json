[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wxchoong":17,"-":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    private Label dialog;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"        Circle clip \u003d new Circle(25, 25, 25);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"    private void flip() {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"     * Returns the user dialog box for display.","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"     * @param text User input message text.","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"     * @param img User profile display picture.","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"     * Returns the duke dialog box for display.","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"     * @param text Duke response message text.","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"     * @param img Duke profile display picture.","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"        db.flip();","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"        return db;","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":71}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"import commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"import parser.Parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.*;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import exceptions.*;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * Main class of the Duke program.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" * The Duke program is a ChatBot that helps user to keep track of to-dos, deadlines and events.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    private final Storage storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"     * Constructor of \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"     * @param filePath Location of the file which stores the tasks.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"                storage.init();","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"            } catch (IOException error) {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"                ui.showError(error.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"    /** Method to start running the Duke program. */","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"    public void runCmd() {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"                ui.showLine();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"            } finally {","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"                ui.showLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"    /** Returns Duke response message for display on GUI. */","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"    public String reply(String input) {","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"            String fullCommand \u003d input;","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"            return e.getMessage();","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"        new Duke(\"data/tasks.txt\").runCmd();","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wxchoong":71,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"public class Launcher {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class Main extends Application {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/css/stylesheet.css\").toExternalForm());","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"            stage.show();","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    private TextField userInput;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    private Button sendButton;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    private Duke duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    public void initialize() {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"        duke \u003d d;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"        String response \u003d duke.reply(input);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        );","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        userInput.clear();","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":49}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.*;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eAddCommand\u003c/code\u003e is used to add new task into the TaskList.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    Task task;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    public AddCommand(Task task){","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        boolean isAdded \u003d taskList.addTask(task);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        if (isAdded){","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"            storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"            ui.showAdded();","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"            ui.printTask(task.toString());","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"            ui.printTaskCount(taskList.getListSize());","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"            return Messages.ADDED_MSG + Messages.getTaskMsg(task.toString()) +","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"                    Messages.getTaskCountMsg(taskList.getListSize());","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"            ui.showError(\"Task is not added. There is a schedule clash!\");","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"            return \"Task is not added. There is a schedule clash!\";","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":39}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" * This \u003ccode\u003eCommand\u003c/code\u003e class is an abstract class to be extended by other command classes.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    public Command(){}","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"     * Executes a command and returns the success message.","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"     * Needs to be implemented in other command classes (abstract).","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"     * @param taskList TaskList object where all available tasks are stored.","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"     * @param ui Ui object to print statements for user interaction.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"     * @param storage Storage object to save the tasks into specific file.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"     * @throws DukeException If command execution failed.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"     * @throws IOException If file writing/ saving failed.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"     * Sets program exit flag.","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"     * @param exit Exit flag (true or false).","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"    public void setExit(boolean exit){","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"        isExit \u003d exit;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"    /** Returns the exit flag */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"        return isExit;","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":45}},{"path":"src/main/java/commands/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"public enum CommandEnum {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"    LIST, TODO, DEADLINE, EVENT, DONE, DELETE, FIND, VIEW, HELP, BYE","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"wxchoong":5}},{"path":"src/main/java/commands/CompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eCompleteCommand\u003c/code\u003e is used to set the status of a task to \"done\".","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"public class CompleteCommand extends Command{","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    int taskId;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    public CompleteCommand(int taskId){","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        String completedTask \u003d taskList.setDone(taskId);","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        ui.showCompleted();","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        ui.printTask(completedTask);","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        return Messages.COMPLETED_MSG + Messages.getTaskMsg(completedTask);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":30}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eDeleteCommand\u003c/code\u003e is used to delete a task from the TaskList.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    int taskId;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    public DeleteCommand(int taskId){","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        String deletedTask \u003d taskList.deleteTask(taskId);","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        ui.showDeleted();","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        ui.printTask(deletedTask);","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        ui.printTaskCount(taskList.getListSize());","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        return Messages.DELETED_MSG + Messages.getTaskMsg(deletedTask);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":31}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eExitCommand\u003c/code\u003e is used to terminate and exit the Duke program.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        ui.showExit();","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        super.setExit(true);","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        return Messages.EXIT_MSG;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":19}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eFindCommand\u003c/code\u003e is used to search for tasks which description contains the input keyword.","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    String keyword;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    public FindCommand(String keyword){","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e results \u003d taskList.searchTask(keyword);","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        ui.showSearchCompleted();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        ui.printAllTasks(results);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        return Messages.SEARCH_COMPLETED_MSG + Messages.getAllTasksMsg(results);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"wxchoong":29}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eHelpCommand\u003c/code\u003e is used to list all command types and their formats.","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        ui.showHelp();","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        return Messages.HELP_MSG;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":18}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eInvalidCommand\u003c/code\u003e is used to capture invalid input command that cannot be executed.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    private final String errorMsg;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    public InvalidCommand(String errorMsg){","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"        throw new DukeException(errorMsg);","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":23}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eListCommand\u003c/code\u003e is used to list (print out) all the tasks in the TaskList.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        ui.showListed();","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        ui.printAllTasks(taskList.getTasks());","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        return Messages.LISTED_MSG + Messages.getAllTasksMsg(taskList.getTasks());","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":19}},{"path":"src/main/java/commands/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import ui.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" * \u003ccode\u003eViewCommand\u003c/code\u003e is used to list all the tasks scheduled on the input date.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eCommand\u003c/code\u003e class.","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"public class ViewCommand extends Command{","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    LocalDate date;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    public ViewCommand(LocalDate date){","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        ui.showScheduleFor(date);","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        ui.printAllTasks(taskList.getTaskSchedule(date));","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        return Messages.getScheduledMsg(date) + Messages.getAllTasksMsg(taskList.getTaskSchedule(date));","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"wxchoong":27}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package exceptions;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":" *  The class \u003ccode\u003eDukeException\u003c/code\u003e is a form of \u003ccode\u003eThrowable\u003c/code\u003e that indicates exceptions caught by the Duke program.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"    private final String message;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"     *  Constructor of \u003ccode\u003eDukeException\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"     * @param message Duke error message to be printed.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public DukeException(String message) { this.message \u003d message; }","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    public String getMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        return message;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":20}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import commands.*;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.DeadlineTask;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import tasks.EventTask;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import tasks.Task;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import tasks.ToDoTask;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":" *  A \u003ccode\u003eParser\u003c/code\u003e object deals with making sense of the user command.","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"public class Parser {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"     * Returns a \u003ccode\u003eCommand\u003c/code\u003e object converted from the input command string.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"     * If the input command string is invalid, an \u003ccode\u003eInvalidCommand\u003c/code\u003e object will be returned.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"     * @param fullCommand Input command string.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        assert fullCommand !\u003d null : \"Command be null\";","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        // split the fullCommand and get the command keyword","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        String[] args \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        String keyword \u003d args[0].toUpperCase();","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        CommandEnum commandEnum \u003d null;","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"            commandEnum \u003d CommandEnum.valueOf(keyword);","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"            //Use ui to display error later","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Command \u003c\" + keyword.toLowerCase() + \"\u003e not found.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"        switch(commandEnum){","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        case LIST:","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"            return doList();","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"        case HELP:","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"            return doHelp();","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        case TODO:","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"            return doAddTodo(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        case DEADLINE:","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"            return doAddDeadline(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        case EVENT:","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"            return doAddEvent(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"        case DONE:","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"            return doComplete(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"        case DELETE:","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"            return doDelete(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"        case FIND:","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"            return doFind(args);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"        case VIEW:","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"            return doView(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"        case BYE:","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"            return doExit();","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Error executing command\");","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"    private static Command doList(){","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"        return new ListCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"    private static Command doHelp(){","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"    private static Command doAddTodo (String[] args){","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"        String description \u003d args[1];","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"        boolean descriptionMissing \u003d description.isBlank() || description.isEmpty();","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"            if (descriptionMissing) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"                return new InvalidCommand(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"                        \"\\nDescription is missing.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"            Task task \u003d new ToDoTask(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"                    \"\\nDescription is missing.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"    private static Command doAddDeadline(String[] args){","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"            String[] deadlineInfo \u003d args[1].split(\" /by \");","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"            String description \u003d deadlineInfo[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"            boolean descriptionMissing \u003d description.isBlank() || description.isEmpty();","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"            if (descriptionMissing) {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"                return new InvalidCommand(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"                        \"\\nDescription is missing.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"            LocalDateTime deadline \u003d LocalDateTime.parse(deadlineInfo[1], formatter);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"            Task task \u003d new DeadlineTask(description, deadline);","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"                    \"\\nDeadline or description is missing.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"                    \"\\nPlease enter deadline in the format of \u0027yyyy-MM-dd HHmm\u0027\");","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":111,"author":{"gitId":"wxchoong"},"content":"    private static Command doAddEvent(String[] args){","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"wxchoong"},"content":"            String[] eventInfo \u003d args[1].split(\" /at \");","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"wxchoong"},"content":"            String description \u003d eventInfo[0];","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"wxchoong"},"content":"            boolean descriptionMissing \u003d eventInfo[0].isBlank() || eventInfo[0].isEmpty();","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"wxchoong"},"content":"            if (descriptionMissing) {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"wxchoong"},"content":"                return new InvalidCommand(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"wxchoong"},"content":"                        \"\\nDescription is missing.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"wxchoong"},"content":"            String[] times \u003d eventInfo[1].split(\" -to \");","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"wxchoong"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(times[0], formatter);","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"wxchoong"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(times[1], formatter);","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"wxchoong"},"content":"            Task task \u003d new EventTask(description, start, end);","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"wxchoong"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task cannot be added. \\n\" +","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"wxchoong"},"content":"                    \"Event time or description is missing.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"wxchoong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task cannot be added. \\n\" +","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"wxchoong"},"content":"                    \"Please enter event datetime in the format of \u0027yyyy-MM-dd HHmm -to yyyy-MM-dd HHmm\u0027\");","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"wxchoong"},"content":"    private static Command doComplete(String[] args){","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":138,"author":{"gitId":"wxchoong"},"content":"            int taskId \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"wxchoong"},"content":"            return new CompleteCommand(taskId);","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task id is missing.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":143,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"wxchoong"},"content":"    private static Command doDelete(String[] args){","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":147,"author":{"gitId":"wxchoong"},"content":"            int taskId \u003d Integer.parseInt(args[1]);","lastModifiedDate":"2021-10-03"},{"lineNumber":148,"author":{"gitId":"wxchoong"},"content":"            return new DeleteCommand(taskId);","lastModifiedDate":"2021-10-03"},{"lineNumber":149,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Task id is missing.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":151,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":152,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":153,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":154,"author":{"gitId":"wxchoong"},"content":"    private static Command doFind(String[] args){","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"wxchoong"},"content":"            String keyword \u003d args[1];","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"wxchoong"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Search keyword is missing.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"wxchoong"},"content":"    private static Command doView(String[] args) {","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"wxchoong"},"content":"            LocalDate date \u003d LocalDate.parse(args[1], formatter);","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"wxchoong"},"content":"            return new ViewCommand(date);","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"wxchoong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Date is missing.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"wxchoong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"wxchoong"},"content":"            return new InvalidCommand(\"Please enter the date in the format of \u0027yyyy-MM-dd\u0027\");","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"wxchoong"},"content":"    private static Command doExit(){","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"wxchoong"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":177,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":178,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":178}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package storage;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.*;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.io.File;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"import java.util.*;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"public class Storage {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    private final String filePath;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"     * Constructor of \u003ccode\u003eStorage\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"     * @param filePath Filepath of which the file to store tasks is located.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    public Storage(String filePath){","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"     * Reads tasks stored in specific file and load them into a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"     * Returns an ArrayList of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"     * The filepath has to be specified when constructing the \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"     * @throws FileNotFoundException If file specified is not found.","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException {","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"        File taskFile \u003d new File(filePath);","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"        boolean fileExists \u003d taskFile.exists();","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"        if (fileExists) {","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"            Scanner s \u003d new Scanner(taskFile);","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"                String taskStr \u003d s.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"                try {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"                    Task newTask \u003d convertToTask(taskStr);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"                } catch (Exception e){","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"            return tasks;","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"     * Creates directory and file at specific filepath for storing tasks.","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"     * The filepath has to be specified when constructing the \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"     * @throws IOException If the creation of file or directory is unsuccessful.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"    public void init() throws IOException {","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        File tasks \u003d new File(filePath);","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"        String directory \u003d tasks.getParent();","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"        File folders \u003d new File(directory);","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"        if (!folders.exists()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"            folders.mkdirs();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"        tasks.createNewFile();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"     * Returns a \u003ccode\u003eTask\u003c/code\u003e object converted from the input string.","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"     * @param taskStr Task in string format.","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"    private Task convertToTask(String taskStr) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"        assert taskStr !\u003d null: \"taskStr must be valid\";","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"        String[] args \u003d taskStr.split(\" \\\\| \");","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"        String keyword \u003d args[0];","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"        String status \u003d args[1];","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"        String description \u003d args[2];","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"        switch (keyword) {","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"        case \"T\": {","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"            task \u003d new ToDoTask(description);","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"        case \"D\":","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"            assert args[3] !\u003d null: \"deadline value cannot be null\";","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime deadline \u003d LocalDateTime.parse(args[3], formatter);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"                task \u003d new DeadlineTask(description, deadline);","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"                throw new DukeException(\"One or more Task(s) cannot be loaded due to invalid format.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"        case \"E\":","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"            assert args[3] !\u003d null: \"start datetime value cannot be null\";","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"            assert args[4] !\u003d null: \"start datetime value cannot be null\";","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"wxchoong"},"content":"            try {","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime start \u003d LocalDateTime.parse(args[3], formatter);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime end \u003d LocalDateTime.parse(args[4], formatter);","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"wxchoong"},"content":"                task \u003d new EventTask(description, start, end);","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"wxchoong"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"wxchoong"},"content":"                throw new DukeException(\"One or more Task(s) cannot be loaded due to invalid format.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"wxchoong"},"content":"            break;","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"wxchoong"},"content":"        if (status.equals(\"1\")) { task.markAsDone(); }","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"wxchoong"},"content":"        return task;","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"wxchoong"},"content":"     * Saves the list of tasks into specific file.","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"wxchoong"},"content":"     * The filepath has to be specified when constructing the \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"wxchoong"},"content":"     * @param tasks ArrayList of \u003ccode\u003eTask\u003c/code\u003e objects to be saved.","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"wxchoong"},"content":"     * @throws IOException If the file writing/ saving operation is unsuccessful.","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"wxchoong"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-10-03"},{"lineNumber":132,"author":{"gitId":"wxchoong"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":135,"author":{"gitId":"wxchoong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-10-03"},{"lineNumber":136,"author":{"gitId":"wxchoong"},"content":"                String taskType \u003d task.getClass().getSimpleName();","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":138,"author":{"gitId":"wxchoong"},"content":"                String taskStr \u003d null;","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"wxchoong"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"wxchoong"},"content":"                String status \u003d task.isDone() ? \"1\" : \"0\";","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"wxchoong"},"content":"                switch (taskType) {","lastModifiedDate":"2021-10-03"},{"lineNumber":143,"author":{"gitId":"wxchoong"},"content":"                case \"ToDoTask\":","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"wxchoong"},"content":"                    taskStr \u003d \"T | \" + status + \" | \" + description + \"\\n\";","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"wxchoong"},"content":"                    break;","lastModifiedDate":"2021-10-03"},{"lineNumber":146,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"wxchoong"},"content":"                case \"DeadlineTask\":","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"wxchoong"},"content":"                    DeadlineTask deadlineTask \u003d (DeadlineTask)task;","lastModifiedDate":"2021-10-03"},{"lineNumber":149,"author":{"gitId":"wxchoong"},"content":"                    taskStr \u003d \"D | \" + status + \" | \" + description + \" | \" + deadlineTask.getBy() + \"\\n\";","lastModifiedDate":"2021-10-03"},{"lineNumber":150,"author":{"gitId":"wxchoong"},"content":"                    break;","lastModifiedDate":"2021-10-03"},{"lineNumber":151,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"wxchoong"},"content":"                case \"EventTask\":","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"wxchoong"},"content":"                    EventTask eventTask \u003d (EventTask)task;","lastModifiedDate":"2021-10-03"},{"lineNumber":154,"author":{"gitId":"wxchoong"},"content":"                    taskStr \u003d \"E | \" + status + \" | \" + description + \" | \" + eventTask.getStart() +","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"wxchoong"},"content":"                            \" | \" + eventTask.getEnd() + \"\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"wxchoong"},"content":"                    break;","lastModifiedDate":"2021-10-03"},{"lineNumber":157,"author":{"gitId":"wxchoong"},"content":"                }","lastModifiedDate":"2021-10-03"},{"lineNumber":158,"author":{"gitId":"wxchoong"},"content":"                fw.write(taskStr);","lastModifiedDate":"2021-10-03"},{"lineNumber":159,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"wxchoong"},"content":"            fw.close();","lastModifiedDate":"2021-10-03"},{"lineNumber":161,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"wxchoong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":163,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":164,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":165,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"wxchoong"},"content":"     * Returns the filepath of current Storage object.","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"wxchoong"},"content":"    public String getFilePath() {","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"wxchoong"},"content":"        return filePath;","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":172}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eDeadLineTask\u003c/code\u003e object stores a task with deadline.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * * Extends the \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"     * Constructor of \u003ccode\u003eDeadLineTask\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"     * @param description Brief description of the task.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"     * @param deadline Deadline of the task.","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    public DeadlineTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"     * Returns the deadline of the \u003ccode\u003eDeadLineTask\u003c/code\u003e object.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    public String getBy() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"        return deadline.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"wxchoong":37}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eEventTask\u003c/code\u003e object stores a task (event) with date time.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"     * Constructor of \u003ccode\u003eEventTask\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"     * @param description Brief description of the task.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"     * @param start Start DateTime of the task (event).","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"     * @param end End DateTime of the task (event).","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    public EventTask(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"     * Returns the event start date time of the \u003ccode\u003eEventTask\u003c/code\u003e object.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"    public String getStart() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"        return start.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"     * Returns the event end date time of the \u003ccode\u003eEventTask\u003c/code\u003e object.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"    public String getEnd() {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        return end.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"     * Returns the event date time (period) of the \u003ccode\u003eEventTask\u003c/code\u003e object.","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"    public String getAt() {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        return getStart() + \" - \" + getEnd();","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"wxchoong":54}},{"path":"src/main/java/tasks/Scheduler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eScheduler\u003c/code\u003e object stores the start and end datetime of events.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * It will check for clashes before an event is added to the task list.","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" * Return true if the new event can be added and false otherwise.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class Scheduler {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    private final ArrayList\u003cDeadlineTask\u003e deadlines;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    private final ArrayList\u003cEventTask\u003e events;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    public Scheduler(){","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"     * Returns after adding new deadline.","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"     * The core scheduling function.","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"     * @param deadlineTask New deadline.","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    public void scheduleDeadline(DeadlineTask deadlineTask) {","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        LocalDateTime deadline \u003d deadlineTask.deadline;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"        boolean scheduleIsEmpty \u003d deadlines.size() \u003d\u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        if (scheduleIsEmpty) {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"            deadlines.add(deadlineTask);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"            return;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        int index \u003d searchForNewDeadlineSlot(deadline);","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"        deadlines.add(index, deadlineTask);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"        return;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"     * Returns true if the event is scheduled, false if the event cannot be added.","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"     * The core scheduling function.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"     * @param event New event.","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"    public boolean scheduleEvent(EventTask event) {","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        LocalDateTime start \u003d event.start;","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        LocalDateTime end \u003d event.end;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"        // start time is later than end time","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"        // no event in the schedule","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"        boolean scheduleIsEmpty \u003d events.size() \u003d\u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"        if (scheduleIsEmpty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"            events.add(event);","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"        boolean startLate \u003d start.isAfter(events.get(events.size()-1).start) ||","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"                start.isEqual(events.get(events.size()-1).start);","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"        boolean startAfterLastEvent \u003d start.isAfter(events.get(events.size()-1).end) ||","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"                start.isEqual(events.get(events.size()-1).end) ;","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"        boolean startEarly \u003d start.isBefore(events.get(0).start) ||","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"                start.isEqual(events.get(0).start);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"        boolean endBeforeFirstEvent \u003d end.isBefore(events.get(0).start) ||","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"                end.isEqual(events.get(0).start);","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"        if (startLate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"            if (startAfterLastEvent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"                events.add(event);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"                return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"        } else if (startEarly) {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"            if (endBeforeFirstEvent){","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"                events.add(0,event);","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"                return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"        } else { //start somewhere in the middle","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"            int index \u003d searchForNewEventSlot(start);","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"            if (index \u003d\u003d -1) { //clashed","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"                return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"            boolean startNotClash \u003d start.isAfter(events.get(index - 1).end)","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"                    || start.isEqual(events.get(index - 1).end) ;","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"            boolean endNotClash \u003d end.isBefore(events.get(index).start) ||","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"                    end.isEqual(events.get(index).start);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"            if (startNotClash \u0026\u0026 endNotClash) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"                events.add(index, event);","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"                return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"     * Returns -1 if there is time clashes, else returns the index of the slot.","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"     * The helper function to binary search for slot based on event start time.","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"     * @param start Start DateTime of the new event.","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"    private int searchForNewEventSlot(LocalDateTime start){","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"        int left \u003d 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"        int right \u003d events.size() - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"        while (left \u003c right){","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"            int mid \u003d (left + right) / 2;","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"            if ((events.get(mid).start).equals(start)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"wxchoong"},"content":"                return -1;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"wxchoong"},"content":"            } else if ((events.get(mid).start).isAfter(start)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"wxchoong"},"content":"                right \u003d mid;","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"wxchoong"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"wxchoong"},"content":"                left \u003d mid + 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"wxchoong"},"content":"        return right;","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"wxchoong"},"content":"     * Returns index+1 if there is same deadline timing, else returns the index of the desired slot.","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"wxchoong"},"content":"     * The helper function to binary search for slot based on event start time.","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"wxchoong"},"content":"     * @param deadline Start DateTime of the new event.","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"wxchoong"},"content":"    private int searchForNewDeadlineSlot(LocalDateTime deadline){","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"wxchoong"},"content":"        int left \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"wxchoong"},"content":"        int right \u003d deadlines.size() - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"wxchoong"},"content":"        while (left \u003c right){","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"wxchoong"},"content":"            int mid \u003d (left + right) / 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"wxchoong"},"content":"            if ((deadlines.get(mid).deadline).equals(deadline)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"wxchoong"},"content":"                return mid+1;","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"wxchoong"},"content":"            } else if ((deadlines.get(mid).deadline).isAfter(deadline)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"wxchoong"},"content":"                right \u003d mid;","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"wxchoong"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"wxchoong"},"content":"                left \u003d mid + 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"wxchoong"},"content":"        return right;","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"wxchoong"},"content":"     * Loads schedule of existing events.","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"wxchoong"},"content":"     * @param tasks List of tasks loaded from existing tasks file.","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"wxchoong"},"content":"    public void loadSchedule(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"wxchoong"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"wxchoong"},"content":"            boolean isDeadline \u003d task.getClass().equals(DeadlineTask.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"wxchoong"},"content":"            boolean isEvent \u003d task.getClass().equals(EventTask.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"wxchoong"},"content":"            if (isEvent) {","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"wxchoong"},"content":"                EventTask event \u003d (EventTask) task;","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"wxchoong"},"content":"                scheduleEvent(event);","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"wxchoong"},"content":"            if (isDeadline) {","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"wxchoong"},"content":"                DeadlineTask deadline \u003d (DeadlineTask) task;","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"wxchoong"},"content":"                scheduleDeadline(deadline);","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"wxchoong"},"content":"     * Returns -1 if the event is not found, else return the index of the event.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"wxchoong"},"content":"     * Another helper function to binary search for slot based on event start time.","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"wxchoong"},"content":"     * @param event Event to look up for.","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"wxchoong"},"content":"    private int retrieveEventSlot(EventTask event){","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"wxchoong"},"content":"        int left \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"wxchoong"},"content":"        int right \u003d events.size() - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"wxchoong"},"content":"        while (left \u003c\u003d right){","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"wxchoong"},"content":"            int mid \u003d (left + right) / 2;","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"wxchoong"},"content":"            if (events.get(mid).equals(event)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"wxchoong"},"content":"                return mid;","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"wxchoong"},"content":"            } else if ((events.get(mid).start).isAfter(event.start)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"wxchoong"},"content":"                right \u003d mid - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"wxchoong"},"content":"            } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"wxchoong"},"content":"                left \u003d mid + 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"wxchoong"},"content":"        return -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"wxchoong"},"content":"     * Returns -1 if the deadline is not found, else return the index of the deadline.","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"wxchoong"},"content":"     * Another helper function to binary search for slot based on event start time.","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"wxchoong"},"content":"     * @param deadline Deadline to look up for.","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"wxchoong"},"content":"    private int retrieveDeadlineSlot(DeadlineTask deadline){","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"wxchoong"},"content":"        int left \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"wxchoong"},"content":"        int right \u003d deadlines.size() - 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"wxchoong"},"content":"        while (left \u003c\u003d right){","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"wxchoong"},"content":"            int mid \u003d (left + right) / 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"wxchoong"},"content":"            if (deadlines.get(mid).equals(deadline)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"wxchoong"},"content":"                return mid;","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"wxchoong"},"content":"            } else if ((deadlines.get(mid).deadline).isAfter(deadline.deadline)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"wxchoong"},"content":"                right \u003d mid - 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"wxchoong"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"wxchoong"},"content":"                left \u003d mid + 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"wxchoong"},"content":"        return -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"wxchoong"},"content":"     * Removes a particular event from the schedule (clear the slot).","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"wxchoong"},"content":"     * @param event Event to be removed.","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"wxchoong"},"content":"    public void freeUpEventSlot(EventTask event){","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"wxchoong"},"content":"        int index \u003d retrieveEventSlot(event);","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"wxchoong"},"content":"        assert index !\u003d -1: \"The event must be in the schedule\";","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"wxchoong"},"content":"        events.remove(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"wxchoong"},"content":"     * Removes a particular deadline from the schedule (clear the slot).","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"wxchoong"},"content":"     * @param deadline Deadline to be removed.","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"wxchoong"},"content":"    public void freeUpDeadlineSlot(DeadlineTask deadline){","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"wxchoong"},"content":"        int index \u003d retrieveDeadlineSlot(deadline);","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"wxchoong"},"content":"        assert index !\u003d -1: \"The deadline must be in the schedule\";","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"wxchoong"},"content":"        deadlines.remove(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"wxchoong"},"content":"     * Returns the list of events and deadlines scheduled on the input date.","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"wxchoong"},"content":"     * @param date Date of schedule.","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"wxchoong"},"content":"    public ArrayList\u003cTask\u003e getSchedule(LocalDate date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"wxchoong"},"content":"        for (int i \u003d 0; i \u003c deadlines.size(); i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"wxchoong"},"content":"            if((deadlines.get(i).deadline).toLocalDate().equals(date)){","lastModifiedDate":"2021-10-31"},{"lineNumber":242,"author":{"gitId":"wxchoong"},"content":"                tasks.add(deadlines.get(i));","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"wxchoong"},"content":"        for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"wxchoong"},"content":"            if((events.get(i).start).toLocalDate().equals(date)){","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"wxchoong"},"content":"                tasks.add(events.get(i));","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"wxchoong"},"content":"        return tasks;","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"wxchoong":252}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e is a high-level Task class to be extended.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"     * Constructor of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"     * @param description Brief description of the task.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    /** Returns the description of the task. */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    public String getDescription() { return description; }","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    /** Returns the status flag of the task. */","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"    public String getStatusIcon() { return (isDone ? \"X\" : \" \"); }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    /** Returns the status of the task. */","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    public boolean isDone() { return isDone; }","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    /** Set the status of the task to \"done\". */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"    public void markAsDone() { isDone \u003d true; }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wxchoong":37}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.*;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eTaskList\u003c/code\u003e object stores all available tasks (to-dos, deadlines, events).","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"public class TaskList {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    private final Scheduler scheduler;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        scheduler \u003d new Scheduler();","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"     * Custom constructor of \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"     * To be used when loading tasks from an existing record.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"     * @param tasks ArrayList of Task objects to be loaded.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        taskList \u003d tasks;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        scheduler \u003d new Scheduler();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        scheduler.loadSchedule(tasks);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"    /** Returns the list size (task count) of the TaskList. */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    public int getListSize() { return taskList.size(); }","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"     * Gets task by id and sets the status of the task to \"done\".","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"     * Returns the completed task in String format.","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"     * @param taskId ID of the completed task.","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"     * @throws DukeException If task with the specific ID is not found.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"    public String setDone(int taskId) throws DukeException {","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"        int taskIndex \u003d taskId - 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        boolean isOutOfRange \u003d taskId \u003e taskList.size() || taskId \u003c 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        if (isOutOfRange) {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"            throw new DukeException(\"Task with id \" + taskId + \" is not found.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"        Task doneTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"        return doneTask.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"     * Gets task by id and deletes the task.","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"     * Returns the deleted task in String format.","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"     * @param taskId ID of the task to be deleted.","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"     * @throws DukeException If task with the specific ID is not found.","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"    public String deleteTask(int taskId) throws DukeException {","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"        boolean isOutOfRange \u003d taskId \u003e taskList.size() || taskId \u003c 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"        if (isOutOfRange) {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"            throw new DukeException(\"Task with id \" + taskId + \" is not found.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        Task deletedTask \u003d taskList.get(taskId - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"        taskList.remove(taskId - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"        boolean isEvent \u003d deletedTask.getClass().equals(EventTask.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"        boolean isDeadline\u003d deletedTask.getClass().equals(DeadlineTask.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"        if (isEvent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"            scheduler.freeUpEventSlot((EventTask) deletedTask);","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"            scheduler.freeUpDeadlineSlot((DeadlineTask) deletedTask);","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"        return deletedTask.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"     * Adds a new task into the TaskList.","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"        boolean isDeadline \u003d task.getClass().equals(DeadlineTask.class);","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"        boolean isEvent \u003d task.getClass().equals(EventTask.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"        boolean canBeAdded \u003d true;","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"        if (isDeadline) {","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"            DeadlineTask deadline\u003d (DeadlineTask) task;","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"            scheduler.scheduleDeadline(deadline);","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"        if (isEvent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"            EventTask event \u003d (EventTask) task;","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"            canBeAdded \u003d scheduler.scheduleEvent(event);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"        if (canBeAdded) {","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"            taskList.add(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"        return canBeAdded;","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"     * Searches whether a task with input keyword exists in the TaskList.","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"     * @param keyword Search keyword.","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"wxchoong"},"content":"    public ArrayList\u003cTask\u003e searchTask(String keyword) {","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"wxchoong"},"content":"        assert keyword !\u003d null: \"The search keyword cannot be null at this point\";","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"wxchoong"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"wxchoong"},"content":"            String description \u003d task.description.toLowerCase();","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"wxchoong"},"content":"            if (description.contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"wxchoong"},"content":"                results.add(task);","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"wxchoong"},"content":"        return results;","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"wxchoong"},"content":"     * Returns all tasks in the TaskList.","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"wxchoong"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"wxchoong"},"content":"        return taskList;","lastModifiedDate":"2021-10-03"},{"lineNumber":129,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"wxchoong"},"content":"     * Returns all tasks in the TaskList scheduled on the input date.","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"wxchoong"},"content":"     * @param date User input date.","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"wxchoong"},"content":"    public ArrayList\u003cTask\u003e getTaskSchedule(LocalDate date) {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e schedule \u003d scheduler.getSchedule(date);","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"wxchoong"},"content":"        return schedule;","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"wxchoong":140}},{"path":"src/main/java/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":" * A \u003ccode\u003eToDoTask\u003c/code\u003e object stores a task without any specific date and time.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":" * Extends the \u003ccode\u003eTask\u003c/code\u003e class.","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"     * Constructor of \u003ccode\u003eToDoTask\u003c/code\u003e.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"     * @param description Brief description of the task.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"wxchoong":22}},{"path":"src/main/java/ui/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import tasks.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":" * Class for declaring messages to display on Duke GUI.","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"public final class Messages {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    public static final String WELCOME_MSG \u003d \"Hello, I\u0027m Duke!\\n\" + \"What can I do for you?\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"            \"Ps: Type \u0027help\u0027 for more information.\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    public static final String HELP_MSG \u003d \"View all existing tasks:     list\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        \"Add a new to-do:             todo {taskDescription}\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"        \"Add a new deadline:          deadline {taskDescription} /by {yyyy-MM-dd HHmm}\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"        \"Add a new event:             event {taskDescription} /at {yyyy-MM-dd HHmm} -to {yyyy-MM-dd HHmm}\\n\" +","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        \"Mark a task as completed:    done {taskId}\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        \"Delete a task:               delete {taskId}\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        \"Fine task by keyword:        find {keyword}\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        \"Check schedule of a date:    view {yyyy-MM-dd}\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        \"Exit the program:            bye\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    public static final String LOADING_ERROR \u003d \"No record found. Creating new file...\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    public static final String ADDED_MSG \u003d \"Got it! I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"    public static final String COMPLETED_MSG \u003d \"Amazing! The task is marked as done now:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"    public static final String DELETED_MSG \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    public static final String LISTED_MSG \u003d \"Here are the task(s) in your list:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    public static final String SEARCH_COMPLETED_MSG \u003d \"Here are the matching task(s) in your list:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"    public static final String EXIT_MSG \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"    public static String getScheduledMsg(LocalDate date){","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"        return \"Here are the task(s) scheduled on \" +","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"                date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)) + \":\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"    public static String getTaskCountMsg(int listSize) { return \"Now you have \" + listSize + \" task(s) in the list\\n\"; }","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"    public static String getTaskMsg(String task) { return task + \"\\n\"; }","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"    public static String getAllTasksMsg(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"        if (taskList.size() \u003d\u003d 0){","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"            return \"There\u0027s no task now :D\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"            String taskStr \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"                taskStr +\u003d index + \". \" + task + \"\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"                index++;","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"            return taskStr;","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":64}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import tasks.Task;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":" * An \u003ccode\u003eUi\u003c/code\u003e object deals with interactions with the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":" * Prints response in the Terminal based on user\u0027s inputs.","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"public class Ui {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    /** Prints Duke logo and Hello message. */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"____________________________________________________________________________________\");","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Hello, I\u0027m Duke!\" );","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Ps: Type \u0027help\u0027 for more information.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"____________________________________________________________________________________\");","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    /** Prints separator line. */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"    public void showLine() {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"____________________________________________________________________________________\");","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    /** Prints all command instructions. */","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"    public void showHelp(){","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"View all existing tasks:     list\");","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Add a new to-do:             todo {description}\");","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Add a new deadline:          deadline {description} /by {yyyy-MM-dd HHmm}\");","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Add a new event:             event {description} /at {yyyy-MM-dd HHmm} -to {yyyy-MM-dd HHmm}\");","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Mark a task as completed:    done {taskId}\");","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Delete a task:               delete {taskId}\");","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Fine task by keyword:        find {keyword}\");","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Check schedule of a date:    view {yyyy-MM-dd}\");","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Exit the program:            bye\");","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"    /** Reads user\u0027s input command. */","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"    /** Prints loading error message (file not found). */","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"No record found. Creating new file...\");","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"     * Prints Duke error message.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"    public void showError(String message){","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"    /** Prints task added successful message. */","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"    public void showAdded() { System.out.println(\"Got it! I\u0027ve added this task:\"); }","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"    /** Prints task completed successful message. */","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"    public void showCompleted() { System.out.println(\"Amazing! The task is marked as done now:\"); }","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"    /** Prints task deleted successful message. */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"    public void showDeleted() { System.out.println(\"Noted. I\u0027ve removed this task:\"); }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"    /** Prints tasks listed message. */","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"    public void showListed() { System.out.println(\"Here are the task(s) in your list:\"); }","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"    /** Prints search completed message. */","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"    public void showSearchCompleted() { System.out.println(\"Here are the matching task(s) in your list:\"); }","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"    /** Prints exit message. */","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"    public void showExit() { System.out.println(\"Bye. Hope to see you again soon!\"); }","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"    public void showScheduleFor(LocalDate date) {","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"        System.out.println(\"Here are the task(s) scheduled on \" +","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"                date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM)) + \":\");","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"     * Prints current task count.","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"     * @param listSize Number of tasks in the list","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"    public void printTaskCount(int listSize) { System.out.println(\"Now you have \" + listSize + \" task(s) in the list\"); }","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"     * Prints single task.","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"     * @param task Task to be printed","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"    public void printTask(String task) { System.out.println(task); }","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"     * Prints all tasks in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"     * @param taskList ArrayList of Tasks to be printed","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"wxchoong"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"wxchoong"},"content":"    public void printAllTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"wxchoong"},"content":"        if (taskList.size() \u003d\u003d 0){","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"wxchoong"},"content":"            System.out.println(\"There\u0027s no task now :D\");","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"wxchoong"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"wxchoong"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-10-03"},{"lineNumber":117,"author":{"gitId":"wxchoong"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-10-03"},{"lineNumber":118,"author":{"gitId":"wxchoong"},"content":"                System.out.println(index + \". \" + task);","lastModifiedDate":"2021-10-03"},{"lineNumber":119,"author":{"gitId":"wxchoong"},"content":"                index++;","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"wxchoong"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"wxchoong":123}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":16}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"wxchoong":19}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import commands.*;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import storage.Storage;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import tasks.TaskList;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import ui.Ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"public class ParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    private final Storage storage \u003d new Storage(\"/data/test\");","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    public void parse_validListCommand_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"list\");","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        assertEquals(ListCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    public void parse_validHelpCommand_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"help\");","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        assertEquals(HelpCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    public void parse_validAddTodoCommand_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"todo do something\");","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        assertEquals(AddCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"    public void parse_validAddDeadlineCommand_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"deadline do something /by 2021-10-18 0000\");","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"        assertEquals(AddCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"    public void parse_addDeadlineNullDescription_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"deadline /by 2021-10-18 1200\");","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"                    \"\\nDeadline or description is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"    public void parse_addDeadlineWhitespaceDescription_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"deadline    /by 2021-10-18 1200\");","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"                    \"\\nDescription is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"    public void parse_addDeadlineWrongFormat_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"deadline do something /by 2021-10-18\");","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task cannot be added. \" +","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"                    \"\\nPlease enter deadline in the format of \u0027yyyy-MM-dd HHmm\u0027\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"    public void parse_validAddEventCommand_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"event do something /at 2021-10-18 1300 -to 2021-10-18 1400\");","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"        assertEquals(AddCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"    public void parse_addEventNullDescription_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"event /at 2021-10-18 1300 -to 2021-10-18 1400\");","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task cannot be added. \\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"                    \"Event time or description is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"    public void parse_addEventWhitespaceDescription_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"event     /at 2021-10-18 1300 -to 2021-10-18 1400\");","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task cannot be added. \\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"wxchoong"},"content":"                    \"Description is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"wxchoong"},"content":"    public void parse_addEventWrongFormat_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"event do something /at 2021-10-18 -to 2021-10-18 1400\");","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task cannot be added. \\n\" + \"Please enter event datetime in the format of \" +","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"wxchoong"},"content":"                    \"\u0027yyyy-MM-dd HHmm -to yyyy-MM-dd HHmm\u0027\", e.getMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"wxchoong"},"content":"    public void parse_validCompleteCommand_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"done 1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"wxchoong"},"content":"        assertEquals(CompleteCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"wxchoong"},"content":"    public void parse_completeMissingId_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"done\");","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task id is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"wxchoong"},"content":"    public void parse_validDeleteCommand_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"wxchoong"},"content":"        assertEquals(DeleteCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"wxchoong"},"content":"    public void parse_deleteMissingId_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"delete\");","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task id is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"wxchoong"},"content":"    public void parse_validFindCommand_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"find book\");","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"wxchoong"},"content":"        assertEquals(FindCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"wxchoong"},"content":"    public void parse_findMissingKeyword_returnInvalidCmd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"find\");","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Search keyword is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"wxchoong"},"content":"    public void parse_validViewCommand_success(){","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"view 2021-10-19\");","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"wxchoong"},"content":"        assertEquals(ViewCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"wxchoong"},"content":"    public void parse_viewMissingDate_returnInvalidCmd(){","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"view\");","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Date is missing.\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"wxchoong"},"content":"    public void parse_viewWrongDateFormat_returnInvalidCmd(){","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"view 31-10-2021\");","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"wxchoong"},"content":"            cmd.execute(taskList, ui, storage);","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Please enter the date in the format of \u0027yyyy-MM-dd\u0027\", e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"wxchoong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"wxchoong"},"content":"    public void parse_validExitCommand_success(){","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"bye\");","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"wxchoong"},"content":"        assertEquals(ExitCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"wxchoong"},"content":"    public void parse_invalidCommand_success(){","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"wxchoong"},"content":"        Command cmd \u003d Parser.parse(\"hello\");","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"wxchoong"},"content":"        assertEquals(InvalidCommand.class, cmd.getClass());","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":234}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package storage;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import tasks.Task;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class StorageTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public void constructor_withFilepath_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"data/test.txt\", s.getFilePath());","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    public void loadTasks_invalidFilepath_exception() throws FileNotFoundException {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"            ArrayList\u003cTask\u003e tasks \u003d s.loadTasks();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"            assertEquals(new FileNotFoundException().getMessage(), e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    public void saveTasks_invalidFilepath_exception() throws IOException {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"            s.saveTasks(tasks);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"            assertEquals(new IOException().getMessage(), e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":39}},{"path":"src/test/java/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"    public void constructor_withDescriptionAndDate_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"        DeadlineTask t \u003d new DeadlineTask(\"do something\", LocalDateTime.parse(\"2021-10-17 1200\", formatter));","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"do something\", t.description);","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        assertEquals(LocalDateTime.parse(\"2021-10-17 1200\", formatter), t.deadline);","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    public void toString_withValidToDo_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        DeadlineTask t \u003d new DeadlineTask(\"do something\", LocalDateTime.parse(\"2021-10-17 1200\", formatter));","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        String expected \u003d \"[D][ ] do something (by: 17 Oct 2021, 12:00 PM)\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        assertEquals(expected, t.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":26}},{"path":"src/test/java/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"public class EventTaskTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public void constructor_withDescriptionAndDate_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        EventTask t \u003d new EventTask(\"do something\", LocalDateTime.parse(\"2021-10-18 1200\", formatter),","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", formatter));","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"do something\", t.description);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        assertEquals(LocalDateTime.parse(\"2021-10-18 1200\", formatter), t.start);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        assertEquals(LocalDateTime.parse(\"2021-10-18 1300\", formatter), t.end);","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    public void toString_withValidToDo_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        EventTask t \u003d new EventTask(\"do something\", LocalDateTime.parse(\"2021-10-18 1200\", formatter),","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", formatter));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        String expected \u003d \"[E][ ] do something (at: 18 Oct 2021, 12:00 PM - 18 Oct 2021, 1:00 PM)\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        assertEquals(expected, t.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":29}},{"path":"src/test/java/tasks/SchedulerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class SchedulerTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    private final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    public void scheduleDeadline_validInputs_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(\"deadline 1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 0000\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"        scheduler.scheduleDeadline(deadlineTask);","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e scheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, scheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    public void scheduleEvent_validInputs_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        EventTask eventTask \u003d new EventTask(\"event A\", LocalDateTime.parse(\"2021-10-18 1200\", formatter),","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", formatter));","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        boolean isScheduled \u003d scheduler.scheduleEvent(eventTask);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"        assertEquals(true, isScheduled);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e scheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, scheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    public void scheduleEvent_validInputs_eventClash() {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        EventTask eventTask1 \u003d new EventTask(\"event A\", LocalDateTime.parse(\"2021-10-18 1200\", formatter),","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"        EventTask eventTask2 \u003d new EventTask(\"event A\", LocalDateTime.parse(\"2021-10-18 1230\", formatter),","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1330\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        boolean isScheduled1 \u003d scheduler.scheduleEvent(eventTask1);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"        boolean isScheduled2 \u003d scheduler.scheduleEvent(eventTask2);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        assertEquals(true, isScheduled1);","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        assertEquals(false, isScheduled2);","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e scheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, scheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"    public void freeUpDeadlineSlot_validSlot_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(\"deadline 1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1200\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"        scheduler.scheduleDeadline(deadlineTask);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e scheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, scheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"        scheduler.freeUpDeadlineSlot(deadlineTask);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e updatedScheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"        assertEquals(0, updatedScheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"    public void freeUpEventSlot_validSlot_success() {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"        EventTask eventTask \u003d new EventTask(\"event A\", LocalDateTime.parse(\"2021-10-18 1200\", formatter),","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"        boolean isScheduled \u003d scheduler.scheduleEvent(eventTask);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"        assertEquals(true, isScheduled);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e scheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, scheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"        scheduler.freeUpEventSlot(eventTask);","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e updatedScheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"        assertEquals(0, updatedScheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"    public void getSchedule_validDate_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"        Scheduler scheduler \u003d new Scheduler();","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"        DeadlineTask deadlineTask1 \u003d new DeadlineTask(\"deadline 1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 0000\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"        DeadlineTask deadlineTask2 \u003d new DeadlineTask(\"deadline 1\",","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-19 0000\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"        EventTask eventTask1 \u003d new EventTask(\"event A\", LocalDateTime.parse(\"2021-10-18 1200\", formatter),","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"        EventTask eventTask2 \u003d new EventTask(\"event A\", LocalDateTime.parse(\"2021-10-18 1300\", formatter),","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1400\", formatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"        scheduler.scheduleDeadline(deadlineTask1);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"        scheduler.scheduleDeadline(deadlineTask2);","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"        scheduler.scheduleEvent(eventTask1);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"        scheduler.scheduleEvent(eventTask2);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e scheduledEvents \u003d scheduler.getSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"        assertEquals(3, scheduledEvents.size());","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"wxchoong":100}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"public class TaskListTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"    public void constructor_newEmptyTaskList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"        assertEquals(0, taskList.getListSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    public void getListSize_validTaskList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        assertEquals(0, taskList.getListSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, taskList.getListSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"    public void setDone_validTaskId_success() throws DukeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"        taskList.setDone(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"    public void setDone_invalidTaskId_exception() throws DukeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        int id \u003d 1;","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"            taskList.setDone(id);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task with id \" + id +\" is not found.\", e.getMessage());","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"    public void deleteTask_validTaskId_success() throws DukeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, taskList.getListSize());","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"wxchoong"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"wxchoong"},"content":"        assertEquals(0, taskList.getListSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"wxchoong"},"content":"    public void deleteTask_invalidTaskId_exception() throws DukeException {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"wxchoong"},"content":"        int id \u003d 1;","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"wxchoong"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"wxchoong"},"content":"            taskList.deleteTask(id);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"wxchoong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"wxchoong"},"content":"            assertEquals(\"Task with id \" + id +\" is not found.\", e.getMessage());","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"wxchoong"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"wxchoong"},"content":"    public void searchTask_validKeyword_success() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task 2\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"not included\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e searchResult \u003d taskList.searchTask(\"random\");","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"wxchoong"},"content":"        assertEquals(2, searchResult.size());","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"random task\", searchResult.get(0).getDescription());","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"random task 2\", searchResult.get(1).getDescription());","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"wxchoong"},"content":"    public void addTask_multipleValidTasks_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"wxchoong"},"content":"        assertEquals(0, taskList.getListSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task 1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task 2\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new Task(\"random task 3\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"wxchoong"},"content":"        assertEquals(3, taskList.getListSize());","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"wxchoong"},"content":"    public void getTaskSchedule_validDate_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"wxchoong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new EventTask(\"event 1\", LocalDateTime.parse(\"2021-10-18 1200\", dateTimeFormatter),","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-18 1300\", dateTimeFormatter)));","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"wxchoong"},"content":"        taskList.addTask(new EventTask(\"event 1\", LocalDateTime.parse(\"2021-10-19 1200\", dateTimeFormatter),","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"wxchoong"},"content":"                LocalDateTime.parse(\"2021-10-19 1300\", dateTimeFormatter)));","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"wxchoong"},"content":"        assertEquals(2, taskList.getListSize());","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"wxchoong"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"wxchoong"},"content":"        ArrayList\u003cTask\u003e schedule \u003d taskList.getTaskSchedule(LocalDate.parse(\"2021-10-18\", dateFormatter));","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"wxchoong"},"content":"        assertEquals(1, schedule.size());","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"event 1\", schedule.get(0).getDescription());","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":110}},{"path":"src/test/java/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"public class TaskTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"    public void constructor_withDescription_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"        Task t \u003d new Task(\"do something\");","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"do something\", t.description);","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"        assertEquals(false, t.isDone);","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    public void getDescription_withValidTask_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        Task t \u003d new Task(\"read a book\");","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"read a book\", t.getDescription());","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"    public void getStatusIcon_withValidTask_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"        Task t \u003d new Task(\"read a book\");","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\" \", t.getStatusIcon());","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"        t.markAsDone();","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"X\", t.getStatusIcon());","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"    public void isDone_withValidTask_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"        Task t \u003d new Task(\"revise TIC2002\");","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"        assertEquals(false, t.isDone());","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"wxchoong"},"content":"    public void markAsDone_withValidTask_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"wxchoong"},"content":"        Task t \u003d new Task(\"revise TIC2002\");","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"wxchoong"},"content":"        assertEquals(false, t.isDone());","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"wxchoong"},"content":"        t.markAsDone();","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"wxchoong"},"content":"        assertEquals(true, t.isDone());","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"wxchoong"},"content":"    public void toString_withValidTask_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"wxchoong"},"content":"        Task t \u003d new Task(\"revise TIC2002\");","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"wxchoong"},"content":"        String expected \u003d \"[ ] revise TIC2002\";","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"wxchoong"},"content":"        assertEquals(expected, t.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":50}},{"path":"src/test/java/tasks/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package tasks;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"    public void constructor_withDescription_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"        ToDoTask t \u003d new ToDoTask(\"do something\");","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"do something\", t.description);","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    public void toString_withValidToDo_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"        ToDoTask t \u003d new ToDoTask(\"revise TIC2002\");","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"        String expected \u003d \"[T][ ] revise TIC2002\";","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"        assertEquals(expected, t.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":19}},{"path":"src/test/java/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"package ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"public class UiTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"wxchoong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"wxchoong"},"content":"    @AfterEach","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"wxchoong"},"content":"    public void tearDown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wxchoong"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"wxchoong"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"wxchoong"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"wxchoong"},"content":"    public void testShowLine(){","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"wxchoong"},"content":"        new Ui().showLine();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wxchoong"},"content":"        assertEquals(\"____________________________________________________________________________________\",","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"wxchoong"},"content":"                outContent.toString().trim());","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"wxchoong"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wxchoong"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"wxchoong":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wxchoong"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"wxchoong"},"content":"read a book","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"wxchoong"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"wxchoong"},"content":"todo read a book","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"wxchoong"},"content":"deadline return the book","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"wxchoong"},"content":"deadline return the book /by","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"wxchoong"},"content":"deadline return the book /by 6th Sep","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"wxchoong"},"content":"eventt meeting /at 9th Sep 2pm-3pm","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"wxchoong"},"content":"event /at 9th Sep 2pm-3pm","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"wxchoong"},"content":"event meeting /at 9th Sep 2pm-3pm","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"wxchoong"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"wxchoong"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"wxchoong"},"content":"done 3","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"wxchoong"},"content":"done","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"wxchoong"},"content":"done 5","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"wxchoong"},"content":"delete 2","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"wxchoong"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"wxchoong"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"wxchoong":18}}]
