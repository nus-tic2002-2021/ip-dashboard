[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"#","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":23,"bossleanne":1}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"    public static void chatBot(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"        String breakLine \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"        System.out.println(","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"        breakLine","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"        + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"        + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"        + breakLine);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"        String line \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"        String[] list \u003d new String[100];","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"        while(!line.equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"            if(line.equals(\"list\")){","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"                //println is print with extra \\n, print is purely printout.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"                System.out.print(breakLine);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"                //print out all items in list","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"                for(int i \u003d 0; i\u003c count;i++){","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"                    System.out.println(i+1 + \". \"+ list[i]);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"                System.out.println(breakLine);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"            else{","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"                //display the input","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"                System.out.println(","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"                        breakLine + \"added: \" + line +\"\\n\" + breakLine);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"                //append the items to list","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"                list[count] \u003d line;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"            count++;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"        ","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"        System.out.println(","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"                breakLine + \"Bye. Hope to see you again soon!\\n\" + breakLine);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"        chatBot(args);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":9,"bossleanne":49}}]
