[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"# User Guide","lastModifiedDate":"2021-11-15"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"This is a CLI(Command Line Interface) Todolist application written in OOP fashion. By using command line to interactive with the application, it allows you to load, save and amend your todolist.","lastModifiedDate":"2021-11-15"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"## Prerequisite","lastModifiedDate":"2021-11-15"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"- Able to start a command line shell.","lastModifiedDate":"2021-11-15"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"- Java version 11","lastModifiedDate":"2021-11-15"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"- JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-11-15"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"## Using Command Line","lastModifiedDate":"2021-11-15"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"- download the `duke.jar` application","lastModifiedDate":"2021-11-15"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"- `cd` into the application\u0027s path, eg `cd `~/Download/`","lastModifiedDate":"2021-11-15"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"- type `java -jar duke.jar`","lastModifiedDate":"2021-11-15"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"## Features","lastModifiedDate":"2021-11-15"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"- The sections below are shows the feature of this todolist application","lastModifiedDate":"2021-11-15"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"#### Feature-Add task to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"- Adding tasks to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"#### Feature-Remove task to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"- Removing any task from the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"#### Feature-Undo","lastModifiedDate":"2021-11-15"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"- Erasing the last change done to the todolist, reverting it to an older state.","lastModifiedDate":"2021-11-15"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"#### Feature-Help","lastModifiedDate":"2021-11-15"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"- Help is shown when user first loaded the program","lastModifiedDate":"2021-11-15"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"#### Feature-View full tasks in todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"- Displaying a list of all tasks in the todolist application.","lastModifiedDate":"2021-11-15"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"#### Feature-Finding all tasks containing any keyword:","lastModifiedDate":"2021-11-15"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"- Searching for tasks in the todolist.","lastModifiedDate":"2021-11-15"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"#### Feature-Saving the record","lastModifiedDate":"2021-11-15"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"- Saving the todolist in the hard disk automatically after user exit command executed.","lastModifiedDate":"2021-11-15"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"#### Feature-Reload the record","lastModifiedDate":"2021-11-15"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"- Todolist historical tasks will loaded to this application automatically during launching.","lastModifiedDate":"2021-11-15"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"## Usage","lastModifiedDate":"2021-11-15"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"### `todo` `event` `deadline`","lastModifiedDate":"2021-11-15"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"- Adding tasks to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"Example of usage:","lastModifiedDate":"2021-11-15"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"`todo \u003ctask description\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"`deadline \u003ctask description\u003e /by \u003cdate and time\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"`event \u003ctask description\u003e /at \u003cdate and time\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":63,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":64,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":65,"author":{"gitId":"bossleanne"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":66,"author":{"gitId":"bossleanne"},"content":"[T][ ] read book","lastModifiedDate":"2021-11-15"},{"lineNumber":67,"author":{"gitId":"bossleanne"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":68,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":69,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":70,"author":{"gitId":"bossleanne"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":71,"author":{"gitId":"bossleanne"},"content":"[E][ ] project meeting at 6:00 pm","lastModifiedDate":"2021-11-15"},{"lineNumber":72,"author":{"gitId":"bossleanne"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":73,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":74,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":75,"author":{"gitId":"bossleanne"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":76,"author":{"gitId":"bossleanne"},"content":"[D][ ] submission by Nov 02 2021","lastModifiedDate":"2021-11-15"},{"lineNumber":77,"author":{"gitId":"bossleanne"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":78,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":79,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":80,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":81,"author":{"gitId":"bossleanne"},"content":"`T`or`E`or`D` are represent for the task type, and the box `[ ]` next by represent the status of the task whether is done or still in progress. The text `read book` next by is the things that user want to do. If there\u0027s data object, `/by` or `/at` used for to track the time of the task","lastModifiedDate":"2021-11-15"},{"lineNumber":82,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":83,"author":{"gitId":"bossleanne"},"content":"### `done` `delete`","lastModifiedDate":"2021-11-15"},{"lineNumber":84,"author":{"gitId":"bossleanne"},"content":"- Update the todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":85,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":86,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":87,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":88,"author":{"gitId":"bossleanne"},"content":"`done \u003cindex from displayed list\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":89,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":90,"author":{"gitId":"bossleanne"},"content":"`delete \u003cindex from displayed list\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":91,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":92,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":93,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":94,"author":{"gitId":"bossleanne"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-11-15"},{"lineNumber":95,"author":{"gitId":"bossleanne"},"content":"[E][X] project meeting (at: 6:00 pm)","lastModifiedDate":"2021-11-15"},{"lineNumber":96,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":97,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":98,"author":{"gitId":"bossleanne"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":99,"author":{"gitId":"bossleanne"},"content":"[D][ ] submission (by: Nov 02 2021,11:59 pm)","lastModifiedDate":"2021-11-15"},{"lineNumber":100,"author":{"gitId":"bossleanne"},"content":"Now you have 3 tasks in the list..","lastModifiedDate":"2021-11-15"},{"lineNumber":101,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":102,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":103,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":104,"author":{"gitId":"bossleanne"},"content":"`[X]` in the box represent the status of the tasks, \"x\" means done, \" \"(space) means in prograss. ","lastModifiedDate":"2021-11-15"},{"lineNumber":105,"author":{"gitId":"bossleanne"},"content":"Delete will remove the task from the todolist.","lastModifiedDate":"2021-11-15"},{"lineNumber":106,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":107,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":108,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":109,"author":{"gitId":"bossleanne"},"content":"### `undo`","lastModifiedDate":"2021-11-15"},{"lineNumber":110,"author":{"gitId":"bossleanne"},"content":"- revert to previous step","lastModifiedDate":"2021-11-15"},{"lineNumber":111,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":112,"author":{"gitId":"bossleanne"},"content":"Example of usage: `undo`","lastModifiedDate":"2021-11-15"},{"lineNumber":113,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":114,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":115,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":116,"author":{"gitId":"bossleanne"},"content":"undo","lastModifiedDate":"2021-11-15"},{"lineNumber":117,"author":{"gitId":"bossleanne"},"content":"1.[T][ ] readbook","lastModifiedDate":"2021-11-15"},{"lineNumber":118,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":119,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":120,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":121,"author":{"gitId":"bossleanne"},"content":"Displayed the latest todolist and refresht the change","lastModifiedDate":"2021-11-15"},{"lineNumber":122,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":123,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":124,"author":{"gitId":"bossleanne"},"content":"### `find`","lastModifiedDate":"2021-11-15"},{"lineNumber":125,"author":{"gitId":"bossleanne"},"content":"- search tasks from the todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":126,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":127,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":128,"author":{"gitId":"bossleanne"},"content":"`find \u003ckeywords\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":129,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":130,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":131,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":132,"author":{"gitId":"bossleanne"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-11-15"},{"lineNumber":133,"author":{"gitId":"bossleanne"},"content":"1.[D][ ] submission (by: Nov 02 2021)","lastModifiedDate":"2021-11-15"},{"lineNumber":134,"author":{"gitId":"bossleanne"},"content":"2.[D][X] submission (by: 11:59 pm)","lastModifiedDate":"2021-11-15"},{"lineNumber":135,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":136,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":137,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":138,"author":{"gitId":"bossleanne"},"content":"Print out the tasks that mathes the keywords in the list in desired format.","lastModifiedDate":"2021-11-15"},{"lineNumber":139,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":140,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":141,"author":{"gitId":"bossleanne"},"content":"### `list`","lastModifiedDate":"2021-11-15"},{"lineNumber":142,"author":{"gitId":"bossleanne"},"content":"- list out all tasks from the todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":143,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":144,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":145,"author":{"gitId":"bossleanne"},"content":"`list`","lastModifiedDate":"2021-11-15"},{"lineNumber":146,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":147,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":148,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":149,"author":{"gitId":"bossleanne"},"content":"list","lastModifiedDate":"2021-11-15"},{"lineNumber":150,"author":{"gitId":"bossleanne"},"content":"1.[T][ ] readbook","lastModifiedDate":"2021-11-15"},{"lineNumber":151,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":152,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":153,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":154,"author":{"gitId":"bossleanne"},"content":"Print out the tasks in the list in desired format.","lastModifiedDate":"2021-11-15"},{"lineNumber":155,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":156,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":157,"author":{"gitId":"bossleanne"},"content":"### `help`","lastModifiedDate":"2021-11-15"},{"lineNumber":158,"author":{"gitId":"bossleanne"},"content":"- list out todoList usage instructions","lastModifiedDate":"2021-11-15"},{"lineNumber":159,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":160,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":161,"author":{"gitId":"bossleanne"},"content":"`help`","lastModifiedDate":"2021-11-15"},{"lineNumber":162,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":163,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":164,"author":{"gitId":"bossleanne"},"content":"```Help instructions only```","lastModifiedDate":"2021-11-15"},{"lineNumber":165,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":166,"author":{"gitId":"bossleanne"},"content":"### `bye`","lastModifiedDate":"2021-11-15"},{"lineNumber":167,"author":{"gitId":"bossleanne"},"content":"- exist the program","lastModifiedDate":"2021-11-15"},{"lineNumber":168,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":169,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":170,"author":{"gitId":"bossleanne"},"content":"`bye`","lastModifiedDate":"2021-11-15"},{"lineNumber":171,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":172,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":173,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":174,"author":{"gitId":"bossleanne"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-11-15"},{"lineNumber":175,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"}],"authorContributionMap":{"-":8,"bossleanne":167}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"    mainClassName \u003d \"todolist.Duke\"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"//checkstyle {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"//    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"//}","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"bossleanne":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"This is a CLI(Command Line Interface) Todolist application written in OOP fashion. By using command line to interactive with the application, it allows you to load, save and amend your todolist.","lastModifiedDate":"2021-11-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"## Prerequisite","lastModifiedDate":"2021-11-15"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"- Able to start a command line shell.","lastModifiedDate":"2021-11-15"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"- Java version 11","lastModifiedDate":"2021-11-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"## Using Command Line","lastModifiedDate":"2021-11-15"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"- download the `duke.jar` application","lastModifiedDate":"2021-11-15"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"- `cd` into the application\u0027s path, eg `cd `~/Download/`","lastModifiedDate":"2021-11-15"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"- type `java -jar duke.jar`","lastModifiedDate":"2021-11-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"- The sections below are shows the feature of this todolist application","lastModifiedDate":"2021-11-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"#### Feature-Add task to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"- Adding tasks to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"#### Feature-Remove task to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"- Removing any task from the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"#### Feature-Undo","lastModifiedDate":"2021-11-15"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"- Erasing the last change done to the todolist, reverting it to an older state.","lastModifiedDate":"2021-11-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"#### Feature-Help","lastModifiedDate":"2021-11-15"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"- Help is shown when user first loaded the program","lastModifiedDate":"2021-11-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"#### Feature-View full tasks in todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"- Displaying a list of all tasks in the todolist application.","lastModifiedDate":"2021-11-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"#### Feature-Finding all tasks containing any keyword:","lastModifiedDate":"2021-11-15"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"- Searching for tasks in the todolist.","lastModifiedDate":"2021-11-15"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"#### Feature-Saving the record","lastModifiedDate":"2021-11-15"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"- Saving the todolist in the hard disk automatically after user exit command executed.","lastModifiedDate":"2021-11-15"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"#### Feature-Reload the record","lastModifiedDate":"2021-11-15"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"- Todolist historical tasks will loaded to this application automatically during launching.","lastModifiedDate":"2021-11-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"### `todo` `event` `deadline`","lastModifiedDate":"2021-11-15"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"- Adding tasks to todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"Example of usage:","lastModifiedDate":"2021-11-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"`todo \u003ctask description\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"`deadline \u003ctask description\u003e /by \u003cdate and time\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"`event \u003ctask description\u003e /at \u003cdate and time\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"[T][ ] read book","lastModifiedDate":"2021-11-15"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"[E][ ] project meeting at 6:00 pm","lastModifiedDate":"2021-11-15"},{"lineNumber":63,"author":{"gitId":"bossleanne"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":64,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":65,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":66,"author":{"gitId":"bossleanne"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":67,"author":{"gitId":"bossleanne"},"content":"[D][ ] submission by Nov 02 2021","lastModifiedDate":"2021-11-15"},{"lineNumber":68,"author":{"gitId":"bossleanne"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-11-15"},{"lineNumber":69,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":70,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":71,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":72,"author":{"gitId":"bossleanne"},"content":"`T`or`E`or`D` are represent for the task type, and the box `[ ]` next by represent the status of the task whether is done or still in progress. The text `read book` next by is the things that user want to do. If there\u0027s data object, `/by` or `/at` used for to track the time of the task","lastModifiedDate":"2021-11-15"},{"lineNumber":73,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":74,"author":{"gitId":"bossleanne"},"content":"### `done` `delete`","lastModifiedDate":"2021-11-15"},{"lineNumber":75,"author":{"gitId":"bossleanne"},"content":"- Update the todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"bossleanne"},"content":"`done \u003cindex from displayed list\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":80,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":81,"author":{"gitId":"bossleanne"},"content":"`delete \u003cindex from displayed list\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":85,"author":{"gitId":"bossleanne"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-11-15"},{"lineNumber":86,"author":{"gitId":"bossleanne"},"content":"[E][X] project meeting (at: 6:00 pm)","lastModifiedDate":"2021-11-15"},{"lineNumber":87,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":88,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":89,"author":{"gitId":"bossleanne"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-11-15"},{"lineNumber":90,"author":{"gitId":"bossleanne"},"content":"[D][ ] submission (by: Nov 02 2021,11:59 pm)","lastModifiedDate":"2021-11-15"},{"lineNumber":91,"author":{"gitId":"bossleanne"},"content":"Now you have 3 tasks in the list..","lastModifiedDate":"2021-11-15"},{"lineNumber":92,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":93,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":94,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":95,"author":{"gitId":"bossleanne"},"content":"`[X]` in the box represent the status of the tasks, \"x\" means done, \" \"(space) means in prograss. ","lastModifiedDate":"2021-11-15"},{"lineNumber":96,"author":{"gitId":"bossleanne"},"content":"Delete will remove the task from the todolist.","lastModifiedDate":"2021-11-15"},{"lineNumber":97,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":100,"author":{"gitId":"bossleanne"},"content":"### `undo`","lastModifiedDate":"2021-11-15"},{"lineNumber":101,"author":{"gitId":"bossleanne"},"content":"- revert to previous step","lastModifiedDate":"2021-11-15"},{"lineNumber":102,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":103,"author":{"gitId":"bossleanne"},"content":"Example of usage: `undo`","lastModifiedDate":"2021-11-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":106,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":107,"author":{"gitId":"bossleanne"},"content":"undo","lastModifiedDate":"2021-11-15"},{"lineNumber":108,"author":{"gitId":"bossleanne"},"content":"1.[T][ ] readbook","lastModifiedDate":"2021-11-15"},{"lineNumber":109,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":112,"author":{"gitId":"bossleanne"},"content":"Displayed the latest todolist and refresht the change","lastModifiedDate":"2021-11-15"},{"lineNumber":113,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":114,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":115,"author":{"gitId":"bossleanne"},"content":"### `find`","lastModifiedDate":"2021-11-15"},{"lineNumber":116,"author":{"gitId":"bossleanne"},"content":"- search tasks from the todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":117,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":118,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":119,"author":{"gitId":"bossleanne"},"content":"`find \u003ckeywords\u003e`","lastModifiedDate":"2021-11-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":121,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":122,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":123,"author":{"gitId":"bossleanne"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-11-15"},{"lineNumber":124,"author":{"gitId":"bossleanne"},"content":"1.[D][ ] submission (by: Nov 02 2021)","lastModifiedDate":"2021-11-15"},{"lineNumber":125,"author":{"gitId":"bossleanne"},"content":"2.[D][X] submission (by: 11:59 pm)","lastModifiedDate":"2021-11-15"},{"lineNumber":126,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":128,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":129,"author":{"gitId":"bossleanne"},"content":"Print out the tasks that mathes the keywords in the list in desired format.","lastModifiedDate":"2021-11-15"},{"lineNumber":130,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":131,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":132,"author":{"gitId":"bossleanne"},"content":"### `list`","lastModifiedDate":"2021-11-15"},{"lineNumber":133,"author":{"gitId":"bossleanne"},"content":"- list out all tasks from the todolist","lastModifiedDate":"2021-11-15"},{"lineNumber":134,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":135,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":136,"author":{"gitId":"bossleanne"},"content":"`list`","lastModifiedDate":"2021-11-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":138,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":139,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":140,"author":{"gitId":"bossleanne"},"content":"list","lastModifiedDate":"2021-11-15"},{"lineNumber":141,"author":{"gitId":"bossleanne"},"content":"1.[T][ ] readbook","lastModifiedDate":"2021-11-15"},{"lineNumber":142,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":143,"author":{"gitId":"bossleanne"},"content":"Description of the outcome.","lastModifiedDate":"2021-11-15"},{"lineNumber":144,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":145,"author":{"gitId":"bossleanne"},"content":"Print out the tasks in the list in desired format.","lastModifiedDate":"2021-11-15"},{"lineNumber":146,"author":{"gitId":"bossleanne"},"content":"```","lastModifiedDate":"2021-11-15"},{"lineNumber":147,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":148,"author":{"gitId":"bossleanne"},"content":"### `help`","lastModifiedDate":"2021-11-15"},{"lineNumber":149,"author":{"gitId":"bossleanne"},"content":"- list out todoList usage instructions","lastModifiedDate":"2021-11-15"},{"lineNumber":150,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":151,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":152,"author":{"gitId":"bossleanne"},"content":"`help`","lastModifiedDate":"2021-11-15"},{"lineNumber":153,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":154,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":155,"author":{"gitId":"bossleanne"},"content":"```Help instructions only```","lastModifiedDate":"2021-11-15"},{"lineNumber":156,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":157,"author":{"gitId":"bossleanne"},"content":"### `bye`","lastModifiedDate":"2021-11-15"},{"lineNumber":158,"author":{"gitId":"bossleanne"},"content":"- exist the program","lastModifiedDate":"2021-11-15"},{"lineNumber":159,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":160,"author":{"gitId":"bossleanne"},"content":"Example of usage: ","lastModifiedDate":"2021-11-15"},{"lineNumber":161,"author":{"gitId":"bossleanne"},"content":"`bye`","lastModifiedDate":"2021-11-15"},{"lineNumber":162,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":163,"author":{"gitId":"bossleanne"},"content":"Expected outcome:","lastModifiedDate":"2021-11-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":165,"author":{"gitId":"bossleanne"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-11-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":29,"bossleanne":137}},{"path":"src/main/java/todolist/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.command.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":" * The Duke program implements an application that record","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":" * list of tasks user need to complete, or things that they  want to do","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":" *","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":" * @author  Sun Li","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":" * @version 1.0","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":" * @since   2021-09-18","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    public TaskList tasks;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    public Storage storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"    public Ui ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"     * Entry point of the TODO list application.","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"     * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"    /** Runs the program until termination.  */","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"    public void run(){","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"        ui.greeting();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"                String fullCommand \u003d ui.getUserCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"            } finally {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"                ui.showLine();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"        Duke duke \u003d new Duke(\"/Users/leanne/duke/todolist.txt\");","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"        duke.run();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"bossleanne":57}},{"path":"src/main/java/todolist/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Represent for TodoList\u0027s tasks","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"public class TaskList {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-11-09"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"     * Initiate an empty todolist tasks","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    public TaskList() {}","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     * Initiate an empty todolist tasks","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"     * @param tasks tasks store in arraylist","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"     * Adding a task to the TaskList","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    public void addTask(Task T){","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        tasks.add(T);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"     * Deleting a task to the TaskList","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    public void deleteTask(int taskId){","lastModifiedDate":"2021-11-09"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"        tasks.remove(taskId);","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"     * Updating a task to the TaskList","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"    public void finishTask(int taskId){","lastModifiedDate":"2021-11-09"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        tasks.get(taskId).markAsDone();","lastModifiedDate":"2021-11-09"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"     * Getting a task to the TaskList","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"    public Task getTasks(int taskId){","lastModifiedDate":"2021-11-09"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"        return tasks.get(taskId);","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"     * Counting how many tasks inside the TaskList","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"     * @return total size of the tasklist","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"    public Integer taskCount(){","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"        return tasks.size();","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":53}},{"path":"src/main/java/todolist/data/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" * Adding a task to the Tasklist","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Add Task\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of todo, event, and deadline","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"Adds task to TodoList. \" )","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"            + String.format(\"    %-11s: %s\\n\" , \"Parameters\", \"DESCRIPTIONS\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"            + String.format(\"    %-11s: %s\\n\" , \"Example\", \"todo\"+ \" read book\")","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"            + String.format(\"    %-11s: %s\\n\" , \"\", \"event\"+ \" project meeting /at 30/10/2021 1800\")","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"            + String.format(\"    %-11s: %s\\n\" , \"\", \"deadline\"+ \" submission /by 2/11/2021 2359\");","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"        super(task);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"        ui.setSize(tasks.taskCount());","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"        ui.showAddMessage(task.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"        storage.logCommand(\"add\");","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":42}},{"path":"src/main/java/todolist/data/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Represents the command executed by the user","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    protected Task task;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    protected int taskId;","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     * Initiate a Command object","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"    public Command() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"     * @param taskId listing index of the task","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    public Command(int taskId) {","lastModifiedDate":"2021-11-09"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-11-09"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"     * @param task need to be executed by the user","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    public Command(Task task){","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"     * Executes the command","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"     * @param tasks take in Task object","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"     * @param ui take in Ui object to display the action","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"     * @param storage take in Storage object performing FIFO","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for any failed constrains.","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"     * To terminate the program","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":50}},{"path":"src/main/java/todolist/data/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.Task;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" * Deleting a task from the Tasklist by identified the displayed index from the todolist","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Delete\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    public static Task tempDelete;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of delete","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"Delete the task identified by the index number used in the todolist listing \" )","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"            + String.format(\"    %-11s: %s\\n\" , \"Parameters\", \"INDEX\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"            + String.format(\"    %-11s: %s\\n\" , \"Example\",  COMMAND_WORD.toLowerCase() + \" 1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2021-11-09"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"        super(taskId);","lastModifiedDate":"2021-11-09"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"        /**","lastModifiedDate":"2021-11-09"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"         * Break the execution if user trying to delete a task id that not exist in list","lastModifiedDate":"2021-11-09"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"         */","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"        assert(taskId \u003c tasks.taskCount());","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"        tempDelete \u003d tasks.getTasks(taskId);","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"        ui.setSize(tasks.taskCount()-1);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"        ui.showDeleteMessage(tasks.getTasks(taskId).toString());","lastModifiedDate":"2021-11-09"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"        tasks.deleteTask(taskId);","lastModifiedDate":"2021-11-09"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        storage.logCommand(\"delete\");","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":46}},{"path":"src/main/java/todolist/data/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":" * Updating a task from the Tasklist by identified the displayed index from the todolist","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Done\";","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    public static int tempDone;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of done","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"Make the task as done identified by the index number used in the todolist listing.\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Parameters\", \"INDEX\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Example\",  COMMAND_WORD.toLowerCase() + \" 1\");","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"    public DoneCommand(int taskId) {","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"        super(taskId);","lastModifiedDate":"2021-11-09"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"        this.tempDone \u003d taskId;","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"//        assert(tasks.getTasks(taskId).getIsDone()\u003d\u003dtrue);","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"        if(tasks.getTasks(taskId).getIsDone()){","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"Task \"+taskId+1+\" already marked as done, re-enter new task ID\");","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"       if(taskId \u003e\u003d tasks.taskCount()){","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(Ui.outOfIndex(tasks.taskCount()));","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"        } else{","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"            tasks.finishTask(taskId);","lastModifiedDate":"2021-11-09"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"            ui.showModifyMessage(tasks.getTasks(taskId).toString());","lastModifiedDate":"2021-11-09"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"            storage.logCommand(\"done\");","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":47}},{"path":"src/main/java/todolist/data/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" * Terminates the program.","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Exit\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of bye","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"Exits the program.\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Example\",  \"bye\");","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    public ExitCommand(Task task) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"        super(task);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        Storage.store(tasks);","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":34}},{"path":"src/main/java/todolist/data/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":" * Display TodoList usage instructions","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"        String instruction \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"                \"    ________________________________________________________________________________\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"                        + \"   |                            TodoList usage instructions:                        |\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"                        + \"   |________________________________________________________________________________|\";","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"        System.out.println(","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"                instruction","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + AddCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + DoneCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + SearchCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + UndoCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"                        + \"\\n\" + ExitCommand.MESSAGE_USAGE","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        );","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"bossleanne":31}},{"path":"src/main/java/todolist/data/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":" * List out all tasks in the Tasklist to the user","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"List\";","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of List","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"Displays all tasks in the todolist as a list with index numbers.\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Example\",  COMMAND_WORD.toLowerCase());","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"    public ListCommand() {","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"        if(tasks.taskCount()\u003e0){","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"            ui.showToUserAllTasks(tasks);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        }else{","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"            ui.showEmptyTask();","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":35}},{"path":"src/main/java/todolist/data/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":" * Finding a task from the Tasklist which description conatins any of the argument keywords,","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public class SearchCommand extends Command{","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    protected static String search;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    public static String getSearch(){","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"        return search;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    public void setSearch(String search){","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"        SearchCommand.search \u003d search;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Find\";","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of find","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"the specified keywords (case-sensitive) and displays them as a list with index numbers.\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Parameters\", \"Single String Keyword\" )","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Example\",  COMMAND_WORD.toLowerCase() + \" book\");","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"     * Override the execute function from the parents class","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"     * Updating tasklist with new searching result","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        for(int i \u003d 0; i\u003c tasks.taskCount();i++){","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"            if(tasks.getTasks(i).getDescription() !\u003d null \u0026\u0026 tasks.getTasks(i).getDescription().contains(getSearch())){","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"                result.addTask(tasks.getTasks(i));","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"        if (!isFound){","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"            ui.showError(\"No matching tasks in your list, please try other keywords \");","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"        }else{","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"            ui.showSearchMessage();","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"            ui.showToUserAllTasks(result);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"bossleanne":51}},{"path":"src/main/java/todolist/data/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.command;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.storage.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":" * Undo the last step of user input","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"public class UndoCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Undo\";","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"     * Shows the usage of undo","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"            String.format(\"    %-11s: %s\\n\" , COMMAND_WORD, \"Undo the last step of user input \" )","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"                    + String.format(\"    %-11s: %s\\n\" , \"Example\",  COMMAND_WORD.toLowerCase());","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-11-15"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"            ArrayList\u003cString\u003e lastCommand \u003d storage.getLogCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"            String printOutMsg \u003d \"Undo the last action \"","lastModifiedDate":"2021-11-15"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"                    +tasks.getTasks(tasks.taskCount()-1).toString();","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"            switch (lastCommand.get(lastCommand.size() - 1)){","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"                case \"add\":","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"//                    printOutMsg \u003d \"Undo the last action add \"","lastModifiedDate":"2021-11-15"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"//                            +tasks.getTasks(tasks.taskCount()-1).toString();","lastModifiedDate":"2021-11-15"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"                    tasks.deleteTask( tasks.taskCount()-1);","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"                    break;","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"                case \"delete\":","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"//                    printOutMsg \u003d \"Undo the last action delete \"","lastModifiedDate":"2021-11-15"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"//                            +tasks.getTasks(tasks.taskCount()-1).toString();","lastModifiedDate":"2021-11-15"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"                    tasks.addTask( DeleteCommand.tempDelete);","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"                    break;","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"                case \"done\":","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"//                    printOutMsg \u003d \"Undo the last action done \"","lastModifiedDate":"2021-11-15"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"//                            +tasks.getTasks(tasks.taskCount()-1).toString();","lastModifiedDate":"2021-11-15"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"                    tasks.getTasks(DoneCommand.tempDone).setIsDone(false);","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"                    break;","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"            ui.setSize(tasks.taskCount());","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"            ui.showToUserAllTasks(tasks);","lastModifiedDate":"2021-11-15"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"//            System.out.print(printOutMsg);","lastModifiedDate":"2021-11-15"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"//            System.out.println(ui.getSuffix());","lastModifiedDate":"2021-11-15"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"        }catch (IndexOutOfBoundsException  e){","lastModifiedDate":"2021-11-15"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"This action cannot be undone\");","lastModifiedDate":"2021-11-15"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-15"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"bossleanne":62}},{"path":"src/main/java/todolist/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.task;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" * Represents a Deadline task in the TodoList","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"    protected String by;","lastModifiedDate":"2021-11-09"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Deadline\";","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"        super(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"        super.setTaskStatus(\"D\");","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"     * Override the toString method in parents","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"     * @return time string","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    public String getTime(){","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"        return by;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"     * Override the toString method in parents","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"     * @return a string of show content arranged in a formatted way","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"        return super.toString() + \" (by: \" + getTime() + \")\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"bossleanne":32}},{"path":"src/main/java/todolist/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.task;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" * Represents an Event task in the TodoList","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"    protected String at;","lastModifiedDate":"2021-11-09"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"        super(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"        super.setTaskStatus(\"E\");","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-11-09"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"        return description;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"     * Override the toString method in parents","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"     * @return time string","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    public String getTime(){","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        return at;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"     * Override the toString method in parents","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"     * @return a string of show content arranged in a formatted way","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"        return super.toString() + \" (at: \" + getTime() + \")\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"bossleanne":37}},{"path":"src/main/java/todolist/data/task/Status.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.task;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Represent for Keywords when interacting with the user","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"public enum Status {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"    TODO, DONE, EVENT, DEADLINE, DELETE, FIND, UNDO","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":7}},{"path":"src/main/java/todolist/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.task;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Represents Task in the TodoList","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"public class Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"    protected String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"    protected String taskStatus;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"        this.taskStatus\u003d\" \";","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"     * Getters and setters to access to the Task object","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"        return description;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"    public String getTaskStatus(){","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"        return taskStatus;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    public String getTime(){","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"        return \"\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    public boolean getIsDone(){","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"        return this.isDone;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    public void setIsDone(boolean done){","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"    public void setTaskStatus(String status){","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"        this.taskStatus \u003d status;","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"        setIsDone(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"     * Override the toString method in parents","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"     * @return a string of show content arranged in a formatted way","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"        return \"[\"+getTaskStatus()+\"]\"+\"[\"+getStatusIcon()+\"] \"+getDescription();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bossleanne":55}},{"path":"src/main/java/todolist/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.data.task;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Represents a todo task in the TodoList","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"    public static final String COMMAND_WORD \u003d \"Todo\";","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"        super.setTaskStatus(\"T\");","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bossleanne":14}},{"path":"src/main/java/todolist/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Parser package to parse user input and execute representative command.","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.data.command.*;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.*;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.Ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"import todolist.utils.Matching;","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public class Parser {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"    public static Task t;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    public static Ui ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    public static ParserDate p \u003d new ParserDate();","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    private static boolean isLoadedTask \u003d false;","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    public static void setLoadedTask(){","lastModifiedDate":"2021-11-09"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"        isLoadedTask \u003d true;","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"     * @param fullCommand get the full line of user input string","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"     * @return Command object based on the user input","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for invalid input of content and incorrect index","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"        String line \u003d fullCommand.stripTrailing();","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"        String[] taskSplit \u003d line.split(\" \",2);","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"        String taskStatus \u003d taskSplit[0].toUpperCase();","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"        Status status;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"            if(line.equals(\"bye\")){","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"                return new ExitCommand(t);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"            } else if (taskSplit[0].equals(\"list\")){","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"                return new ListCommand();","lastModifiedDate":"2021-11-09"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"            } else if (taskSplit[0].equals(\"help\")){","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"            } else if (taskSplit[0].equals(\"undo\")){","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"                    return new UndoCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"            } else{","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"                status \u003d Status.valueOf(taskStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"                String taskDescription \u003d taskSplit[1].strip();","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"                switch (status){","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"                case TODO:","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"                    t \u003d createToDo(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"                    return new AddCommand(t);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"                case DEADLINE:","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"                    t \u003d createDeadline(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"                    return new AddCommand(t);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"                case EVENT:","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"                    t \u003d createEvent(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"                    return new AddCommand(t);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"                case DELETE:","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"                    return new DeleteCommand(getValidTaskId(taskDescription));","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"                case DONE:","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"                    return new DoneCommand(getValidTaskId(taskDescription));","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"                case FIND:","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"                    SearchCommand s \u003d new SearchCommand();","lastModifiedDate":"2021-11-09"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"                    s.setSearch(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"                    return s;","lastModifiedDate":"2021-11-09"},{"lineNumber":63,"author":{"gitId":"bossleanne"},"content":"                default:","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"bossleanne"},"content":"                    return new HelpCommand();","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"bossleanne"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"bossleanne"},"content":"        catch(ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(Ui.showIncorrectIndex(taskStatus));","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"bossleanne"},"content":"        catch (IllegalArgumentException e){","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(Ui.inValidInput());","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":76,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"bossleanne"},"content":"     * Generate new TODO task","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"bossleanne"},"content":"     * @param fullCommand get the full description of todo string","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"bossleanne"},"content":"     * @return Task object based on the user input","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"bossleanne"},"content":"    public static Task createToDo(String fullCommand){","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"bossleanne"},"content":"        return new Todo(fullCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"bossleanne"},"content":"     * Generate new Event task","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"bossleanne"},"content":"     * @param fullCommand get the full description of Event string","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"bossleanne"},"content":"     * @return Task object based on the user input","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for invalid time and date constrains","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"bossleanne"},"content":"    public static Task createEvent(String fullCommand) throws DukeException{","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"bossleanne"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":92,"author":{"gitId":"bossleanne"},"content":"            String[] eventAndTime \u003d fullCommand.split(\"at\");","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"bossleanne"},"content":"            eventAndTime[0] \u003d eventAndTime[0].replace(\" /\", \"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"bossleanne"},"content":"            String strDateTime \u003d eventAndTime[1].trim();","lastModifiedDate":"2021-11-09"},{"lineNumber":95,"author":{"gitId":"bossleanne"},"content":"            if(!isLoadedTask){","lastModifiedDate":"2021-11-09"},{"lineNumber":96,"author":{"gitId":"bossleanne"},"content":"                strDateTime \u003d p.parseDate(strDateTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":97,"author":{"gitId":"bossleanne"},"content":"            } else{","lastModifiedDate":"2021-11-09"},{"lineNumber":98,"author":{"gitId":"bossleanne"},"content":"                isLoadedTask \u003d false;","lastModifiedDate":"2021-11-09"},{"lineNumber":99,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":100,"author":{"gitId":"bossleanne"},"content":"            return new Event(eventAndTime[0].trim(), strDateTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":101,"author":{"gitId":"bossleanne"},"content":"        }catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-11-09"},{"lineNumber":102,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"No date or time founded, please re-enter\");","lastModifiedDate":"2021-11-09"},{"lineNumber":103,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":104,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"bossleanne"},"content":"     * Generate new Deadline task","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"bossleanne"},"content":"     * @param fullCommand get the full description of Deadline string","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"bossleanne"},"content":"     * @return Task object based on the user input","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for invalid time and date constrains","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"bossleanne"},"content":"    public static Task createDeadline(String fullCommand) throws DukeException {","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-11-09"},{"lineNumber":113,"author":{"gitId":"bossleanne"},"content":"            String[] deadlineAndTime \u003d fullCommand.split(\"by\");","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"bossleanne"},"content":"            deadlineAndTime[0] \u003d deadlineAndTime[0].replace(\" /\", \"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"bossleanne"},"content":"            String strDateTime \u003d deadlineAndTime[1].trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"bossleanne"},"content":"            if(!isLoadedTask){","lastModifiedDate":"2021-11-09"},{"lineNumber":117,"author":{"gitId":"bossleanne"},"content":"                strDateTime \u003d p.parseDate(strDateTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":118,"author":{"gitId":"bossleanne"},"content":"            } else{","lastModifiedDate":"2021-11-09"},{"lineNumber":119,"author":{"gitId":"bossleanne"},"content":"                isLoadedTask \u003d false;","lastModifiedDate":"2021-11-09"},{"lineNumber":120,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":121,"author":{"gitId":"bossleanne"},"content":"            return new Deadline(deadlineAndTime[0].trim(),strDateTime);","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"bossleanne"},"content":"        }catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-11-09"},{"lineNumber":123,"author":{"gitId":"bossleanne"},"content":"           throw new DukeException(\"No date or time founded, please re-enter\");","lastModifiedDate":"2021-11-09"},{"lineNumber":124,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":125,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":126,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"bossleanne"},"content":"     * Parses user input index and align it with the array index","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"bossleanne"},"content":"     * @param fullCommand get the full description of Deadline string","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"bossleanne"},"content":"     * @return the index of task display in list of tasks","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"bossleanne"},"content":"    public static int getValidTaskId(String fullCommand) throws DukeException{","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"bossleanne"},"content":"        int taskId \u003d Integer.parseInt(fullCommand)-1;","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"bossleanne"},"content":"        if(Matching.getMatch(fullCommand, \"^[0-9]+$\")\u003d\u003d\"-1\"){","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(Ui.inValidInput());","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"bossleanne"},"content":"        }else if(taskId \u003c 0){","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"Invalid number input\");","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":139,"author":{"gitId":"bossleanne"},"content":"        return taskId;","lastModifiedDate":"2021-11-13"},{"lineNumber":140,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":141}},{"path":"src/main/java/todolist/parser/ParserDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.utils.Matching;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"public class ParserDate {","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"     * Parses user date input","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"     * @param input get the date and time string","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"     * @return a new date format string that rejoin the date and time","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for invalid date and time input","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    public String parseDate(String input) throws DukeException{","lastModifiedDate":"2021-11-09"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"        String[] newDateTime \u003d input.split(\" \");","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"        for(int i \u003d0; i\u003c newDateTime.length; i++) {","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"            if (isStrDate(newDateTime[i])){","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"                newDateTime[i] \u003d convertStrToDate(newDateTime[i]);","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"            } else if(isStrTime(newDateTime[i])) {","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"                newDateTime[i] \u003d convertStrToTime(newDateTime[i]);","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"            }else{","lastModifiedDate":"2021-11-09"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"                throw new DukeException(\"No valid date or time founded, please re-enter. e.g 21/08/2021 1800\");","lastModifiedDate":"2021-11-09"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"        return String.join(\",\", newDateTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"     * Get the date string from user input","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"    public boolean isStrDate(String dateStr){","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"        String regexDate \u003d \"\\\\d{1,2}\\\\/\\\\d{1,2}\\\\/\\\\d{1,4}\";","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"        String strDate \u003d Matching.getMatch(dateStr,regexDate);","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"        if(strDate.equals(\"-1\")){","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"     * Get the time string from user input","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"    public boolean isStrTime(String timeStr){","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"        String regexTime \u003d \"\\\\d{4}$\";","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"        String strTime \u003d Matching.getMatch(timeStr,regexTime);","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"        if(strTime.equals(\"-1\")){","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"     * Convert the date string from user input to a new format","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"     * @param dateStr string as d/M/yyyy format","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"     * @return date string as MMM dd yyyy format","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for invaild date format","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"    public String convertStrToDate(String dateStr) throws DukeException{","lastModifiedDate":"2021-11-09"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-11-09"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr, format);","lastModifiedDate":"2021-11-09"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"bossleanne"},"content":"        }catch (Exception e){","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"Wrong Date format, please re-enter a d/M/yyyy format. e.g 30/10/2021\");","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"bossleanne"},"content":"     * Convert the time string from user input to a new format","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"bossleanne"},"content":"     * @param timeStr string as HHmm format","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"bossleanne"},"content":"     * @return time string h:mm a format","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException for invaild time format","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"bossleanne"},"content":"    public String convertStrToTime(String timeStr) throws DukeException {","lastModifiedDate":"2021-11-09"},{"lineNumber":74,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"bossleanne"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"bossleanne"},"content":"            LocalTime dateTime \u003d LocalTime.parse(timeStr,format);","lastModifiedDate":"2021-11-09"},{"lineNumber":77,"author":{"gitId":"bossleanne"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"h:mm a\"));","lastModifiedDate":"2021-11-09"},{"lineNumber":78,"author":{"gitId":"bossleanne"},"content":"        }catch (Exception e){","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"Wrong time format, please re-enter a 4 digit time. e.g 1800\");","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"bossleanne"},"content":"//    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"bossleanne"},"content":"//     * A match function to match the regex and user input","lastModifiedDate":"2021-11-13"},{"lineNumber":85,"author":{"gitId":"bossleanne"},"content":"//     * @param input matcher in string","lastModifiedDate":"2021-11-13"},{"lineNumber":86,"author":{"gitId":"bossleanne"},"content":"//     * @param regex pattern in string","lastModifiedDate":"2021-11-13"},{"lineNumber":87,"author":{"gitId":"bossleanne"},"content":"//     * @return matched string","lastModifiedDate":"2021-11-13"},{"lineNumber":88,"author":{"gitId":"bossleanne"},"content":"//     */","lastModifiedDate":"2021-11-13"},{"lineNumber":89,"author":{"gitId":"bossleanne"},"content":"//    public String getMatch(String input, String regex) {","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"bossleanne"},"content":"//        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"bossleanne"},"content":"//        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"bossleanne"},"content":"//        if (matcher.find()) {","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"bossleanne"},"content":"//            return matcher.group();","lastModifiedDate":"2021-11-13"},{"lineNumber":94,"author":{"gitId":"bossleanne"},"content":"//        } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":95,"author":{"gitId":"bossleanne"},"content":"//            return \"-1\";","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"bossleanne"},"content":"//        }","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"bossleanne"},"content":"//    }","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"bossleanne":98}},{"path":"src/main/java/todolist/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.data.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import todolist.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import todolist.ui.DukeException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"import java.io.File;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-09"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":" * Represents the file used to store todo list data","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object that can export list of object to a txt file","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":" * and load the txt file to a list of tasks","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"public class Storage{","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    public static String filePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    public static File f;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"    public static String textToAppend \u003d \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    public static String splitBy \u003d \" | \";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    public static ArrayList\u003cString\u003e logString \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException if the path is invalid","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"    public static void checkThePath() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"        String tmpPath \u003d f.getAbsolutePath();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"        int lastSlashPos \u003d tmpPath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"        String path \u003d tmpPath.substring(0, lastSlashPos);","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"        String file \u003d tmpPath.substring(lastSlashPos + 1, tmpPath.length());","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"        if (!Files.isDirectory(Paths.get(path))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"            File newFile \u003d new File(path);","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"            newFile.mkdir();","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"            f.createNewFile();","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"        }catch (IOException e){","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"     * @throws DukeException if the given file is not founded","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"     * and/or has no tasks inside the file","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"    public static ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"            ArrayList\u003cTask\u003e loadTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"bossleanne"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"bossleanne"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"bossleanne"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"bossleanne"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"bossleanne"},"content":"                String[] components \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"bossleanne"},"content":"                String taskStatus \u003d components[0];","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"bossleanne"},"content":"                boolean isDone \u003d getBooleanNum(components[1]);","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"bossleanne"},"content":"                String taskDescription \u003d components[2];","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"bossleanne"},"content":"                Task loadTask;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"bossleanne"},"content":"                Parser.setLoadedTask();","lastModifiedDate":"2021-11-09"},{"lineNumber":74,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"bossleanne"},"content":"                switch (taskStatus) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"bossleanne"},"content":"                case \"T\":","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"bossleanne"},"content":"                    loadTask \u003d Parser.createToDo(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"bossleanne"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"bossleanne"},"content":"                case \"E\":","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"bossleanne"},"content":"                    loadTask \u003d Parser.createEvent(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"bossleanne"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"bossleanne"},"content":"                case \"D\":","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"bossleanne"},"content":"                    loadTask \u003d Parser.createDeadline(taskDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"bossleanne"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"bossleanne"},"content":"                default:","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"bossleanne"},"content":"                    throw new DukeException(\"Unexpected value: \" + taskStatus);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"bossleanne"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"bossleanne"},"content":"                loadTask.setIsDone(isDone);","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"bossleanne"},"content":"                loadTasks.add(loadTask);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"bossleanne"},"content":"            return loadTasks;","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"bossleanne"},"content":"        }catch (IOException e){","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"bossleanne"},"content":"     * Encodes all the {@code Task} in the {@code TaskList} into a list readable string presentation and storage as a txt file.","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"bossleanne"},"content":"     * @throws IOException if the file not exist","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"bossleanne"},"content":"    public static void store(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"bossleanne"},"content":"        try{","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"bossleanne"},"content":"            checkThePath();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"bossleanne"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"bossleanne"},"content":"            fw.write(\"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"bossleanne"},"content":"            fw.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"bossleanne"},"content":"            for (Task task :tasks.tasks){","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"bossleanne"},"content":"                String textToAppend \u003d appendToFile(task);","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"bossleanne"},"content":"                writeToFile(filePath,textToAppend);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"bossleanne"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"bossleanne"},"content":"        }catch (IOException e){","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"bossleanne"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"bossleanne"},"content":"     * Saves the {@code TodoList} data to the storage file.","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"bossleanne"},"content":"     * @throws IOException if there were errors converting and/or storing data to file.","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"bossleanne"},"content":"    private static void writeToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"bossleanne"},"content":"        FileWriter fw \u003d new FileWriter(filePath,true);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"bossleanne"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"bossleanne"},"content":"        fw.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"bossleanne"},"content":"     * Encodes the {@code Task} into a readable string representation.","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"bossleanne"},"content":"     * TaskStatus | isDone | Description","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"bossleanne"},"content":"     * @param task object","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"bossleanne"},"content":"     * @return String based on the description inside task","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"bossleanne"},"content":"    public static String appendToFile(Task task){","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"bossleanne"},"content":"        textToAppend \u003d task.getTaskStatus()+","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"bossleanne"},"content":"                splitBy+getStringNum(task.getIsDone());","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"bossleanne"},"content":"        if(task.getTaskStatus().equals(\"D\")){","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"bossleanne"},"content":"            textToAppend +\u003d splitBy + task.getDescription()+\" by \"+task.getTime();","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"bossleanne"},"content":"        }else if(task.getTaskStatus().equals(\"E\")){","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"bossleanne"},"content":"            textToAppend +\u003d splitBy + task.getDescription()+\" at \"+task.getTime();","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"bossleanne"},"content":"        }else{","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"bossleanne"},"content":"            textToAppend +\u003d splitBy+task.getDescription();","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"bossleanne"},"content":"        return textToAppend+System.lineSeparator();","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"bossleanne"},"content":"    public static void logCommand(String command){","lastModifiedDate":"2021-11-13"},{"lineNumber":144,"author":{"gitId":"bossleanne"},"content":"        logString.add(command);","lastModifiedDate":"2021-11-13"},{"lineNumber":145,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":146,"author":{"gitId":"bossleanne"},"content":"    public static ArrayList\u003cString\u003e getLogCommand(){","lastModifiedDate":"2021-11-13"},{"lineNumber":147,"author":{"gitId":"bossleanne"},"content":"        return logString;","lastModifiedDate":"2021-11-13"},{"lineNumber":148,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":149,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"bossleanne"},"content":"     * Convert [X] to 1 and [] to 0","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"bossleanne"},"content":"     * @param isDone boolean","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"bossleanne"},"content":"     * @return the task status in string 1 or 0","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"bossleanne"},"content":"    public static String getStringNum(Boolean isDone) {","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"bossleanne"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"bossleanne"},"content":"     * Convert 1 to [X] and 0 to 0","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"bossleanne"},"content":"     * @param isDone string","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"bossleanne"},"content":"     * @return the task status boolean true/false","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"bossleanne"},"content":"    public static boolean getBooleanNum(String isDone) {","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"bossleanne"},"content":"        if(isDone.equals(\"1\")){","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"bossleanne"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"bossleanne"},"content":"        return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"bossleanne":170}},{"path":"src/main/java/todolist/ui/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":" * Signals that the given data does not fulfill Duke constraints.","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"     * @param message shows failed constraints\u0027 information","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"    public DukeException(String message){","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"        super(message);","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":12}},{"path":"src/main/java/todolist/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import todolist.data.TaskList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import todolist.data.command.HelpCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":" * TodoList application\u0027s command-line user interface.","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"public class Ui {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"    /** Line separator. */","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    private static final String DASHES \u003d","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"            \"________________________________________________________________________________\\n\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"    /**Prefix used to add to the beginning of lines printed by TodoList when adding task */","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    private static final String ADD_PREFIX \u003d \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"    /**Prefix used to add to the beginning of lines printed by TodoList when deleting task */","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"    private static final String DELETE_PREFIX \u003d \"Noted. I\u0027ve removed this task: \";","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"    /**Prefix used to add to the beginning of lines printed by TodoList when uppdate task */","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"    private static final String DONE_PREFIX \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    /**Suffix used to add to the end of lines printed by TodoList*/","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"    private static final String TASK_SUFFIX \u003d (\"\\nNow you have \"+\"%1$d\"+\" tasks in the list.\");","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"bossleanne"},"content":"    /**Prefix used to add to the end of lines printed by TodoList when encounter error*/","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"bossleanne"},"content":"    private static final String ERROR_PREFIX \u003d \"☹ OOPS!!! \";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"bossleanne"},"content":"    private static final String MESSAGE_SEARCH \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"    private static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"bossleanne"},"content":"    /** Size of tasks inside TodoList program*/","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"bossleanne"},"content":"    private static Integer TASK_SIZE \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"bossleanne"},"content":"     * Returns true if the user input line should be ignored.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"bossleanne"},"content":"     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"bossleanne"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"bossleanne"},"content":"     * @param rawInputLine full raw user input line.","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"bossleanne"},"content":"     * @return true if the entire user input line should be ignored.","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"bossleanne"},"content":"    static boolean shouldIgnore(String rawInputLine) {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"bossleanne"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"bossleanne"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"bossleanne"},"content":"     * Ignores empty, pure whitespace, and comment lines.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"bossleanne"},"content":"     * @return command (full line) entered by the user","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"bossleanne"},"content":"    public String getUserCommand(){","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"bossleanne"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"bossleanne"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"bossleanne"},"content":"        command \u003d command.trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"bossleanne"},"content":"        while (shouldIgnore(command)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"bossleanne"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"bossleanne"},"content":"        return command;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"bossleanne"},"content":"    public static String getSuffix() {","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"bossleanne"},"content":"        return String.format(TASK_SUFFIX, TASK_SIZE);","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"bossleanne"},"content":"    public void setSize(Integer taskSize){","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"bossleanne"},"content":"        TASK_SIZE\u003dtaskSize;","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"bossleanne"},"content":"     * Prints welcome messages at the start of the application.","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"bossleanne"},"content":"    public void greeting(){","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"bossleanne"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-11-09"},{"lineNumber":68,"author":{"gitId":"bossleanne"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-11-09"},{"lineNumber":69,"author":{"gitId":"bossleanne"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-11-09"},{"lineNumber":70,"author":{"gitId":"bossleanne"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-11-09"},{"lineNumber":71,"author":{"gitId":"bossleanne"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-11-09"},{"lineNumber":72,"author":{"gitId":"bossleanne"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-11-09"},{"lineNumber":73,"author":{"gitId":"bossleanne"},"content":"        System.out.println(DASHES","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"bossleanne"},"content":"                + logo","lastModifiedDate":"2021-11-09"},{"lineNumber":75,"author":{"gitId":"bossleanne"},"content":"                + \" Hello! I\u0027m Duke todolist apps, are you ready to start your day?\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"bossleanne"},"content":"                + \" Here are the usage of this application:\");","lastModifiedDate":"2021-11-09"},{"lineNumber":77,"author":{"gitId":"bossleanne"},"content":"        new HelpCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":78,"author":{"gitId":"bossleanne"},"content":"        System.out.println(DASHES);","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"bossleanne"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"bossleanne"},"content":"        System.out.println(DASHES + MESSAGE_GOODBYE);","lastModifiedDate":"2021-11-09"},{"lineNumber":82,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":83,"author":{"gitId":"bossleanne"},"content":"    public static void showMessage(String commonMessage) {","lastModifiedDate":"2021-11-09"},{"lineNumber":84,"author":{"gitId":"bossleanne"},"content":"        System.out.println(DASHES+commonMessage);","lastModifiedDate":"2021-11-09"},{"lineNumber":85,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"bossleanne"},"content":"     * Display the result when take command execution from the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"bossleanne"},"content":"    public void showAddMessage(String message) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"bossleanne"},"content":"//        showToUser(ADD_PREFIX,message,getSuffix());","lastModifiedDate":"2021-11-09"},{"lineNumber":91,"author":{"gitId":"bossleanne"},"content":"        showToUser(ADD_PREFIX,message,getSuffix());","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"bossleanne"},"content":"    public void showDeleteMessage(String message) {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"bossleanne"},"content":"        showToUser(DELETE_PREFIX,message,getSuffix());","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"bossleanne"},"content":"    public void showModifyMessage(String message) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"bossleanne"},"content":"        showToUser(DONE_PREFIX,message,\"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"bossleanne"},"content":"    public void showSearchMessage() {","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"bossleanne"},"content":"        System.out.println(MESSAGE_SEARCH);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"bossleanne"},"content":"    public void showLine() {System.out.println(DASHES);}","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"bossleanne"},"content":"    /** Shows different error message(s) to the user when {@code DukeException} is triggered*/","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"bossleanne"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-11-09"},{"lineNumber":106,"author":{"gitId":"bossleanne"},"content":"        System.out.println(DASHES + ERROR_PREFIX+errorMessage);","lastModifiedDate":"2021-11-09"},{"lineNumber":107,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"bossleanne"},"content":"    public void showLoadingError(){","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"bossleanne"},"content":"        System.out.println( DASHES + ERROR_PREFIX+\"No tasks file found, process to take new tasks\\n\"+DASHES);","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"bossleanne"},"content":"    public static String showIncorrectIndex(String taskStatus){","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"bossleanne"},"content":"        return \"The description of a \"+taskStatus+\" cannot be empty.\";","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"bossleanne"},"content":"    public void showEmptyTask(){","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"bossleanne"},"content":"        System.out.println( DASHES + ERROR_PREFIX+\"No tasks in the list, process to take new tasks\");","lastModifiedDate":"2021-11-09"},{"lineNumber":116,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"bossleanne"},"content":"    public static String inValidInput(){","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"bossleanne"},"content":"        return \" I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"bossleanne"},"content":"    public static String outOfIndex(int taskCount){","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"bossleanne"},"content":"        return \"There are only \"+taskCount+\" tasks, please enter the correct task index\";","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"bossleanne"},"content":"    /** Shows single task to the user","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"bossleanne"},"content":"     * @param Prefix print before description","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"bossleanne"},"content":"     * @param Message print the description of a task","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"bossleanne"},"content":"     * @param Suffix print after the description","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"bossleanne"},"content":"     * */","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"bossleanne"},"content":"    public void showToUser(String Prefix, String Message, String Suffix) {","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"bossleanne"},"content":"        System.out.println(DASHES","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"bossleanne"},"content":"                        +Prefix + \"\\n\"","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"bossleanne"},"content":"                        +Message","lastModifiedDate":"2021-11-09"},{"lineNumber":133,"author":{"gitId":"bossleanne"},"content":"                        +Suffix","lastModifiedDate":"2021-11-09"},{"lineNumber":134,"author":{"gitId":"bossleanne"},"content":"                        );","lastModifiedDate":"2021-11-09"},{"lineNumber":135,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"bossleanne"},"content":"    /** Shows a list of tasks to the user, formatted as an indexed list.","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"bossleanne"},"content":"     *  Formats a string as a viewable indexed list item.","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"bossleanne"},"content":"     * */","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"bossleanne"},"content":"    public void showToUserAllTasks(TaskList taskList){","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"bossleanne"},"content":"        for(int i \u003d 0; i\u003c taskList.taskCount();i++){","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"bossleanne"},"content":"            System.out.println(i+1 + \".\"+taskList.getTasks(i).toString());","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"bossleanne":144}},{"path":"src/main/java/todolist/utils/Matching.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.utils;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"public class Matching {","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"     * A match function to match the regex and user input","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"     * @param input matcher in string","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"     * @param regex pattern in string","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"     * @return matched string","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    public static String getMatch(String input, String regex) {","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"        if (matcher.find()) {","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"            return matcher.group();","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"        } else {","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"bossleanne"},"content":"            return \"-1\";","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"bossleanne"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"bossleanne":22}},{"path":"src/test/java/todolist/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"public class DukeTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bossleanne":11}},{"path":"src/test/java/todolist/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.parser;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"class ParserTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"    //todo need to ask prof why this returning object failed","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"//    public void createToDo(){","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"//        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"//        assertEquals(todo, Parser.createToDo(\"read book\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"//    }","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"bossleanne"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bossleanne":18}},{"path":"src/test/java/todolist/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bossleanne"},"content":"package todolist.ui;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"bossleanne"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"bossleanne"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"bossleanne"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"bossleanne"},"content":"class UiTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"bossleanne"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"bossleanne"},"content":"    void shouldIgnore() {","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"bossleanne"},"content":"        assertEquals(true,Ui.shouldIgnore(\" \"));","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"bossleanne"},"content":"        assertEquals(false,Ui.shouldIgnore(\"test\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"bossleanne"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"bossleanne"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bossleanne":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"bossleanne"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":33,"bossleanne":1}}]
