[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"group \u0027com.kangteng.duke\u0027","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"version \u00271.0\u0027","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"run{","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"-":29,"EndireKT":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.exception.UnableToLoadProcessException;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.storage.FileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-11"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * Begin the program here.","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    private FileAccess fileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    private TaskList myList;","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    private Ui ui;","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"     * initialize the ui, fileAccess and taskList","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"     * load the progress into taskList","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-11-09"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"        fileAccess \u003d new FileAccess(filepath);","lastModifiedDate":"2021-11-09"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        myList \u003d new TaskList();","lastModifiedDate":"2021-11-09"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            String progress \u003d fileAccess.loadProgressFromFile();","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"            new LoadDuke(myList, progress).run();","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        } catch (UnableToLoadProcessException e) {","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"            Message.msgUnableToLoadProgress();","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     * Start the Duke program","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"    public void initialize() {","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        StartDuke.run();","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"        new RunDuke(myList, ui, fileAccess).run();","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * End the Duke program","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"    public void end() {","lastModifiedDate":"2021-11-09"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"        new EndDuke(fileAccess).run();","lastModifiedDate":"2021-11-11"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     * Starting point of the program","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        Duke duke \u003d new Duke(\"src\\\\resources\\\\progress.txt\");","lastModifiedDate":"2021-11-09"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"        duke.initialize();","lastModifiedDate":"2021-11-09"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        duke.end();","lastModifiedDate":"2021-11-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"EndireKT":61}},{"path":"src/main/java/duke/EndDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.exception.UnableToLoadBuddhaException;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.storage.FileAccess;","lastModifiedDate":"2021-11-11"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * Duke class that executes when Duke is ending","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"public class EndDuke {","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    private static FileAccess fileAccess;","lastModifiedDate":"2021-11-11"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    public EndDuke(FileAccess fileAccess) {","lastModifiedDate":"2021-11-11"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        this.fileAccess \u003d fileAccess;","lastModifiedDate":"2021-11-11"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     * Start the end sequence","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    public static void run() {","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"        showByeMessage();","lastModifiedDate":"2021-11-09"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"     * Show the Bye Message","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-09"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"     * called when Duke program ends","lastModifiedDate":"2021-11-09"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"    public static void showByeMessage() {","lastModifiedDate":"2021-11-09"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"            Message.msgBye();","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"            String buddhaText \u003d fileAccess.readBuddhaText();","lastModifiedDate":"2021-11-11"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"            Message.msgBuddha(buddhaText);","lastModifiedDate":"2021-11-11"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"        } catch (UnableToLoadBuddhaException e) {","lastModifiedDate":"2021-11-11"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"            Message.msgUnableToLoadBuddha();","lastModifiedDate":"2021-11-12"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":47}},{"path":"src/main/java/duke/LoadDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke;","lastModifiedDate":"2021-11-11"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.action.ParseDateTime;","lastModifiedDate":"2021-11-11"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.action.ParseProgress;","lastModifiedDate":"2021-11-11"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import duke.exception.UnableToLoadProcessException;","lastModifiedDate":"2021-11-11"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-11"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2021-11-11"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-11"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * Duke class that executes when Duke is loading progress","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"public class LoadDuke {","lastModifiedDate":"2021-11-11"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    private TaskList myList;","lastModifiedDate":"2021-11-11"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    private String progress;","lastModifiedDate":"2021-11-11"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    private String[] sentences;","lastModifiedDate":"2021-11-11"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"    public LoadDuke(TaskList myList, String progress) {","lastModifiedDate":"2021-11-11"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2021-11-11"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-11-11"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"     * Execute the load","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"    public void run() throws UnableToLoadProcessException {","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-11"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"            splitStringByTask();","lastModifiedDate":"2021-11-11"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"            createTaskFromSentence();","lastModifiedDate":"2021-11-11"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-11"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"            Message.msgError(e);","lastModifiedDate":"2021-11-11"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"            throw new UnableToLoadProcessException();","lastModifiedDate":"2021-11-11"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     * Calls to parser to split progress.txt into sentences","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * Each sentence represents a task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"    private void splitStringByTask() throws Exception {","lastModifiedDate":"2021-11-11"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"        sentences \u003d ParseProgress.splitProgressIntoSentence(progress);","lastModifiedDate":"2021-11-12"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     * Loop through the sentences and read each sentence","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"     * Generate task from each sentence","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"    private void createTaskFromSentence() throws Exception {","lastModifiedDate":"2021-11-11"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"        for (int i \u003d 0; i \u003c sentences.length - 1; i++) {","lastModifiedDate":"2021-11-11"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"            String[] phrases \u003d ParseProgress.splitSentenceByBarSeparator(sentences[i]);","lastModifiedDate":"2021-11-11"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"            addTaskFromPhrases(phrases);","lastModifiedDate":"2021-11-11"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"     * Add task into taskList based on each sentence","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"    private void addTaskFromPhrases(String[] phrases) throws Exception {","lastModifiedDate":"2021-11-11"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"        String taskIndexInString \u003d phrases[0];","lastModifiedDate":"2021-11-11"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"        int taskIndex \u003d Integer.parseInt(taskIndexInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d phrases[1];","lastModifiedDate":"2021-11-11"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d phrases[2];","lastModifiedDate":"2021-11-11"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"        String taskDetail \u003d phrases[3];","lastModifiedDate":"2021-11-11"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"        String taskPriorityInString \u003d phrases[4];","lastModifiedDate":"2021-11-11"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"        int taskPriorityInInt \u003d Integer.parseInt(taskPriorityInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriority \u003d TaskPriority.convertIntToPriority(taskPriorityInInt);","lastModifiedDate":"2021-11-11"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"        String taskDateInString \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"        LocalDate taskDate;","lastModifiedDate":"2021-11-11"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"        String taskStartTimeInString \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"        LocalTime taskTimeStart;","lastModifiedDate":"2021-11-11"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"        String taskEndTimeInString \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"        LocalTime taskTimeEnd;","lastModifiedDate":"2021-11-11"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"        int i \u003d 5;","lastModifiedDate":"2021-11-11"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"        while (true) {","lastModifiedDate":"2021-11-11"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"            if (phrases[i].equals(\";\\r\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"                break;","lastModifiedDate":"2021-11-11"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"            switch (i) {","lastModifiedDate":"2021-11-11"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"            case 5:","lastModifiedDate":"2021-11-11"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"                taskDateInString \u003d phrases[5];","lastModifiedDate":"2021-11-11"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"                break;","lastModifiedDate":"2021-11-12"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"            case 6:","lastModifiedDate":"2021-11-11"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"                taskStartTimeInString \u003d phrases[6];","lastModifiedDate":"2021-11-11"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"                break;","lastModifiedDate":"2021-11-12"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"            case 7:","lastModifiedDate":"2021-11-11"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"                taskEndTimeInString \u003d phrases[7];","lastModifiedDate":"2021-11-11"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"                break;","lastModifiedDate":"2021-11-12"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"            default:","lastModifiedDate":"2021-11-12"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"                break;","lastModifiedDate":"2021-11-12"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"            i++;","lastModifiedDate":"2021-11-11"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"        switch (taskTypeInString) {","lastModifiedDate":"2021-11-11"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"        case \"T\":","lastModifiedDate":"2021-11-11"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"            myList.addItemToDos(taskDetail);","lastModifiedDate":"2021-11-11"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"        case \"E\":","lastModifiedDate":"2021-11-11"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"            taskDate \u003d ParseDateTime.toDate(taskDateInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"            if (taskEndTimeInString.equals(\"null\") \u0026\u0026 taskStartTimeInString.equals(\"null\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"                myList.addItemEvent(taskDetail, taskDate);","lastModifiedDate":"2021-11-11"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"            } else if (taskEndTimeInString.equals(\"null\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"                taskTimeStart \u003d ParseDateTime.toTime(taskStartTimeInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"                myList.addItemEvent(taskDetail, taskDate, taskTimeStart);","lastModifiedDate":"2021-11-11"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"            } else {","lastModifiedDate":"2021-11-11"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"                taskTimeStart \u003d ParseDateTime.toTime(taskStartTimeInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"                taskTimeEnd \u003d ParseDateTime.toTime(taskEndTimeInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"                myList.addItemEvent(taskDetail, taskDate, taskTimeStart, taskTimeEnd);","lastModifiedDate":"2021-11-11"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"        case \"D\":","lastModifiedDate":"2021-11-11"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"            taskDate \u003d ParseDateTime.toDate(taskDateInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"            if (taskStartTimeInString.equals(\"null\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"                myList.addItemDeadline(taskDetail, taskDate);","lastModifiedDate":"2021-11-11"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"            } else {","lastModifiedDate":"2021-11-11"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"                taskTimeStart \u003d ParseDateTime.toTime(taskStartTimeInString);","lastModifiedDate":"2021-11-11"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"                myList.addItemDeadline(taskDetail, taskDate, taskTimeStart);","lastModifiedDate":"2021-11-11"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-12"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-12"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"        if (isDoneInString.equals(\"1\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"            myList.setTaskDone(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"        myList.setTaskPriority(taskIndex, taskPriority);","lastModifiedDate":"2021-11-11"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-11"}],"authorContributionMap":{"EndireKT":152}},{"path":"src/main/java/duke/RunDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.action.Parser;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.command.Command;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.storage.FileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-11-09"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * Duke class that run the main Duke program","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"public class RunDuke {","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    private static TaskList myList;","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    private static Ui ui;","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    private static FileAccess fileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    private static Parser parser;","lastModifiedDate":"2021-11-09"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    private static Command cmd;","lastModifiedDate":"2021-11-09"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    private static Scanner scanner;","lastModifiedDate":"2021-11-10"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"    public RunDuke(TaskList myList, Ui ui, FileAccess fileAccess) {","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        this.fileAccess \u003d fileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-11-09"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        cmd \u003d new Command(parser);","lastModifiedDate":"2021-11-09"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-10"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     * Execute the run","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"    public void run() {","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"        boolean isDukeRunning \u003d true;","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"        while (isDukeRunning) {","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"            String userInput \u003d ui.requestUserInput(scanner);","lastModifiedDate":"2021-11-10"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"            if (userInput.isEmpty()) {","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"                Message.msgInvalidInput();","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"            } else {","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"                String userCommand \u003d parser.processUserCommand(userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"                isDukeRunning \u003d canProcessCommand(userCommand, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"     * Read user command and execute respective methods accordingly","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"     * Accepted user input: bye, list, set, done, todo, save","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"     * Accepted user input: find, info, event, delete, deadline","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"     * method returns true for all commands and non-accepted user input","lastModifiedDate":"2021-11-14"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"     * method return false for bye command.","lastModifiedDate":"2021-11-14"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"     * @param userCommand String that represents the command type by user","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"     * @param userInput   String that represents the full user input","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     * @return boolean false if the command is \"bye\"; true if otherwise","lastModifiedDate":"2021-11-12"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"    private static boolean canProcessCommand(String userCommand, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"        assert !userCommand.isEmpty() : \"userCommand should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"        assert !userInput.isEmpty() : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        switch (userCommand) {","lastModifiedDate":"2021-11-09"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"        case \"bye\":","lastModifiedDate":"2021-11-09"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"            return false;","lastModifiedDate":"2021-11-09"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"        case \"list\":","lastModifiedDate":"2021-11-09"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"            cmd.showFullList(myList);","lastModifiedDate":"2021-11-09"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"        case \"set\":","lastModifiedDate":"2021-11-09"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"            cmd.setPriorityTask(myList, scanner);","lastModifiedDate":"2021-11-10"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"        case \"done\":","lastModifiedDate":"2021-11-09"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"            cmd.markTaskDone(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"        case \"todo\":","lastModifiedDate":"2021-11-09"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"            cmd.addTaskToDo(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"        case \"save\":","lastModifiedDate":"2021-11-09"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"            cmd.saveTask(myList, fileAccess);","lastModifiedDate":"2021-11-09"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"        case \"find\":","lastModifiedDate":"2021-11-09"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"            cmd.findTask(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"        case \"info\":","lastModifiedDate":"2021-11-11"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"            cmd.showInfo();","lastModifiedDate":"2021-11-11"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-11"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"        case \"event\":","lastModifiedDate":"2021-11-09"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"            cmd.addTaskEvent(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"        case \"undone\":","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"            cmd.markTaskUnDone(myList, userInput);","lastModifiedDate":"2021-11-14"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-14"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"        case \"delete\":","lastModifiedDate":"2021-11-09"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"            cmd.deleteTask(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"        case \"deadline\":","lastModifiedDate":"2021-11-09"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"            cmd.addTaskDeadline(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-09"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"            cmd.showInvalidCommand();","lastModifiedDate":"2021-11-11"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":118}},{"path":"src/main/java/duke/StartDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * Duke class that executes when Duke is initialized","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"public class StartDuke {","lastModifiedDate":"2021-11-09"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"    public static void run() {","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"        showGreetMessage();","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     * Show the opening Greet Message in System.out.println","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    public static void showGreetMessage() {","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"        Message.msgGreet();","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":24}},{"path":"src/main/java/duke/action/ParseDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.action;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import java.util.Locale;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * Handle date and time related functions","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * Conversion between String and LocalDate/LocalTime","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * String manipulation","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"public class ParseDateTime {","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     * Convert date from String to LocalDate","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"     * @param date TaskDate of the task","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     * @return LocalDate","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     * @throws DateTimeParseException If format of the date is not accepted","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"    public static LocalDate toDate(String date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        LocalDate formattedDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"                .parseCaseInsensitive()","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"                .parseLenient()","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[yyyy-MM-dd]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[M-d-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[M-dd-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[MM-d-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[MM-dd-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[M/d/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[M/dd/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[MM/d/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[MM/dd/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[d-M-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[d-MM-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[dd-M-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[dd-MM-yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[d/M/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[d/MM/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[dd/M/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[dd/MM/yyyy]\")","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"                .appendPattern(\"[MMM dd yyyy]\");","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"        DateTimeFormatter formatter \u003d builder.toFormatter(Locale.ENGLISH);","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"            formattedDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"            return formattedDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"            throw e;","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"     * Convert time from String to LocalTime","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"     * @param time String that describes taskDate of the task","lastModifiedDate":"2021-11-11"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"     * @return LocalTime","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     * @throws DateTimeParseException If format of the date is not accepted","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"    public static LocalTime toTime(String time) {","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"        LocalTime localTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"        return localTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"     * Split Date and Time by empty space \" \"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"     * @param dateAndTime String that contains both date and time","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     * @return String[]","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"    public static String[] splitDateAndTime(String dateAndTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"        return dateAndTime.split(\" \");","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"     * Check if the string contains date and time","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"     * return 1 if the string contains only string representation of a Date","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"     * return 2 if the string contains string representation of a Date and a Time","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"     * return 3 if the string contains string representation of a Date and 2 Time","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"     * @param dateAndTime String representation of date and time","lastModifiedDate":"2021-11-11"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"     * @return int 1 or 2 or 3","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"    public static int isDateAndTime(String dateAndTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"        String[] split \u003d dateAndTime.split(\" \");","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"            return 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"        } else if (split.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"            return 2;","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"            return 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"     * Extract string representation of date from string array","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"     * @param split String Array of date and time","lastModifiedDate":"2021-11-11"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"     * @return String Date","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"    public static String toExtractDateFromSplitDateAndTime(String[] split) {","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"        return split[0];","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"     * Extract string representation of time from string array","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"     * @param split String Array of date and time","lastModifiedDate":"2021-11-11"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"     * @return String Time","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"    public static String toExtractTimeFromSplitDateAndTime(String[] split) {","lastModifiedDate":"2021-11-09"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"        return split[1];","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"     * Extract string representation of start time from string array","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"     * @param split String Array of date and time","lastModifiedDate":"2021-11-11"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"     * @return String TimeStart","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"    public static String toExtractTimeStartFromSplitDateAndTime(String[] split) {","lastModifiedDate":"2021-11-09"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"        return split[1];","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"     * Extract string representation of end time from string array","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"     * @param split String Array of date and time","lastModifiedDate":"2021-11-11"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"     * @return String TimeEnd","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"    public static String toExtractTimeEndFromSplitDateAndTime(String[] split) {","lastModifiedDate":"2021-11-09"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"        return split[2];","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"EndireKT":147}},{"path":"src/main/java/duke/action/ParseProgress.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.action;","lastModifiedDate":"2021-11-11"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Handle progress related string","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * Splitting of string (describes the progress) loaded from progress file into arrays","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * String manipulation","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public class ParseProgress {","lastModifiedDate":"2021-11-11"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"     * Convert date from String to LocalDate","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     * @param progress String that is loaded from progress.txt","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * @return String[] String array that has been split based on \\n","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    public static String[] splitProgressIntoSentence(String progress) {","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        return progress.split(\"\\\\n\", -1);","lastModifiedDate":"2021-11-11"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     * Convert date from String to LocalDate","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     * @param sentence String that contains the task information","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"     * @return String[] String array that has been split based on |","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"    public static String[] splitSentenceByBarSeparator(String sentence) {","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        return sentence.split(\"\\\\|\", -1);","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-11"}],"authorContributionMap":{"EndireKT":35}},{"path":"src/main/java/duke/action/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.action;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Make sense of user input and return the user command","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"public class Parser {","lastModifiedDate":"2021-11-09"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"    public Parser() {","lastModifiedDate":"2021-11-09"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     * Convert date from String to LocalDate","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     * @return String that describe the command specified by user","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    public String processUserCommand(String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"            return \"invalid\";","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"            return \"bye\";","lastModifiedDate":"2021-11-09"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"            return \"list\";","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        } else if (userInput.equals(\"set\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            return \"set\";","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        } else if (userInput.equals(\"info\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"            return \"info\";","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        } else if (userInput.equals(\"save\")) {","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"            return \"save\";","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"        String userInputStartWith \u003d getFirstWord(userInput);","lastModifiedDate":"2021-11-10"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"        switch (userInputStartWith) {","lastModifiedDate":"2021-11-10"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        case \"done\":","lastModifiedDate":"2021-11-10"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"            return \"done\";","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"        case \"todo\":","lastModifiedDate":"2021-11-10"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"            return \"todo\";","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"        case \"find\":","lastModifiedDate":"2021-11-10"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"            return \"find\";","lastModifiedDate":"2021-11-09"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"        case \"event\":","lastModifiedDate":"2021-11-10"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"            return \"event\";","lastModifiedDate":"2021-11-09"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"        case \"delete\":","lastModifiedDate":"2021-11-10"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"            return \"delete\";","lastModifiedDate":"2021-11-09"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"        case \"undone\":","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"            return \"undone\";","lastModifiedDate":"2021-11-14"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"        case \"deadline\":","lastModifiedDate":"2021-11-10"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"            return \"deadline\";","lastModifiedDate":"2021-11-09"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-10"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"            return \"invalid\";","lastModifiedDate":"2021-11-09"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"     * Convert date from String to LocalDate","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"     * @param firstWord String","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the first word of a line of string","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"    private String getFirstWord(String firstWord) {","lastModifiedDate":"2021-11-10"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"        int index \u003d firstWord.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-11-10"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-11-10"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"            return firstWord.substring(0, index).trim();","lastModifiedDate":"2021-11-10"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"        } else {","lastModifiedDate":"2021-11-10"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"            return \"invalid\";","lastModifiedDate":"2021-11-10"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"EndireKT":80}},{"path":"src/main/java/duke/command/CmdAddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.action.ParseDateTime;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-11-10"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * Command class that handle adding task","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * add 3 types of class: TODO, DEADLINE and EVENT.","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"public class CmdAddTask {","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     * Add a task of todo type into TaskList","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    public static void addTaskToDo(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDescription();","lastModifiedDate":"2021-11-09"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-10"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"        myList.addItemToDos(userInput.substring(5));","lastModifiedDate":"2021-11-10"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"        int lastTaskIndex \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d getTaskTypeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d getIsDoneInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        String taskDetail \u003d getTaskDetail(myList, lastTaskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        int numOfItem \u003d lastTaskIndex + 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"        Message.msgAssignTaskToDo(taskTypeInString, isDoneInString, taskDetail, numOfItem);","lastModifiedDate":"2021-11-10"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * Add a task of event type into TaskList","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    public static void addTaskEvent(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"        if (userInput.length() \u003c\u003d 6) {","lastModifiedDate":"2021-11-09"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDescription();","lastModifiedDate":"2021-11-09"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"        if (!userInput.contains(\"/at\")) {","lastModifiedDate":"2021-11-09"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDate();","lastModifiedDate":"2021-11-14"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"            String taskDetail \u003d userInput.substring(6, userInput.indexOf(\"/\"));","lastModifiedDate":"2021-11-09"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"            String dateAndTime \u003d userInput.substring(userInput.indexOf(\"/\") + 4);","lastModifiedDate":"2021-11-09"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"            String date;","lastModifiedDate":"2021-11-09"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"            String timeStart;","lastModifiedDate":"2021-11-09"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"            String timeEnd;","lastModifiedDate":"2021-11-09"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"            String[] split \u003d ParseDateTime.splitDateAndTime(dateAndTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"            date \u003d ParseDateTime.toExtractDateFromSplitDateAndTime(split);","lastModifiedDate":"2021-11-09"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"            if (ParseDateTime.isDateAndTime(dateAndTime) \u003d\u003d 1) {","lastModifiedDate":"2021-11-09"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"                toAddTaskEvent_localDate(myList, taskDetail, date);","lastModifiedDate":"2021-11-09"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"            } else if (ParseDateTime.isDateAndTime(dateAndTime) \u003d\u003d 2) {","lastModifiedDate":"2021-11-09"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"                timeStart \u003d ParseDateTime.toExtractTimeStartFromSplitDateAndTime(split);","lastModifiedDate":"2021-11-09"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"                toAddTaskEvent_localDate_localTime(myList, taskDetail, date, timeStart);","lastModifiedDate":"2021-11-09"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"            } else {","lastModifiedDate":"2021-11-09"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"                timeStart \u003d ParseDateTime.toExtractTimeStartFromSplitDateAndTime(split);","lastModifiedDate":"2021-11-09"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"                timeEnd \u003d ParseDateTime.toExtractTimeEndFromSplitDateAndTime(split);","lastModifiedDate":"2021-11-09"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"                toAddTaskEvent_localDate_localTime(myList, taskDetail, date, timeStart, timeEnd);","lastModifiedDate":"2021-11-09"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeStartEndFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     * Add a task of deadline type into TaskList","lastModifiedDate":"2021-11-12"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"    public static void addTaskDeadline(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"        if (userInput.length() \u003c\u003d 9) {","lastModifiedDate":"2021-11-09"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDescription();","lastModifiedDate":"2021-11-09"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"        if (!userInput.contains(\"/by\")) {","lastModifiedDate":"2021-11-09"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDate();","lastModifiedDate":"2021-11-14"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"            String taskDetail \u003d userInput.substring(9, userInput.indexOf(\"/\"));","lastModifiedDate":"2021-11-09"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"            String dateAndTime \u003d userInput.substring(userInput.indexOf(\"/\") + 4);","lastModifiedDate":"2021-11-09"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"            String date;","lastModifiedDate":"2021-11-09"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"            String time;","lastModifiedDate":"2021-11-09"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"            String[] split \u003d ParseDateTime.splitDateAndTime(dateAndTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"            date \u003d ParseDateTime.toExtractDateFromSplitDateAndTime(split);","lastModifiedDate":"2021-11-09"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"            if (ParseDateTime.isDateAndTime(dateAndTime) \u003d\u003d 1) {","lastModifiedDate":"2021-11-09"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"                toAddTaskDeadline_localDate(myList, taskDetail, date);","lastModifiedDate":"2021-11-09"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"            } else if (ParseDateTime.isDateAndTime(dateAndTime) \u003d\u003d 2) {","lastModifiedDate":"2021-11-09"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"                time \u003d ParseDateTime.toExtractTimeFromSplitDateAndTime(split);","lastModifiedDate":"2021-11-09"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"                toAddTaskDeadline_localDate_localTime(myList, taskDetail, date, time);","lastModifiedDate":"2021-11-09"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"            } else {","lastModifiedDate":"2021-11-09"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"                Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Event type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-09"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"     * @param date       String that represents the date of the event","lastModifiedDate":"2021-11-09"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"    private static void toAddTaskEvent_localDate(TaskList myList, String taskDetail, String date) {","lastModifiedDate":"2021-11-09"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"        assert taskDetail !\u003d null : \"taskDetail should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"        assert date !\u003d null : \"date should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":153,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":154,"author":{"gitId":"EndireKT"},"content":"        LocalDate taskDate \u003d ParseDateTime.toDate(date);","lastModifiedDate":"2021-11-09"},{"lineNumber":155,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":156,"author":{"gitId":"EndireKT"},"content":"        if (taskDate \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":157,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":158,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":159,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":160,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":161,"author":{"gitId":"EndireKT"},"content":"        myList.addItemEvent(taskDetail, taskDate);","lastModifiedDate":"2021-11-09"},{"lineNumber":162,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":163,"author":{"gitId":"EndireKT"},"content":"        int lastTaskIndex \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":164,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d getTaskTypeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":165,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d getIsDoneInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":166,"author":{"gitId":"EndireKT"},"content":"        String dateInString \u003d getTaskEventDateInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":167,"author":{"gitId":"EndireKT"},"content":"        int numOfItem \u003d lastTaskIndex + 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":168,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":169,"author":{"gitId":"EndireKT"},"content":"        Message.msgAssignTaskEventTaskDate(taskTypeInString, isDoneInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":170,"author":{"gitId":"EndireKT"},"content":"                taskDetail, dateInString, numOfItem);","lastModifiedDate":"2021-11-10"},{"lineNumber":171,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":172,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":173,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":174,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Event type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":175,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":176,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":177,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-09"},{"lineNumber":178,"author":{"gitId":"EndireKT"},"content":"     * @param date       String that represents the date of the event","lastModifiedDate":"2021-11-09"},{"lineNumber":179,"author":{"gitId":"EndireKT"},"content":"     * @param timeStart  String that represents the start time of the event","lastModifiedDate":"2021-11-09"},{"lineNumber":180,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":181,"author":{"gitId":"EndireKT"},"content":"    private static void toAddTaskEvent_localDate_localTime(TaskList myList, String taskDetail,","lastModifiedDate":"2021-11-09"},{"lineNumber":182,"author":{"gitId":"EndireKT"},"content":"                                                           String date, String timeStart) {","lastModifiedDate":"2021-11-09"},{"lineNumber":183,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":184,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":185,"author":{"gitId":"EndireKT"},"content":"        assert taskDetail !\u003d null : \"taskDetail should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":186,"author":{"gitId":"EndireKT"},"content":"        assert date !\u003d null : \"date should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":187,"author":{"gitId":"EndireKT"},"content":"        assert timeStart !\u003d null : \"timeStart should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":188,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":189,"author":{"gitId":"EndireKT"},"content":"        LocalDate taskDate \u003d ParseDateTime.toDate(date);","lastModifiedDate":"2021-11-09"},{"lineNumber":190,"author":{"gitId":"EndireKT"},"content":"        LocalTime taskTimeStart \u003d ParseDateTime.toTime(timeStart);","lastModifiedDate":"2021-11-09"},{"lineNumber":191,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":192,"author":{"gitId":"EndireKT"},"content":"        if (taskDate \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":193,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDate();","lastModifiedDate":"2021-11-14"},{"lineNumber":194,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":195,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":196,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":197,"author":{"gitId":"EndireKT"},"content":"        if (taskTimeStart \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":198,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":199,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":200,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":201,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":202,"author":{"gitId":"EndireKT"},"content":"        myList.addItemEvent(taskDetail, taskDate, taskTimeStart);","lastModifiedDate":"2021-11-09"},{"lineNumber":203,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":204,"author":{"gitId":"EndireKT"},"content":"        int lastTaskIndex \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":205,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d getTaskTypeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":206,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d getIsDoneInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":207,"author":{"gitId":"EndireKT"},"content":"        String dateInString \u003d getTaskEventDateInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":208,"author":{"gitId":"EndireKT"},"content":"        int numOfItem \u003d lastTaskIndex + 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":209,"author":{"gitId":"EndireKT"},"content":"        String getTimeStartInString \u003d getTaskEventTimeStartInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":210,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":211,"author":{"gitId":"EndireKT"},"content":"        Message.msgAssignTaskEventTaskDateTaskTimeStart(taskTypeInString, isDoneInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":212,"author":{"gitId":"EndireKT"},"content":"                taskDetail, dateInString, getTimeStartInString, numOfItem);","lastModifiedDate":"2021-11-10"},{"lineNumber":213,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":214,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":215,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":216,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Event type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":217,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":218,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":219,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-09"},{"lineNumber":220,"author":{"gitId":"EndireKT"},"content":"     * @param date       String that represents the date of the event","lastModifiedDate":"2021-11-09"},{"lineNumber":221,"author":{"gitId":"EndireKT"},"content":"     * @param timeStart  String that represents the start time of the event","lastModifiedDate":"2021-11-09"},{"lineNumber":222,"author":{"gitId":"EndireKT"},"content":"     * @param timeEnd    String that represents the end time of the event","lastModifiedDate":"2021-11-09"},{"lineNumber":223,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":224,"author":{"gitId":"EndireKT"},"content":"    private static void toAddTaskEvent_localDate_localTime(TaskList myList, String taskDetail,","lastModifiedDate":"2021-11-09"},{"lineNumber":225,"author":{"gitId":"EndireKT"},"content":"                                                           String date, String timeStart, String timeEnd) {","lastModifiedDate":"2021-11-09"},{"lineNumber":226,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":227,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":228,"author":{"gitId":"EndireKT"},"content":"        assert taskDetail !\u003d null : \"taskDetail should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":229,"author":{"gitId":"EndireKT"},"content":"        assert date !\u003d null : \"date should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":230,"author":{"gitId":"EndireKT"},"content":"        assert timeStart !\u003d null : \"timeStart should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":231,"author":{"gitId":"EndireKT"},"content":"        assert timeEnd !\u003d null : \"timeEnd should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":232,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":233,"author":{"gitId":"EndireKT"},"content":"        LocalDate taskDate \u003d ParseDateTime.toDate(date);","lastModifiedDate":"2021-11-09"},{"lineNumber":234,"author":{"gitId":"EndireKT"},"content":"        LocalTime taskTimeStart \u003d ParseDateTime.toTime(timeStart);","lastModifiedDate":"2021-11-09"},{"lineNumber":235,"author":{"gitId":"EndireKT"},"content":"        LocalTime taskTimeEnd \u003d ParseDateTime.toTime(timeEnd);","lastModifiedDate":"2021-11-09"},{"lineNumber":236,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":237,"author":{"gitId":"EndireKT"},"content":"        if (taskDate \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":238,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDate();","lastModifiedDate":"2021-11-14"},{"lineNumber":239,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":240,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":241,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":242,"author":{"gitId":"EndireKT"},"content":"        if (taskTimeStart \u003d\u003d null || taskTimeEnd \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":243,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":244,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":245,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":246,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":247,"author":{"gitId":"EndireKT"},"content":"        if (taskTimeStart.isAfter(taskTimeEnd)) {","lastModifiedDate":"2021-11-09"},{"lineNumber":248,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputTimeStartLaterThanTimeEnd();","lastModifiedDate":"2021-11-09"},{"lineNumber":249,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":250,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":251,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":252,"author":{"gitId":"EndireKT"},"content":"        myList.addItemEvent(taskDetail, taskDate, taskTimeStart, taskTimeEnd);","lastModifiedDate":"2021-11-09"},{"lineNumber":253,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":254,"author":{"gitId":"EndireKT"},"content":"        int lastTaskIndex \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":255,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d getTaskTypeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":256,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d getIsDoneInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":257,"author":{"gitId":"EndireKT"},"content":"        String dateInString \u003d getTaskEventDateInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":258,"author":{"gitId":"EndireKT"},"content":"        String getTimeStartInString \u003d getTaskEventTimeStartInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":259,"author":{"gitId":"EndireKT"},"content":"        String getTimeEndInString \u003d getTaskEventTimeEndInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":260,"author":{"gitId":"EndireKT"},"content":"        int numOfItem \u003d lastTaskIndex + 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":261,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":262,"author":{"gitId":"EndireKT"},"content":"        Message.msgAssignEventTaskDateTimeStartEnd(taskTypeInString, isDoneInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":263,"author":{"gitId":"EndireKT"},"content":"                taskDetail, dateInString, getTimeStartInString, getTimeEndInString, numOfItem);","lastModifiedDate":"2021-11-10"},{"lineNumber":264,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":265,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":266,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":267,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Deadline type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":268,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":269,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":270,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-09"},{"lineNumber":271,"author":{"gitId":"EndireKT"},"content":"     * @param date       String that represents the date of the deadline","lastModifiedDate":"2021-11-09"},{"lineNumber":272,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":273,"author":{"gitId":"EndireKT"},"content":"    private static void toAddTaskDeadline_localDate(TaskList myList, String taskDetail, String date) {","lastModifiedDate":"2021-11-09"},{"lineNumber":274,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":275,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":276,"author":{"gitId":"EndireKT"},"content":"        assert taskDetail !\u003d null : \"taskDetail should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":277,"author":{"gitId":"EndireKT"},"content":"        assert date !\u003d null : \"date should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":278,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":279,"author":{"gitId":"EndireKT"},"content":"        LocalDate taskDate \u003d ParseDateTime.toDate(date);","lastModifiedDate":"2021-11-09"},{"lineNumber":280,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":281,"author":{"gitId":"EndireKT"},"content":"        if (taskDate \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":282,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":283,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":284,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":285,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":286,"author":{"gitId":"EndireKT"},"content":"        myList.addItemDeadline(taskDetail, taskDate);","lastModifiedDate":"2021-11-09"},{"lineNumber":287,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":288,"author":{"gitId":"EndireKT"},"content":"        int lastTaskIndex \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":289,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d getTaskTypeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":290,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d getIsDoneInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":291,"author":{"gitId":"EndireKT"},"content":"        String dateInString \u003d getTaskDeadlineDateInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":292,"author":{"gitId":"EndireKT"},"content":"        int numOfItem \u003d lastTaskIndex + 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":293,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":294,"author":{"gitId":"EndireKT"},"content":"        Message.msgAssignTaskDeadlineTaskDate(taskTypeInString, isDoneInString, taskDetail, dateInString, numOfItem);","lastModifiedDate":"2021-11-10"},{"lineNumber":295,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":296,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":297,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":298,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Event type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":299,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":300,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":301,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-09"},{"lineNumber":302,"author":{"gitId":"EndireKT"},"content":"     * @param date       String that represents the date of the deadline","lastModifiedDate":"2021-11-09"},{"lineNumber":303,"author":{"gitId":"EndireKT"},"content":"     * @param time       String that represents the time of the deadline","lastModifiedDate":"2021-11-09"},{"lineNumber":304,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":305,"author":{"gitId":"EndireKT"},"content":"    private static void toAddTaskDeadline_localDate_localTime(TaskList myList, String taskDetail,","lastModifiedDate":"2021-11-09"},{"lineNumber":306,"author":{"gitId":"EndireKT"},"content":"                                                              String date, String time) {","lastModifiedDate":"2021-11-09"},{"lineNumber":307,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":308,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":309,"author":{"gitId":"EndireKT"},"content":"        assert taskDetail !\u003d null : \"taskDetail should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":310,"author":{"gitId":"EndireKT"},"content":"        assert date !\u003d null : \"date should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":311,"author":{"gitId":"EndireKT"},"content":"        assert time !\u003d null : \"time should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":312,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":313,"author":{"gitId":"EndireKT"},"content":"        LocalDate taskDate \u003d ParseDateTime.toDate(date);","lastModifiedDate":"2021-11-09"},{"lineNumber":314,"author":{"gitId":"EndireKT"},"content":"        LocalTime taskTime \u003d ParseDateTime.toTime(time);","lastModifiedDate":"2021-11-09"},{"lineNumber":315,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":316,"author":{"gitId":"EndireKT"},"content":"        if (taskDate \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":317,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputMissingDate();","lastModifiedDate":"2021-11-14"},{"lineNumber":318,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":319,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":320,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":321,"author":{"gitId":"EndireKT"},"content":"        if (taskTime \u003d\u003d null) {","lastModifiedDate":"2021-11-09"},{"lineNumber":322,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidInputWrongDateTimeFormat();","lastModifiedDate":"2021-11-09"},{"lineNumber":323,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":324,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":325,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":326,"author":{"gitId":"EndireKT"},"content":"        myList.addItemDeadline(taskDetail, taskDate, taskTime);","lastModifiedDate":"2021-11-09"},{"lineNumber":327,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":328,"author":{"gitId":"EndireKT"},"content":"        int lastTaskIndex \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":329,"author":{"gitId":"EndireKT"},"content":"        String taskTypeInString \u003d getTaskTypeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":330,"author":{"gitId":"EndireKT"},"content":"        String isDoneInString \u003d getIsDoneInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":331,"author":{"gitId":"EndireKT"},"content":"        String dateInString \u003d getTaskDeadlineDateInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":332,"author":{"gitId":"EndireKT"},"content":"        String timeInString \u003d getTaskDeadlineTimeInString(myList, lastTaskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":333,"author":{"gitId":"EndireKT"},"content":"        int numOfItem \u003d lastTaskIndex + 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":334,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":335,"author":{"gitId":"EndireKT"},"content":"        Message.msgAssignTaskDeadlineTaskDateTaskTime(taskTypeInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":336,"author":{"gitId":"EndireKT"},"content":"                isDoneInString, taskDetail, dateInString, timeInString, numOfItem);","lastModifiedDate":"2021-11-12"},{"lineNumber":337,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":338,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":339,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":340,"author":{"gitId":"EndireKT"},"content":"     * Get TaskType of a task using myList and its task index.","lastModifiedDate":"2021-11-12"},{"lineNumber":341,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":342,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":343,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":344,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of TaskType of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":345,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":346,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskTypeInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":347,"author":{"gitId":"EndireKT"},"content":"        TaskType taskType \u003d myList.getTaskType(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":348,"author":{"gitId":"EndireKT"},"content":"        return TaskType.taskTypeToString(taskType);","lastModifiedDate":"2021-11-10"},{"lineNumber":349,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":350,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":351,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":352,"author":{"gitId":"EndireKT"},"content":"     * Get isDone status of a task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":353,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":354,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":355,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":356,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of isDone of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":357,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":358,"author":{"gitId":"EndireKT"},"content":"    private static String getIsDoneInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":359,"author":{"gitId":"EndireKT"},"content":"        boolean isDone \u003d myList.getTaskDoneStatus(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":360,"author":{"gitId":"EndireKT"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-11-10"},{"lineNumber":361,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":362,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":363,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":364,"author":{"gitId":"EndireKT"},"content":"     * Get taskDetail of a task","lastModifiedDate":"2021-11-12"},{"lineNumber":365,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":366,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":367,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":368,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of taskDetail of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":369,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":370,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskDetail(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-10"},{"lineNumber":371,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskDetail(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":372,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":373,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":374,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":375,"author":{"gitId":"EndireKT"},"content":"     * Get date of an EVENT task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":376,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":377,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":378,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":379,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of date of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":380,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":381,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskEventDateInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":382,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskEventTaskDateInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":383,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":384,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":385,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":386,"author":{"gitId":"EndireKT"},"content":"     * Get start time of an EVENT task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":387,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":388,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":389,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":390,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of start time of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":391,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":392,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskEventTimeStartInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":393,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskEventTaskTimeStartInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":394,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":395,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":396,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":397,"author":{"gitId":"EndireKT"},"content":"     * Get end time of an EVENT task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":398,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":399,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":400,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":401,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of end time of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":402,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":403,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskEventTimeEndInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":404,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskEventTaskTimeEndInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":405,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":406,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":407,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":408,"author":{"gitId":"EndireKT"},"content":"     * Get date of an DEADLINE task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":409,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":410,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":411,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":412,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of date of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":413,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":414,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskDeadlineDateInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":415,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskDeadLineTaskDateInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":416,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":417,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":418,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":419,"author":{"gitId":"EndireKT"},"content":"     * Get start time of an DEADLINE task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":420,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":421,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":422,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":423,"author":{"gitId":"EndireKT"},"content":"     * @return String representation of start time of a task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":424,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":425,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskDeadlineTimeInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":426,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskDeadLineTaskTimeInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":427,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":428,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":428}},{"path":"src/main/java/duke/command/CmdDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * Command class that delete a task from a tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public class CmdDelete {","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"     * Execute the delete task command","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     * Remove a task from a tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    public static void run(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"        if (myList.getNumOfItem() \u003d\u003d 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskListIsEmpty();","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"            int numOfTaskAfterDelete \u003d myList.getNumOfItem() - 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"            if (taskIndex \u003e\u003d myList.getNumOfItem() || taskIndex \u003c 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"                Message.msgInvalidTaskNumber();","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"                return;","lastModifiedDate":"2021-11-11"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"            Message.msgRemoveItem(myList, taskIndex, numOfTaskAfterDelete);","lastModifiedDate":"2021-11-10"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"            myList.removeItem(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidTaskNumber();","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":48}},{"path":"src/main/java/duke/command/CmdFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"import duke.ui.MsgTaskDetail;","lastModifiedDate":"2021-11-10"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * Command class that find a task from a tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"public class CmdFind {","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     * Execute the find task command","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"     * Find a task based on the keyword input by the user","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    public static void run(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        if (myList.getNumOfItem() \u003d\u003d 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskListIsEmpty();","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        if (userInput.length() \u003c\u003d 5) {","lastModifiedDate":"2021-11-09"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidFindTerm();","lastModifiedDate":"2021-11-09"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"        String searchTerm \u003d userInput.substring(5);","lastModifiedDate":"2021-11-09"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        ArrayList\u003cInteger\u003e taskNumberContainingSearchTerm \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        for (int i \u003d 0; i \u003c myList.getNumOfItem(); i++) {","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"            String taskDetail \u003d myList.getTaskDetail(i);","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"            if (hasStringContain(taskDetail, searchTerm)) {","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"                taskNumberContainingSearchTerm.add(i);","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"        if (taskNumberContainingSearchTerm.isEmpty()) {","lastModifiedDate":"2021-11-09"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidFindTerm();","lastModifiedDate":"2021-11-09"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-09"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"        Message.msgTaskFoundOpeningMsg();","lastModifiedDate":"2021-11-10"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"        showTaskFound(myList, taskNumberContainingSearchTerm);","lastModifiedDate":"2021-11-10"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"     * Check if the searchString can be found inside the sourceString","lastModifiedDate":"2021-11-12"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"     * @param sourceString String that represents the source","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"     * @param searchString String that represents the term used to search in the sourceString","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"     * @return boolean True if the term is found; false otherwise","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"    private static boolean hasStringContain(String sourceString, String searchString) {","lastModifiedDate":"2021-11-09"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"        String pattern \u003d \"\\\\b\" + searchString + \"\\\\b\";","lastModifiedDate":"2021-11-09"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"        Pattern p \u003d Pattern.compile(pattern);","lastModifiedDate":"2021-11-09"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"        Matcher m \u003d p.matcher(sourceString);","lastModifiedDate":"2021-11-09"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"        return m.find();","lastModifiedDate":"2021-11-09"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-10"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"     * Display message to show a list of task found based on the term","lastModifiedDate":"2021-11-10"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-10"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"    private static void showTaskFound(TaskList myList, ArrayList\u003cInteger\u003e taskNumberContainingSearchTerm) {","lastModifiedDate":"2021-11-10"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"        assert taskNumberContainingSearchTerm !\u003d null : \"taskNumberContainingSearchTerm should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-11-10"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"        for (int i \u003d 0; i \u003c taskNumberContainingSearchTerm.size(); i++) {","lastModifiedDate":"2021-11-10"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"            int taskNumber \u003d taskNumberContainingSearchTerm.get(i);","lastModifiedDate":"2021-11-10"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"            Message.msgBlankBeforeTaskDetail();","lastModifiedDate":"2021-11-10"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"            Message.msgShowBracketWithIndex(index);","lastModifiedDate":"2021-11-10"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"            new MsgTaskDetail(myList, taskNumber).showTaskDetail();","lastModifiedDate":"2021-11-10"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"            index++;","lastModifiedDate":"2021-11-10"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"        Message.msgDashLines();","lastModifiedDate":"2021-11-14"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":93}},{"path":"src/main/java/duke/command/CmdList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.ui.MsgTaskDetail;","lastModifiedDate":"2021-11-10"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * Command class that list all the task in the tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"public class CmdList {","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     * Show full list of tasks","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * @param myList TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    public static void run(TaskList myList) {","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        if (myList.getNumOfItem() \u003d\u003d 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskListIsEmpty();","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"        for (int i \u003d 0; i \u003c myList.getNumOfItem(); i++) {","lastModifiedDate":"2021-11-10"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"            Message.msgShowBracketWithIndex(i + 1);","lastModifiedDate":"2021-11-10"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"            new MsgTaskDetail(myList, i).showTaskDetail();","lastModifiedDate":"2021-11-10"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        Message.msgDashLines();","lastModifiedDate":"2021-11-10"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":35}},{"path":"src/main/java/duke/command/CmdMarkTaskDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * Command class that mark a task as done","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public class CmdMarkTaskDone {","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"     * Execute the marking command to mark a task as done","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    public static void run(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"        if (myList.getNumOfItem() \u003d\u003d 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskListIsEmpty();","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            myList.setTaskDone(taskNumber - 1);","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"            Message.msgMarkDone(myList, taskNumber - 1);","lastModifiedDate":"2021-11-09"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidTaskNumber();","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":41}},{"path":"src/main/java/duke/command/CmdMarkTaskUnDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * Command class that mark a task as undone","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public class CmdMarkTaskUnDone {","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"     * Execute the marking command to mark a task as done","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    public static void run(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"        if (myList.getNumOfItem() \u003d\u003d 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskListIsEmpty();","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"            myList.setTaskUnDone(taskNumber - 1);","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            Message.msgMarkUnDone(myList, taskNumber - 1);","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidTaskNumber();","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"EndireKT":40}},{"path":"src/main/java/duke/command/CmdPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * Command class that find a task from a tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"public class CmdPriority {","lastModifiedDate":"2021-11-09"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"     * Ask user which task to set priority and change the priority accordingly","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     * -- Ask user which task to be changed","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     * -- Ask user what is the new priority","lastModifiedDate":"2021-11-09"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"     * -- Update the task with new priority","lastModifiedDate":"2021-11-09"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"     * @param myList TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"     * @param scanner Scanner that contains read the user input","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    public static void run(TaskList myList, Scanner scanner) {","lastModifiedDate":"2021-11-10"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        assert scanner !\u003d null : \"scanner should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        if (myList.getNumOfItem() \u003c 1) {","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskListIsEmpty();","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"            return;","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        boolean isTaskNumberValid \u003d false;","lastModifiedDate":"2021-11-09"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"        String userInputTaskNumber \u003d \"\";","lastModifiedDate":"2021-11-09"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"        boolean isPriorityNumberValid \u003d false;","lastModifiedDate":"2021-11-09"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"        String userInputNewPriorityNumber \u003d \"\";","lastModifiedDate":"2021-11-09"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        while (isTaskNumberValid \u003d\u003d false) {","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"            Message.msgAskUserSetTaskPriority();","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"            Message.msgArrowHead();","lastModifiedDate":"2021-11-10"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"            userInputTaskNumber \u003d scanner.nextLine();","lastModifiedDate":"2021-11-10"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"            isTaskNumberValid \u003d hasValidTaskNumber(myList, userInputTaskNumber);","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"        int taskNumber \u003d Integer.parseInt(userInputTaskNumber);","lastModifiedDate":"2021-11-09"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"        Message.msgDashLines();","lastModifiedDate":"2021-11-09"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"        while (isPriorityNumberValid \u003d\u003d false) {","lastModifiedDate":"2021-11-09"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"            Message.msgAskUserWhatPriority();","lastModifiedDate":"2021-11-09"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"            Message.msgArrowHead();","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"            userInputNewPriorityNumber \u003d scanner.nextLine();","lastModifiedDate":"2021-11-10"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"            isPriorityNumberValid \u003d hasValidPriorityNumber(userInputNewPriorityNumber);","lastModifiedDate":"2021-11-09"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        Message.msgDashLines();","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        int newPriorityInteger \u003d Integer.parseInt(userInputNewPriorityNumber);","lastModifiedDate":"2021-11-09"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriority \u003d TaskPriority.convertIntToPriority(newPriorityInteger);","lastModifiedDate":"2021-11-09"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"        toUpdatePriority(myList, taskNumber - 1, taskPriority);","lastModifiedDate":"2021-11-09"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"     * Check the validity of task number in String","lastModifiedDate":"2021-11-09"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     * @param myList          TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     * @param userInputString String","lastModifiedDate":"2021-11-09"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     * @return boolean True if userInput is a valid task number; False otherwise","lastModifiedDate":"2021-11-09"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"    private static boolean hasValidTaskNumber(TaskList myList, String userInputString) {","lastModifiedDate":"2021-11-09"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"        assert userInputString !\u003d null : \"userInputString should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"            int userInputInt \u003d Integer.parseInt(userInputString);","lastModifiedDate":"2021-11-09"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"            int numOfItem \u003d myList.getNumOfItem();","lastModifiedDate":"2021-11-09"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"            if (userInputInt \u003c\u003d numOfItem \u0026\u0026 userInputInt \u003e 0) {","lastModifiedDate":"2021-11-14"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"                return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidTaskNumber();","lastModifiedDate":"2021-11-09"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"            return false;","lastModifiedDate":"2021-11-09"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"        Message.msgInvalidTaskNumber();","lastModifiedDate":"2021-11-09"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"        return false;","lastModifiedDate":"2021-11-09"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     * Check the validity of user input for priority number","lastModifiedDate":"2021-11-12"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     * Expected input should be 1 to 3","lastModifiedDate":"2021-11-12"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     * @param userInputPriorityS","lastModifiedDate":"2021-11-12"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"     * @return boolean True if userInput is \"1\" to \"3\"; False otherwise","lastModifiedDate":"2021-11-12"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"    private static boolean hasValidPriorityNumber(String userInputPriorityS) {","lastModifiedDate":"2021-11-09"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        assert userInputPriorityS !\u003d null : \"userInputPriorityS should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"            TaskPriority taskPriority \u003d TaskPriority.convertStringToPriority(userInputPriorityS);","lastModifiedDate":"2021-11-09"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"            if (taskPriority \u003d\u003d TaskPriority.HIGH) {","lastModifiedDate":"2021-11-09"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"                return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"            } else if (taskPriority \u003d\u003d TaskPriority.MEDIUM) {","lastModifiedDate":"2021-11-09"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"                return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"            } else if (taskPriority \u003d\u003d TaskPriority.LOW) {","lastModifiedDate":"2021-11-09"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"                return true;","lastModifiedDate":"2021-11-09"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-09"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"            Message.msgInvalidPriority();","lastModifiedDate":"2021-11-09"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"            return false;","lastModifiedDate":"2021-11-09"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"        Message.msgInvalidPriority();","lastModifiedDate":"2021-11-09"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"        return false;","lastModifiedDate":"2021-11-09"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"     * Update the priority of the task based on the taskPriority","lastModifiedDate":"2021-11-14"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"     * @param myList       TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex    int that indicates the task number","lastModifiedDate":"2021-11-10"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"     * @param taskPriority TaskPriority(new one) that want to be set","lastModifiedDate":"2021-11-09"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"    private static void toUpdatePriority(TaskList myList, int taskIndex, TaskPriority taskPriority) {","lastModifiedDate":"2021-11-10"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"        assert taskIndex \u003e\u003d 0 : \"taskIndex should be equal or more than 0\";","lastModifiedDate":"2021-11-12"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"        assert taskPriority !\u003d null : \"taskPriority should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"        myList.setTaskPriority(taskIndex, taskPriority);","lastModifiedDate":"2021-11-10"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"        String taskPriorityInString \u003d getTaskPriorityInString(myList, taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"        Message.msgSetPriority(taskIndex + 1, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"     * Get priority of the task in String","lastModifiedDate":"2021-11-12"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task in tasklist","lastModifiedDate":"2021-11-12"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the priority of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskPriorityInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"        assert myList !\u003d null : \"mylist should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"        assert taskIndex \u003e\u003d 0 : \"taskIndex should be equal or more than 0\";","lastModifiedDate":"2021-11-12"},{"lineNumber":153,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":154,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriority \u003d myList.getTaskPriority(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":155,"author":{"gitId":"EndireKT"},"content":"        return TaskPriority.convertPriorityToString(taskPriority);","lastModifiedDate":"2021-11-10"},{"lineNumber":156,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":157,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":157}},{"path":"src/main/java/duke/command/CmdSave.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.storage.FileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2021-11-11"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * Command class that save all the task from the current taskList to progress.txt","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"public class CmdSave {","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    private static FileAccess fileAccess;","lastModifiedDate":"2021-11-11"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    private static TaskList myList;","lastModifiedDate":"2021-11-11"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    private static StringBuilder sb;","lastModifiedDate":"2021-11-11"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    private static String taskTypeInString;","lastModifiedDate":"2021-11-11"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    private static String isDoneInString;","lastModifiedDate":"2021-11-11"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    private static String taskDetail;","lastModifiedDate":"2021-11-11"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    private static String taskPriorityInString;","lastModifiedDate":"2021-11-11"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    private static String taskDate;","lastModifiedDate":"2021-11-11"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    private static String timeStart;","lastModifiedDate":"2021-11-11"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    private static String timeEnd;","lastModifiedDate":"2021-11-11"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    public CmdSave(TaskList myList, FileAccess fileAccess) {","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        this.fileAccess \u003d fileAccess;","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     * Execute the save","lastModifiedDate":"2021-11-12"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"    public static void run() {","lastModifiedDate":"2021-11-11"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"        String listOfTaskString \u003d generateListOfTaskInString();","lastModifiedDate":"2021-11-11"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        fileAccess.saveProgressIntoFile(listOfTaskString);","lastModifiedDate":"2021-11-11"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"     * Read a list of task and convert it into string","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * calls the following methods to generate the string","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * setStringToNull();","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     * appendBasic(taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"     * appendAdvance(taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"     * appendEnd();","lastModifiedDate":"2021-11-12"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the string to be saved in text","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    private static String generateListOfTaskInString() {","lastModifiedDate":"2021-11-11"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        for (int taskIndex \u003d 0; taskIndex \u003c myList.getNumOfItem(); taskIndex++) {","lastModifiedDate":"2021-11-11"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"            setStringToNull();","lastModifiedDate":"2021-11-12"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"            appendBasic(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"            appendAdvance(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"            appendEnd();","lastModifiedDate":"2021-11-11"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"        return sb.toString();","lastModifiedDate":"2021-11-09"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     * set the private variables to \"null\"","lastModifiedDate":"2021-11-12"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     * taskTypeInString \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     * isDoneInString \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     * taskDetail \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"     * taskPriorityInString \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"     * taskDate \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"     * timeStart \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"     * timeEnd \u003d \"null\";","lastModifiedDate":"2021-11-12"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"     * @return StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"    private static void setStringToNull() {","lastModifiedDate":"2021-11-12"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"        taskTypeInString \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"        isDoneInString \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"        taskDetail \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"        taskPriorityInString \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"        taskDate \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"        timeStart \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"        timeEnd \u003d \"null\";","lastModifiedDate":"2021-11-11"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     * append basic variables to the string builder","lastModifiedDate":"2021-11-12"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"     * taskIndex","lastModifiedDate":"2021-11-12"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     * taskType","lastModifiedDate":"2021-11-12"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"     * isDone","lastModifiedDate":"2021-11-12"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     * taskDetail","lastModifiedDate":"2021-11-12"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     * taskPriority","lastModifiedDate":"2021-11-12"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"     * @return StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"    private static StringBuilder appendBasic(int taskIndex) {","lastModifiedDate":"2021-11-11"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        taskTypeInString \u003d TaskType.taskTypeToString(myList.getTaskType(taskIndex));","lastModifiedDate":"2021-11-11"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"        boolean isDone \u003d myList.getTaskDoneStatus(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"        isDoneInString \u003d (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-11-11"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"        taskDetail \u003d myList.getTaskDetail(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriority \u003d myList.getTaskPriority(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"        taskPriorityInString \u003d taskPriority.toStringInNumber();","lastModifiedDate":"2021-11-11"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"        assert taskTypeInString !\u003d null : \"taskTypeInString should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"        assert taskDetail !\u003d null : \"taskDetail should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"        assert taskPriority !\u003d null : \"taskPriority should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"        sb.append(taskIndex).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"        sb.append(taskTypeInString).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"        sb.append(isDoneInString).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"        sb.append(taskDetail).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"        sb.append(taskPriorityInString).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"        return sb;","lastModifiedDate":"2021-11-11"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"     * append advance variables to the string builder based on the variable types","lastModifiedDate":"2021-11-12"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"     * date`","lastModifiedDate":"2021-11-12"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"     * start time","lastModifiedDate":"2021-11-12"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"     * end time","lastModifiedDate":"2021-11-12"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"     * depending on the taskType, different String is appended","lastModifiedDate":"2021-11-12"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"     * @return StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"    private static StringBuilder appendAdvance(int taskIndex) {","lastModifiedDate":"2021-11-11"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"        switch (taskTypeInString) {","lastModifiedDate":"2021-11-11"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"        case \"D\":","lastModifiedDate":"2021-11-11"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"            appendDeadline(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"        case \"E\":","lastModifiedDate":"2021-11-11"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"            appendEvent(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-11"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"        return sb;","lastModifiedDate":"2021-11-11"},{"lineNumber":153,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":154,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":155,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":156,"author":{"gitId":"EndireKT"},"content":"     * append date and start time to DEADLINE type task","lastModifiedDate":"2021-11-12"},{"lineNumber":157,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":158,"author":{"gitId":"EndireKT"},"content":"     * @return StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":159,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":160,"author":{"gitId":"EndireKT"},"content":"    private static StringBuilder appendDeadline(int taskIndex) {","lastModifiedDate":"2021-11-11"},{"lineNumber":161,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":162,"author":{"gitId":"EndireKT"},"content":"        taskDate \u003d myList.getTaskDeadLineTaskDateInString(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":163,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":164,"author":{"gitId":"EndireKT"},"content":"        timeStart \u003d myList.getTaskDeadLineTaskTimeInString(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":165,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":166,"author":{"gitId":"EndireKT"},"content":"        sb.append(taskDate).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":167,"author":{"gitId":"EndireKT"},"content":"        sb.append(timeStart).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":168,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":169,"author":{"gitId":"EndireKT"},"content":"        return sb;","lastModifiedDate":"2021-11-11"},{"lineNumber":170,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":171,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":172,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":173,"author":{"gitId":"EndireKT"},"content":"     * append date, start time, and end time to EVENT type task","lastModifiedDate":"2021-11-12"},{"lineNumber":174,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":175,"author":{"gitId":"EndireKT"},"content":"     * @return StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":176,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":177,"author":{"gitId":"EndireKT"},"content":"    private static StringBuilder appendEvent(int taskIndex) {","lastModifiedDate":"2021-11-11"},{"lineNumber":178,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":179,"author":{"gitId":"EndireKT"},"content":"        taskDate \u003d myList.getTaskEventTaskDateInString(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":180,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":181,"author":{"gitId":"EndireKT"},"content":"        timeStart \u003d myList.getTaskEventTaskTimeStartInString(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":182,"author":{"gitId":"EndireKT"},"content":"        timeEnd \u003d myList.getTaskEventTaskTimeEndInString(taskIndex);","lastModifiedDate":"2021-11-11"},{"lineNumber":183,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":184,"author":{"gitId":"EndireKT"},"content":"        sb.append(taskDate).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":185,"author":{"gitId":"EndireKT"},"content":"        sb.append(timeStart).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":186,"author":{"gitId":"EndireKT"},"content":"        sb.append(timeEnd).append(\"|\");","lastModifiedDate":"2021-11-11"},{"lineNumber":187,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":188,"author":{"gitId":"EndireKT"},"content":"        return sb;","lastModifiedDate":"2021-11-11"},{"lineNumber":189,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":190,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":191,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":192,"author":{"gitId":"EndireKT"},"content":"     * append ;\\n to the StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":193,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":194,"author":{"gitId":"EndireKT"},"content":"     * @return StringBuilder","lastModifiedDate":"2021-11-12"},{"lineNumber":195,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":196,"author":{"gitId":"EndireKT"},"content":"    private static StringBuilder appendEnd() {","lastModifiedDate":"2021-11-11"},{"lineNumber":197,"author":{"gitId":"EndireKT"},"content":"        sb.append(\";\\n\");","lastModifiedDate":"2021-11-11"},{"lineNumber":198,"author":{"gitId":"EndireKT"},"content":"        return sb;","lastModifiedDate":"2021-11-11"},{"lineNumber":199,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":200,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":200}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.command;","lastModifiedDate":"2021-11-09"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.action.Parser;","lastModifiedDate":"2021-11-09"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import duke.storage.FileAccess;","lastModifiedDate":"2021-11-09"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-09"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-09"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * Core Command class","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"public class Command {","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    private static Parser parser;","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    public Command(Parser parser) {","lastModifiedDate":"2021-11-09"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-11-09"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    // Basic processCommand Method \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"     * Show info of all the command Duke can accept","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    public void showInfo() {","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        Message.msgShowDukeCommandList();","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"     * Show full list of tasks","lastModifiedDate":"2021-11-09"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"     * @param myList TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"    public void showFullList(TaskList myList) {","lastModifiedDate":"2021-11-09"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        CmdList.run(myList);","lastModifiedDate":"2021-11-09"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"     * Ask user which task to set priority and change the priority accordingly","lastModifiedDate":"2021-11-09"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     * -- Ask user which task to be changed","lastModifiedDate":"2021-11-09"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * -- Ask user what is the new priority","lastModifiedDate":"2021-11-09"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * -- Update the task with new priority","lastModifiedDate":"2021-11-09"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"     * @param myList  TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"     * @param scanner Scanner for user input","lastModifiedDate":"2021-11-10"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    public void setPriorityTask(TaskList myList, Scanner scanner) {","lastModifiedDate":"2021-11-10"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"        CmdPriority.run(myList, scanner);","lastModifiedDate":"2021-11-10"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"     * Mark a task as done","lastModifiedDate":"2021-11-09"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String that the user type","lastModifiedDate":"2021-11-09"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"    public void markTaskDone(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"        CmdMarkTaskDone.run(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     * Mark a task as undone","lastModifiedDate":"2021-11-14"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-14"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String that the user type","lastModifiedDate":"2021-11-14"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"    public void markTaskUnDone(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        CmdMarkTaskUnDone.run(myList, userInput);","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     * Add a task of ToDo type into the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String that the user type","lastModifiedDate":"2021-11-09"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"    public void addTaskToDo(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"        CmdAddTask.addTaskToDo(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"     * Save the current task list and output a text file","lastModifiedDate":"2021-11-09"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     * @param myList TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"    public void saveTask(TaskList myList, FileAccess fileAccess) {","lastModifiedDate":"2021-11-09"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"        new CmdSave(myList, fileAccess).run();","lastModifiedDate":"2021-11-11"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     * Find the Task requested","lastModifiedDate":"2021-11-09"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"     * @param myList TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"    public void findTask(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        CmdFind.run(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Event type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-09"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"     * Identify the task date and time that the user input","lastModifiedDate":"2021-11-09"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"     * Calls for respective AddTaskEvent_XXX to create a task object in TaskList afterwards","lastModifiedDate":"2021-11-09"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String that the user type","lastModifiedDate":"2021-11-09"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"    public void addTaskEvent(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"        CmdAddTask.addTaskEvent(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"     * Delete a task from the user task","lastModifiedDate":"2021-11-09"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String that represents the user input","lastModifiedDate":"2021-11-09"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"    public void deleteTask(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"        CmdDelete.run(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-09"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"     * Add a task of Deadline type into TaskList","lastModifiedDate":"2021-11-09"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-09"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"     * Identify the task date and time that the user input","lastModifiedDate":"2021-11-09"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"     * Calls for respective AddTaskEvent_XXX to create a task object in TaskList afterwards","lastModifiedDate":"2021-11-09"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-09"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-09"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"     * @param userInput String that represents the user input","lastModifiedDate":"2021-11-09"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-09"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"    public void addTaskDeadline(TaskList myList, String userInput) {","lastModifiedDate":"2021-11-09"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"        CmdAddTask.addTaskDeadline(myList, userInput);","lastModifiedDate":"2021-11-09"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-09"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"     * Show invalid command","lastModifiedDate":"2021-11-12"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2021-11-09"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"        Message.msgInvalidInput();","lastModifiedDate":"2021-11-09"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-09"}],"authorContributionMap":{"EndireKT":150}},{"path":"src/main/java/duke/exception/UnableToLoadBuddhaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.exception;","lastModifiedDate":"2021-11-11"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Exception class that is called when buddha.txt fails to load","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"public class UnableToLoadBuddhaException extends Exception {","lastModifiedDate":"2021-11-11"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-11"}],"authorContributionMap":{"EndireKT":11}},{"path":"src/main/java/duke/exception/UnableToLoadProcessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.exception;","lastModifiedDate":"2021-11-11"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Exception class that is called when progress.txt fails to load","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"public class UnableToLoadProcessException extends Exception {","lastModifiedDate":"2021-11-11"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-11"}],"authorContributionMap":{"EndireKT":12}},{"path":"src/main/java/duke/storage/FileAccess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.storage;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-11-11"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.io.File;","lastModifiedDate":"2021-11-11"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-11-11"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-11"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import duke.exception.UnableToLoadBuddhaException;","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"import duke.exception.UnableToLoadProcessException;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * Handles file handling related functions","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"public class FileAccess {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    private String filepath;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    private File progressFile;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     * @param filepath","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"    public FileAccess(String filepath) {","lastModifiedDate":"2021-11-09"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        progressFile \u003d new File(this.filepath);","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"     * Save progress of the current task","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"     * @param stringToBeWritten String that needs to be outputed","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"    public void saveProgressIntoFile(String stringToBeWritten) {","lastModifiedDate":"2021-11-11"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"        assert !stringToBeWritten.isEmpty() : \"stringToBeWritten should not be empty\";","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"            fw.write(stringToBeWritten);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"            fw.close();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"            Message.msgSave();","lastModifiedDate":"2021-11-09"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"            Message.msgError(e);","lastModifiedDate":"2021-11-09"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"     * Load existing progress of the task","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents a list of task details","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"    public static String loadProgressFromFile() throws UnableToLoadProcessException {","lastModifiedDate":"2021-11-11"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"        String progress \u003d \"\";","lastModifiedDate":"2021-11-11"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        String pathRoot \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-11-11"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"        // e.g. pathRoot \u003d D:\\My Files\\School Documents\\Repository\\Duke","lastModifiedDate":"2021-11-11"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"        String pathRssFolder \u003d \"src\" + File.separator + \"resources\";","lastModifiedDate":"2021-11-11"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"        // pathRssFolder \u003d src\\resources","lastModifiedDate":"2021-11-11"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"        String pathFileName \u003d \"progress.txt\";","lastModifiedDate":"2021-11-11"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"        // pathFileName \u003d progress.txt","lastModifiedDate":"2021-11-11"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"        String filePath \u003d pathRoot + File.separator + pathRssFolder + File.separator + pathFileName;","lastModifiedDate":"2021-11-11"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"        // e.g.","lastModifiedDate":"2021-11-11"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"        // filePath \u003d D:\\My Files\\School","lastModifiedDate":"2021-11-11"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"        // Documents\\Repository\\Duke\\src\\main\\resources\\progress.txt","lastModifiedDate":"2021-11-11"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"            FileReader fr \u003d new FileReader(filePath);","lastModifiedDate":"2021-11-11"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-11-11"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-11"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-11-11"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-11-11"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"                sb.append(line);","lastModifiedDate":"2021-11-11"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2021-11-11"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-11-11"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"            progress \u003d sb.toString();","lastModifiedDate":"2021-11-11"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"            br.close();","lastModifiedDate":"2021-11-11"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"            throw new UnableToLoadProcessException();","lastModifiedDate":"2021-11-11"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"        return progress;","lastModifiedDate":"2021-11-11"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     * Read Buddah.txt","lastModifiedDate":"2021-11-11"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-11"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     * @return String that contains the content in Buddha.txt","lastModifiedDate":"2021-11-11"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"    public String readBuddhaText() throws UnableToLoadBuddhaException {","lastModifiedDate":"2021-11-11"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"        String buddhaText \u003d \"\";","lastModifiedDate":"2021-11-11"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"        String pathRoot \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-11-11"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"        String pathRssFolder \u003d \"src\" + File.separator + \"resources\";","lastModifiedDate":"2021-11-11"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"        String pathFileName \u003d \"buddha.txt\";","lastModifiedDate":"2021-11-11"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        String filePath \u003d pathRoot + File.separator + pathRssFolder + File.separator + pathFileName;","lastModifiedDate":"2021-11-11"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"            FileReader fr \u003d new FileReader(filePath);","lastModifiedDate":"2021-11-11"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-11-11"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-11-11"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-11-11"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-11-11"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"                sb.append(line);","lastModifiedDate":"2021-11-11"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"                sb.append(System.lineSeparator());","lastModifiedDate":"2021-11-11"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-11-11"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"            }","lastModifiedDate":"2021-11-11"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"            buddhaText \u003d sb.toString();","lastModifiedDate":"2021-11-11"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"            br.close();","lastModifiedDate":"2021-11-11"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"            throw new UnableToLoadBuddhaException();","lastModifiedDate":"2021-11-11"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"        return buddhaText;","lastModifiedDate":"2021-11-11"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"EndireKT":125}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Abstract class for Task","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * A task object correspond to a single task object.","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * The class object can be of the type todo, event, or deadline.","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"    protected String taskDetail;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    protected TaskType taskType;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    protected TaskPriority taskPriority;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     * Create an abstract Task object","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    public Task(String taskDetail) {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        this.taskDetail \u003d taskDetail;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        this.taskPriority \u003d TaskPriority.LOW;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    // Getter \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     * Return the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDetail() {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        return taskDetail;","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     * Return the boolean done status that represents if a task is done","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     * @return boolean that represents the done status of a task","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        return isDone;","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     * Return the TaskType","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * @return TaskType that represents the type of task","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"        return taskType;","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"     * Return the TaskPriority","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"     * @return TaskPriority that represents the priority of task","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"    public TaskPriority getTaskPriority() {","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"        return taskPriority;","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"    // Setter \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     * Modified the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     * @param modifiedTaskDetail String that represent the new task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"    public void setTask(String modifiedTaskDetail) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"        taskDetail \u003d modifiedTaskDetail;","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"     * Set the task as completed","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"     * Change the done status to completed","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"    public void setTaskCompleted() {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"     * Set the task as completed","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"     * Change the done status to completed","lastModifiedDate":"2021-11-14"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"    public void setTaskInCompleted() {","lastModifiedDate":"2021-11-14"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-11-14"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"     * Modified the type of the task","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"     * @param taskType String that represent the new task type","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"    public void setTypeOfTask(TaskType taskType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"     * Set thr priority of a task","lastModifiedDate":"2021-11-12"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"     * @param taskPriority TaskPriority that represent the new priority","lastModifiedDate":"2021-11-12"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"    public void setPriority(TaskPriority taskPriority) {","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"        this.taskPriority \u003d taskPriority;","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"EndireKT":111}},{"path":"src/main/java/duke/task/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * Create an instance of deadline class","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"    private LocalDate taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"    private LocalTime taskTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    public TaskDeadline(String taskDetail, LocalDate taskDate) {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"        super(taskDetail);","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"    public TaskDeadline(String taskDetail, LocalDate taskDate, LocalTime localTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        super(taskDetail);","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        this.taskTime \u003d localTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"     * Return LocalDate of a task","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"     * @return LocalDate that represents the taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        return taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"     * Return LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     * Return day from LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the day of taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateDayToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate.getDayOfMonth());","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"     * Return month from LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the month of taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateMonthToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate.getMonth());","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"     * Return year from LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the year of taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateYearToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate.getYear());","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"     * Return LocalTime of a task","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"     * @return LocalTime that represents the taskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"    public LocalTime getLocalTime() {","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"        return taskTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     * Return LocalTime of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the taskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"    public String getLocalTime_toString() {","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskTime);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"EndireKT":100}},{"path":"src/main/java/duke/task/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * Create an instance of event class","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public class TaskEvent extends Task {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    private LocalDate taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    private LocalTime taskTimeStart;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    private LocalTime taskTimeEnd;","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    public TaskEvent(String taskDetail, LocalDate taskDate) {","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        super(taskDetail);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    public TaskEvent(String taskDetail, LocalDate taskDate, LocalTime taskTimeStart) {","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        super(taskDetail);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        this.taskTimeStart \u003d taskTimeStart;","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"    public TaskEvent(String taskDetail, LocalDate taskDate, LocalTime taskTimeStart, LocalTime taskTimeEnd) {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        super(taskDetail);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"        this.taskTimeStart \u003d taskTimeStart;","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"        this.taskTimeEnd \u003d taskTimeEnd;","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"     * Return LocalDate of a task","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"     * @return LocalDate that represents the taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"        return taskDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"     * Return LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDate_toString() {","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate);","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     * Return day from LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the day of taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateDayToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate.getDayOfMonth());","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     * Return month from LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the month of taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateMonthToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate.getMonth());","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"     * Return year from LocalDate of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the year of taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"    public String getLocalDateYearToString() {","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskDate.getYear());","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     * Return start time of LocalTime of a task","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"     * @return LocalTime that represents the start time of taskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"    public LocalTime getLocalTimeStart() {","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"        return taskTimeStart;","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"     * Return end time of LocalTime of a task","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"     * @return LocalTime that represents the end time of taskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"    public LocalTime getLocalTimeEnd() {","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"        return taskTimeEnd;","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"     * Return start time of LocalTime of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the start time of taskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"    public String getLocalTimeStart_toString() {","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskTimeStart);","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"     * Return end time of LocalTime of a task in String","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the start time of taskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"    public String getLocalTimeEnd_toString() {","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"        return String.valueOf(taskTimeEnd);","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"EndireKT":136}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * Create an instance of list of task","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * Create task object","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * Manipulate task object creation, modification and deletion","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"public class TaskList {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    // Initialize \u0026 Add Item \u0026 Remove Item \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     * Add a task of type ToDo","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    public void addItemToDos(String taskDetail) {","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        list.add(new TaskToDos(taskDetail));","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"     * Add a task of type Deadline","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"     * @param taskDate   LocalDate that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"    public void addItemDeadline(String taskDetail, LocalDate taskDate) {","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        list.add(new TaskDeadline(taskDetail, taskDate));","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"     * Add a task of type Deadline","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * @param taskDate   LocalDate that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     * @param taskTime   LocalTime that represents the task time","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"    public void addItemDeadline(String taskDetail, LocalDate taskDate, LocalTime taskTime) {","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"        list.add(new TaskDeadline(taskDetail, taskDate, taskTime));","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"     * Add a task of type Event","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"     * @param taskDate   LocalDate that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"    public void addItemEvent(String taskDetail, LocalDate taskDate) {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"        list.add(new TaskEvent(taskDetail, taskDate));","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"     * Add a task of type Event","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail    String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     * @param taskDate      LocalDate that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     * @param taskTimeStart LocalTime that represents the task start time","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"    public void addItemEvent(String taskDetail, LocalDate taskDate, LocalTime taskTimeStart) {","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"        list.add(new TaskEvent(taskDetail, taskDate, taskTimeStart));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"     * Add a task of type Event","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail    String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"     * @param taskDate      LocalDate that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"     * @param taskTimeStart LocalTime that represents the task start time","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"     * @param taskTimeEnd   LocalTime that represents the task end time","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"    public void addItemEvent(String taskDetail, LocalDate taskDate, LocalTime taskTimeStart, LocalTime taskTimeEnd) {","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"        list.add(new TaskEvent(taskDetail, taskDate, taskTimeStart, taskTimeEnd));","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"     * Delete a task from tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"    public void removeItem(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"        list.remove(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"    // Getter \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"     * Return a task from tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"     * @return Task at the index","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"        return list.get(index);","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"     * Return a task detail from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the task detail","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDetail(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"        return task.getTaskDetail();","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"     * Return a task priority from a task of tasklist","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"     * @return TaskPriority that represents the task priority","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"    public TaskPriority getTaskPriority(int index) {","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"        return task.getTaskPriority();","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"     * Return a boolean done status from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"     * @return boolean that represents the task done status","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"    public boolean getTaskDoneStatus(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"        return task.getDoneStatus();","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"     * Return a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"    public String getTaskEventTaskDateInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"        TaskEvent task \u003d (TaskEvent) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDate_toString();","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"EndireKT"},"content":"     * Return year from a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the year from taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"EndireKT"},"content":"    public String getTaskEventTaskDateYearInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"EndireKT"},"content":"        TaskEvent task \u003d (TaskEvent) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateYearToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"EndireKT"},"content":"     * Return month from a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the month from taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"EndireKT"},"content":"    public String getTaskEventTaskDateMonthInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"EndireKT"},"content":"        TaskEvent task \u003d (TaskEvent) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateMonthToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"EndireKT"},"content":"     * Return day from a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the day from taskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"EndireKT"},"content":"    public String getTaskEventTaskDateDayInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"EndireKT"},"content":"        TaskEvent task \u003d (TaskEvent) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateDayToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"EndireKT"},"content":"     * Return start time in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the start time from TaskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"EndireKT"},"content":"    public String getTaskEventTaskTimeStartInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"EndireKT"},"content":"        TaskEvent task \u003d (TaskEvent) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalTimeStart_toString();","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"EndireKT"},"content":"     * Return end time in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the end time from TaskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"EndireKT"},"content":"    public String getTaskEventTaskTimeEndInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"EndireKT"},"content":"        TaskEvent task \u003d (TaskEvent) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalTimeEnd_toString();","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"EndireKT"},"content":"     * Return a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the task date","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDeadLineTaskDateInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"EndireKT"},"content":"        TaskDeadline task \u003d (TaskDeadline) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"EndireKT"},"content":"     * Return year from a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the year from TaskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDeadLineTaskDateYearInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":229,"author":{"gitId":"EndireKT"},"content":"        TaskDeadline task \u003d (TaskDeadline) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateYearToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":231,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"EndireKT"},"content":"     * Return month from a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":236,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":237,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the month from TaskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDeadLineTaskDateMonthInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"EndireKT"},"content":"        TaskDeadline task \u003d (TaskDeadline) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateMonthToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":243,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":244,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"EndireKT"},"content":"     * Return day from a taskDate in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the day from TaskDate","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDeadLineTaskDateDayInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"EndireKT"},"content":"        TaskDeadline task \u003d (TaskDeadline) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalDateDayToString();","lastModifiedDate":"2021-11-01"},{"lineNumber":253,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"EndireKT"},"content":"     * Return TaskTime in String from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":257,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":258,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":259,"author":{"gitId":"EndireKT"},"content":"     * @return String that represents the TaskTime","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"EndireKT"},"content":"    public String getTaskDeadLineTaskTimeInString(int index) {","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"EndireKT"},"content":"        TaskDeadline task \u003d (TaskDeadline) list.get(index);","lastModifiedDate":"2021-10-31"},{"lineNumber":263,"author":{"gitId":"EndireKT"},"content":"        return task.getLocalTime_toString();","lastModifiedDate":"2021-10-31"},{"lineNumber":264,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":265,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"EndireKT"},"content":"     * Return the number of item in a tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":268,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"EndireKT"},"content":"     * @return Int that represents the number of item in a tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"EndireKT"},"content":"    public int getNumOfItem() {","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"EndireKT"},"content":"        return list.size();","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":275,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"EndireKT"},"content":"     * Return TaskType from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":277,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"EndireKT"},"content":"     * @return TaskType that represents the type of task","lastModifiedDate":"2021-11-01"},{"lineNumber":280,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"EndireKT"},"content":"    public TaskType getTaskType(int index) {","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"EndireKT"},"content":"        return task.getTaskType();","lastModifiedDate":"2021-09-30"},{"lineNumber":284,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":285,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":286,"author":{"gitId":"EndireKT"},"content":"    // Setter \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"EndireKT"},"content":"     * Return TaskType from a task of tasklist","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"EndireKT"},"content":"    public void setTaskDone(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":294,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-09-28"},{"lineNumber":295,"author":{"gitId":"EndireKT"},"content":"        task.setTaskCompleted();","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":297,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":299,"author":{"gitId":"EndireKT"},"content":"     * Return TaskType from a task of tasklist","lastModifiedDate":"2021-11-14"},{"lineNumber":300,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":301,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that represents the index in a task list","lastModifiedDate":"2021-11-14"},{"lineNumber":302,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":303,"author":{"gitId":"EndireKT"},"content":"    public void setTaskUnDone(int index) {","lastModifiedDate":"2021-11-14"},{"lineNumber":304,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-11-14"},{"lineNumber":305,"author":{"gitId":"EndireKT"},"content":"        task.setTaskInCompleted();","lastModifiedDate":"2021-11-14"},{"lineNumber":306,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":307,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":308,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"EndireKT"},"content":"     * Update the priority of a task in tasklist","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"EndireKT"},"content":"     * @param index        Int that represents the index in a task list","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"EndireKT"},"content":"     * @param taskPriority TaskPriority(new) that will replace the TaskPriority(current)","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"EndireKT"},"content":"    public void setTaskPriority(int index, TaskPriority taskPriority) {","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"EndireKT"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"EndireKT"},"content":"        task.setPriority(taskPriority);","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"EndireKT":318}},{"path":"src/main/java/duke/task/TaskPriority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"public enum TaskPriority {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"    HIGH, MEDIUM, LOW, INVALID;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"     * Compare two tasks and return true if taskA has higher priority than taskB","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"     * @param taskA First Task to compare","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"     * @param taskB Second Task to compare","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"     * @return boolean true if taskA \u003e taskB; false if otherwise","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"    public static boolean isHigherPriority(TaskPriority taskA, TaskPriority taskB) {","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"        int taskAPriority \u003d convertPriorityToInt(taskA);","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"        int taskBPriority \u003d convertPriorityToInt(taskB);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"        if (taskAPriority \u003c taskBPriority) {","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"        return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     * Convert Int value to Priority","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"     * 1 -\u003e HIGH","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"     * 2 -\u003e MEDIUM","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"     * 3 -\u003e LOW","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"     * any other number -\u003e INVALID","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     * @param priority Int that indicates the priority","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"     * @return TaskPriority","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    public static TaskPriority convertIntToPriority(int priority) {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        switch (priority) {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        case 1:","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"            return HIGH;","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        case 2:","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"            return MEDIUM;","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"        case 3:","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"            return LOW;","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"            return INVALID;","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"     * Convert String value to Priority","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"     * \"1\" -\u003e HIGH","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * \"2\" -\u003e MEDIUM","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     * \"3\" -\u003e LOW","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"     * any other number -\u003e INVALID","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"     * @param priority String that indicates the priority","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"     * @return TaskPriority","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    public static TaskPriority convertStringToPriority(String priority) {","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"        switch (priority) {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        case \"1\":","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"            return HIGH;","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        case \"2\":","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"            return MEDIUM;","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"        case \"3\":","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"            return LOW;","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"            return INVALID;","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     * Convert TaskPriority to Int","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     * 1 \u003c- HIGH","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"     * 2 \u003c- MEDIUM","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"     * 3 \u003c- LOW","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"     * 0 \u003c- INVALID","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"     * @param task TaskPriority that indicates the TaskPriority","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"     * @return int","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"    public static int convertPriorityToInt(TaskPriority task) {","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"        switch (task) {","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"        case LOW:","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"            return 3;","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"        case MEDIUM:","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"            return 2;","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"        case HIGH:","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"            return 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"            return 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     * Convert TaskPriority to String","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     * @param task TaskPriority that indicates the TaskPriority","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     * @return String value of TaskPriority","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"    public static String convertPriorityToString(TaskPriority task) {","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"        switch (task) {","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"        case LOW:","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"            return \"LOW\";","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        case MEDIUM:","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"            return \"MEDIUM\";","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"        case HIGH:","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"            return \"HIGH\";","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"            return \"INVALID\";","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-11"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"     * Convert TaskPriority to String","lastModifiedDate":"2021-11-11"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-11"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"    public String toStringInNumber() {","lastModifiedDate":"2021-11-11"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"        switch (this) {","lastModifiedDate":"2021-11-11"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"        case LOW:","lastModifiedDate":"2021-11-11"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"            return \"3\";","lastModifiedDate":"2021-11-11"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"        case MEDIUM:","lastModifiedDate":"2021-11-11"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"            return \"2\";","lastModifiedDate":"2021-11-11"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"        case HIGH:","lastModifiedDate":"2021-11-11"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"            return \"1\";","lastModifiedDate":"2021-11-11"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-11"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"            return \"0\";","lastModifiedDate":"2021-11-11"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-11"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"EndireKT":129}},{"path":"src/main/java/duke/task/TaskToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Create an instance of todo class","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * @author  Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @since   2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"public class TaskToDos extends Task {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    public TaskToDos(String taskDetail) {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"        super(taskDetail);","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"        this.taskType \u003d TaskType.TODOS;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"EndireKT":21}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":" * Define task type","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"    TODOS, DEADLINE, EVENT;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    public static String taskTypeToString(TaskType taskType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"        case TODOS:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"            s \u003d \"T\";","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"            s \u003d \"D\";","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"        case EVENT:","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"            s \u003d \"E\";","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + taskType);","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        return s;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"EndireKT":34}},{"path":"src/main/java/duke/ui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":" * Handle all the message methods","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"public class Message {","lastModifiedDate":"2021-11-09"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"    // Starting Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"     * Display greet message at the start","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    public static void msgGreet() {","lastModifiedDate":"2021-11-09"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"        String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"\u003e\u003e\u003e Copyright (c) Teng Kang Teng (A0211547L NUS) \u003c\u003c\u003c\");","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"\u003e\u003e\u003e Version 0.2 \u003c\u003c\u003c\\n\");","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"Hello! I\u0027m Duke\" + System.lineSeparator() + \"What can I do for you?\");","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"Enter \\\"Info\\\" to show all Duke commands. \");","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"    // Assignment Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"     * Display message when a task is assigned","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"     * @param taskTypeInString String that describes the task type","lastModifiedDate":"2021-11-10"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"     * @param isDoneInString   String that describes the isDone status","lastModifiedDate":"2021-11-10"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail       String that describes the task detail","lastModifiedDate":"2021-11-10"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"     * @param numOfItem        Int that describes the number of items in taskList","lastModifiedDate":"2021-11-10"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"    public static void msgAssignTaskToDo(String taskTypeInString, String isDoneInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"                                         String taskDetail, int numOfItem) {","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"      [\" + taskTypeInString + \"][\" + isDoneInString + \"] \" + taskDetail);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfItem + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"     * Display message when a deadline task is assigned","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"     * @param taskTypeInString String that describes the task type","lastModifiedDate":"2021-11-10"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"     * @param isDoneInString   String that describes the isDone status","lastModifiedDate":"2021-11-10"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail       String that describes the task detail","lastModifiedDate":"2021-11-10"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"     * @param dateInString     String that describes the task date","lastModifiedDate":"2021-11-10"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"     * @param numOfItem        Int that describes the number of items in taskList","lastModifiedDate":"2021-11-10"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"    public static void msgAssignTaskDeadlineTaskDate(String taskTypeInString, String isDoneInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"                                                     String taskDetail, String dateInString, int numOfItem) {","lastModifiedDate":"2021-11-10"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"        System.out.println(","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"                \"      [\" + taskTypeInString + \"][\" + isDoneInString + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"                        + taskDetail + \"(by: \" + dateInString + \")\");","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfItem + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     * Display message when a deadline task is assigned","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"     * @param taskTypeInString String that describes the task type","lastModifiedDate":"2021-11-10"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"     * @param isDoneInString   String that describes the isDone status","lastModifiedDate":"2021-11-10"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail       String that describes the task detail","lastModifiedDate":"2021-11-10"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"     * @param dateInString     String that describes the task date","lastModifiedDate":"2021-11-10"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"     * @param timeInString     String that describes the task time","lastModifiedDate":"2021-11-10"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"     * @param numOfItem        Int that describes the number of items in taskList","lastModifiedDate":"2021-11-10"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"    public static void msgAssignTaskDeadlineTaskDateTaskTime(String taskTypeInString, String isDoneInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"                                                             String taskDetail, String dateInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"                                                             String timeInString, int numOfItem) {","lastModifiedDate":"2021-11-10"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"        System.out.println(","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"                \"      [\" + taskTypeInString + \"][\" + isDoneInString + \"] \"","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"                        + taskDetail + \"(by: \" + dateInString + \" \" + timeInString + \")\");","lastModifiedDate":"2021-11-10"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfItem + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     * Display message when an event task is assigned","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"     * @param taskTypeInString String that describes task type","lastModifiedDate":"2021-11-10"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"     * @param isDoneInString   String that describes is done status","lastModifiedDate":"2021-11-10"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail       String that describes task detail","lastModifiedDate":"2021-11-10"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"     * @param dateInString     String that describes task date","lastModifiedDate":"2021-11-10"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"     * @param numOfItem        Int that describes the number of tasks","lastModifiedDate":"2021-11-10"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"    public static void msgAssignTaskEventTaskDate(String taskTypeInString, String isDoneInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"                                                  String taskDetail, String dateInString, int numOfItem) {","lastModifiedDate":"2021-11-10"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"      [\" + taskTypeInString + \"][\"","lastModifiedDate":"2021-11-12"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"                + isDoneInString + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"                + taskDetail + \"(at: \" + dateInString + \")\");","lastModifiedDate":"2021-11-12"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfItem + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"     * Display message when an event task is assigned","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"     * @param taskTypeInString  String that describes task type","lastModifiedDate":"2021-11-10"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"     * @param isDoneInString    String that describes is done status","lastModifiedDate":"2021-11-10"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail        String that describes task detail","lastModifiedDate":"2021-11-10"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"     * @param dateInString      String that describes task date","lastModifiedDate":"2021-11-10"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"     * @param timeStartInString String that describes the start time","lastModifiedDate":"2021-11-10"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"     * @param numOfItem         Int that describes the number of tasks","lastModifiedDate":"2021-11-10"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"    public static void msgAssignTaskEventTaskDateTaskTimeStart(String taskTypeInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"                                                               String isDoneInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"                                                               String taskDetail,","lastModifiedDate":"2021-11-12"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"                                                               String dateInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"                                                               String timeStartInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"                                                               int numOfItem) {","lastModifiedDate":"2021-11-12"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"      [\" + taskTypeInString + \"][\" + isDoneInString + \"] \" + taskDetail);","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"      (at: \" + dateInString + \", from: \" + timeStartInString + \")\");","lastModifiedDate":"2021-11-10"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfItem + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"     * Display message when an event task is assigned","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"     * @param taskTypeInString  String that describes task type","lastModifiedDate":"2021-11-10"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"     * @param isDoneInString    String that describes is done status","lastModifiedDate":"2021-11-10"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"     * @param taskDetail        String that describes task detail","lastModifiedDate":"2021-11-10"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"     * @param dateInString      String that describes task date","lastModifiedDate":"2021-11-10"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"     * @param timeStartInString String that describes the start time","lastModifiedDate":"2021-11-10"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"     * @param timeEndInString   String that describes the end time","lastModifiedDate":"2021-11-10"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"     * @param numOfItem         Int that describes the number of tasks","lastModifiedDate":"2021-11-10"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-10"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"    public static void msgAssignEventTaskDateTimeStartEnd(String taskTypeInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"                                                       String isDoneInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"                                                       String taskDetail,","lastModifiedDate":"2021-11-12"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"                                                       String dateInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"                                                       String timeStartInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"                                                       String timeEndInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":153,"author":{"gitId":"EndireKT"},"content":"                                                       int numOfItem) {","lastModifiedDate":"2021-11-10"},{"lineNumber":154,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"      [\" + taskTypeInString + \"][\" + isDoneInString + \"] \" + taskDetail);","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"      (at: \" + dateInString + \", from: \" + timeStartInString","lastModifiedDate":"2021-11-12"},{"lineNumber":158,"author":{"gitId":"EndireKT"},"content":"                + \" to \" + timeEndInString + \")\");","lastModifiedDate":"2021-11-12"},{"lineNumber":159,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfItem + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":160,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"EndireKT"},"content":"    // FileAccess Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"EndireKT"},"content":"     * Display message when task is saved","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"EndireKT"},"content":"    public static void msgSave() {","lastModifiedDate":"2021-11-09"},{"lineNumber":169,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Progress Saved!\");","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"EndireKT"},"content":"     * Display message when task is loaded","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"EndireKT"},"content":"    public static void msgSLoad() {","lastModifiedDate":"2021-11-09"},{"lineNumber":177,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Progress loaded!\");","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"EndireKT"},"content":"    // Set Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"EndireKT"},"content":"     * Display message to ask user which task they want to set priority","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"EndireKT"},"content":"    public static void msgAskUserSetTaskPriority() {","lastModifiedDate":"2021-11-09"},{"lineNumber":187,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Which task do you want to set priority?\");","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"EndireKT"},"content":"     * Display message to ask user what is the new priority","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"EndireKT"},"content":"    public static void msgAskUserWhatPriority() {","lastModifiedDate":"2021-11-09"},{"lineNumber":194,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    What is it\u0027s priority? choose 1 to 3\");","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    1: Very urgent \u003e\u003e\u003e 3: Chin Cai not that urgent\");","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"EndireKT"},"content":"     * Display message to tell user that the new priority for a task is set successfully","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-10"},{"lineNumber":201,"author":{"gitId":"EndireKT"},"content":"     * @param taskNumber           Int that describes the task number in the TaskList","lastModifiedDate":"2021-11-10"},{"lineNumber":202,"author":{"gitId":"EndireKT"},"content":"     * @param taskPriorityInString String that describes the priority of the task","lastModifiedDate":"2021-11-10"},{"lineNumber":203,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"EndireKT"},"content":"    public static void msgSetPriority(int taskNumber, String taskPriorityInString) {","lastModifiedDate":"2021-11-10"},{"lineNumber":205,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Done! The new task priority is set\");","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Priority of Task #\" + taskNumber + \" has been set to \" + taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":207,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"EndireKT"},"content":"    // Find Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"EndireKT"},"content":"     * Display message to tell user that the term that the user try to find is not found","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidFindTerm() {","lastModifiedDate":"2021-11-09"},{"lineNumber":216,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Sorry :(   Cannot find what you are looking for ~ \");","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"EndireKT"},"content":"     * Display message to show the opening message of \"find\"","lastModifiedDate":"2021-11-10"},{"lineNumber":222,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskFoundOpeningMsg() {","lastModifiedDate":"2021-11-10"},{"lineNumber":224,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"EndireKT"},"content":"    // Other Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-10-01"},{"lineNumber":228,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":229,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":230,"author":{"gitId":"EndireKT"},"content":"     * Display message when a task is marked as done","lastModifiedDate":"2021-11-01"},{"lineNumber":231,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-01"},{"lineNumber":233,"author":{"gitId":"EndireKT"},"content":"     * @param taskNumber Int that represents the task number","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"EndireKT"},"content":"    public static void msgMarkDone(TaskList myList, int taskNumber) {","lastModifiedDate":"2021-11-09"},{"lineNumber":236,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Naisuuuu! This task is marked as done: \");","lastModifiedDate":"2021-09-28"},{"lineNumber":237,"author":{"gitId":"EndireKT"},"content":"        msgBlankBeforeTaskDetail();","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"EndireKT"},"content":"        new MsgTaskDetail(myList, taskNumber).showTaskDetail();","lastModifiedDate":"2021-11-10"},{"lineNumber":239,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":241,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":242,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":243,"author":{"gitId":"EndireKT"},"content":"     * Display message when a task is marked as not done","lastModifiedDate":"2021-11-14"},{"lineNumber":244,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":245,"author":{"gitId":"EndireKT"},"content":"     * @param myList     TaskList that contains the list of task","lastModifiedDate":"2021-11-14"},{"lineNumber":246,"author":{"gitId":"EndireKT"},"content":"     * @param taskNumber Int that represents the task number","lastModifiedDate":"2021-11-14"},{"lineNumber":247,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":248,"author":{"gitId":"EndireKT"},"content":"    public static void msgMarkUnDone(TaskList myList, int taskNumber) {","lastModifiedDate":"2021-11-14"},{"lineNumber":249,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Okie! This task is marked as not done: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":250,"author":{"gitId":"EndireKT"},"content":"        msgBlankBeforeTaskDetail();","lastModifiedDate":"2021-11-14"},{"lineNumber":251,"author":{"gitId":"EndireKT"},"content":"        new MsgTaskDetail(myList, taskNumber).showTaskDetail();","lastModifiedDate":"2021-11-14"},{"lineNumber":252,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-14"},{"lineNumber":253,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":254,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":255,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"EndireKT"},"content":"     * Display [x] where x is the int parameter","lastModifiedDate":"2021-11-10"},{"lineNumber":257,"author":{"gitId":"EndireKT"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-11-10"},{"lineNumber":258,"author":{"gitId":"EndireKT"},"content":"     * Used in CmdList function to show the following:","lastModifiedDate":"2021-11-10"},{"lineNumber":259,"author":{"gitId":"EndireKT"},"content":"     * 1.","lastModifiedDate":"2021-11-10"},{"lineNumber":260,"author":{"gitId":"EndireKT"},"content":"     * 2.","lastModifiedDate":"2021-11-10"},{"lineNumber":261,"author":{"gitId":"EndireKT"},"content":"     * 3.","lastModifiedDate":"2021-11-10"},{"lineNumber":262,"author":{"gitId":"EndireKT"},"content":"     * etc.","lastModifiedDate":"2021-11-10"},{"lineNumber":263,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"EndireKT"},"content":"     * @param index Int that will be put inside the bracket","lastModifiedDate":"2021-11-10"},{"lineNumber":265,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"EndireKT"},"content":"    public static void msgShowBracketWithIndex(int index) {","lastModifiedDate":"2021-11-10"},{"lineNumber":267,"author":{"gitId":"EndireKT"},"content":"        System.out.print(\"    \" + index + \".\");","lastModifiedDate":"2021-11-10"},{"lineNumber":268,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":269,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"EndireKT"},"content":"     * Display blanks","lastModifiedDate":"2021-11-01"},{"lineNumber":272,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"EndireKT"},"content":"    public static void msgBlankBeforeTaskDetail() {","lastModifiedDate":"2021-11-09"},{"lineNumber":274,"author":{"gitId":"EndireKT"},"content":"        System.out.print(\"    \");","lastModifiedDate":"2021-10-01"},{"lineNumber":275,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":276,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":277,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"EndireKT"},"content":"     * Display dash lines separator","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"EndireKT"},"content":"    public static void msgDashLines() {","lastModifiedDate":"2021-11-09"},{"lineNumber":281,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":285,"author":{"gitId":"EndireKT"},"content":"     * Display TODO task description","lastModifiedDate":"2021-11-12"},{"lineNumber":286,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":287,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskTodo(String taskTypeInString, String isDoneInString,","lastModifiedDate":"2021-11-10"},{"lineNumber":288,"author":{"gitId":"EndireKT"},"content":"                                   String taskDetail, String taskPriorityInString) {","lastModifiedDate":"2021-11-10"},{"lineNumber":289,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"[\" + taskTypeInString + \"][\"","lastModifiedDate":"2021-11-12"},{"lineNumber":290,"author":{"gitId":"EndireKT"},"content":"                + isDoneInString + \"] \" + taskDetail + \" [\" + taskPriorityInString + \"]\");","lastModifiedDate":"2021-11-12"},{"lineNumber":291,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":292,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":293,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":294,"author":{"gitId":"EndireKT"},"content":"     * Display EVENT task description","lastModifiedDate":"2021-11-12"},{"lineNumber":295,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":296,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskEvent(String taskTypeInString, String isDoneInString, String taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":297,"author":{"gitId":"EndireKT"},"content":"                                    String year, String month, String day, String taskPriorityInString) {","lastModifiedDate":"2021-11-10"},{"lineNumber":298,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"[\" + taskTypeInString + \"][\" + isDoneInString + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":299,"author":{"gitId":"EndireKT"},"content":"                + taskDetail + \" [\" + taskPriorityInString + \"]\");","lastModifiedDate":"2021-11-12"},{"lineNumber":300,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"             (at \" + year + \" \" + month + \" \" + day + \")\");","lastModifiedDate":"2021-11-10"},{"lineNumber":301,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":302,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":303,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":304,"author":{"gitId":"EndireKT"},"content":"     * Display EVENT task description","lastModifiedDate":"2021-11-12"},{"lineNumber":305,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":306,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskEvent(String taskTypeInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":307,"author":{"gitId":"EndireKT"},"content":"                                    String isDoneInString,","lastModifiedDate":"2021-11-12"},{"lineNumber":308,"author":{"gitId":"EndireKT"},"content":"                                    String taskDetail,","lastModifiedDate":"2021-11-12"},{"lineNumber":309,"author":{"gitId":"EndireKT"},"content":"                                    String year,","lastModifiedDate":"2021-11-12"},{"lineNumber":310,"author":{"gitId":"EndireKT"},"content":"                                    String month,","lastModifiedDate":"2021-11-12"},{"lineNumber":311,"author":{"gitId":"EndireKT"},"content":"                                    String day,","lastModifiedDate":"2021-11-12"},{"lineNumber":312,"author":{"gitId":"EndireKT"},"content":"                                    String timeStart,","lastModifiedDate":"2021-11-12"},{"lineNumber":313,"author":{"gitId":"EndireKT"},"content":"                                    String taskPriorityInString) {","lastModifiedDate":"2021-11-12"},{"lineNumber":314,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"[\" + taskTypeInString + \"][\"","lastModifiedDate":"2021-11-12"},{"lineNumber":315,"author":{"gitId":"EndireKT"},"content":"                + isDoneInString + \"] \" + taskDetail + \" [\" + taskPriorityInString + \"]\");","lastModifiedDate":"2021-11-12"},{"lineNumber":316,"author":{"gitId":"EndireKT"},"content":"        System.out.print(\"             (at \" + year + \" \" + month + \" \" + day);","lastModifiedDate":"2021-10-31"},{"lineNumber":317,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\" ; from: \" + timeStart + \")\");","lastModifiedDate":"2021-10-31"},{"lineNumber":318,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":319,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":320,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":321,"author":{"gitId":"EndireKT"},"content":"     * Display EVENT task description","lastModifiedDate":"2021-11-12"},{"lineNumber":322,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":323,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskEvent(String taskTypeInString, String isDoneInString, String taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":324,"author":{"gitId":"EndireKT"},"content":"                                    String year, String month, String day, String timeStart,","lastModifiedDate":"2021-11-10"},{"lineNumber":325,"author":{"gitId":"EndireKT"},"content":"                                    String timeEnd, String taskPriorityInString) {","lastModifiedDate":"2021-11-10"},{"lineNumber":326,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"[\" + taskTypeInString + \"][\" + isDoneInString + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":327,"author":{"gitId":"EndireKT"},"content":"                + taskDetail + \" [\" + taskPriorityInString + \"]\");","lastModifiedDate":"2021-11-12"},{"lineNumber":328,"author":{"gitId":"EndireKT"},"content":"        System.out.print(\"             (at \" + year + \" \" + month + \" \" + day);","lastModifiedDate":"2021-10-31"},{"lineNumber":329,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\" ; from: \" + timeStart + \" to \" + timeEnd + \")\");","lastModifiedDate":"2021-10-31"},{"lineNumber":330,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":331,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":332,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":333,"author":{"gitId":"EndireKT"},"content":"     * Display DEADLINE task description","lastModifiedDate":"2021-11-12"},{"lineNumber":334,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":335,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskDeadline(String taskTypeInString, String isDoneInString, String taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":336,"author":{"gitId":"EndireKT"},"content":"                                       String year, String month, String day, String taskPriorityInString) {","lastModifiedDate":"2021-11-10"},{"lineNumber":337,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"[\" + taskTypeInString + \"][\" + isDoneInString + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":338,"author":{"gitId":"EndireKT"},"content":"                + taskDetail + \" [\" + taskPriorityInString + \"]\");","lastModifiedDate":"2021-11-12"},{"lineNumber":339,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"             by: \" + year + \" \" + month + \" \" + day + \")\");","lastModifiedDate":"2021-11-10"},{"lineNumber":340,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":342,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":343,"author":{"gitId":"EndireKT"},"content":"     * Display DEADLINE task description","lastModifiedDate":"2021-11-12"},{"lineNumber":344,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":345,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskDeadline(String taskTypeInString, String isDoneInString, String taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":346,"author":{"gitId":"EndireKT"},"content":"                                       String year, String month, String day,","lastModifiedDate":"2021-11-10"},{"lineNumber":347,"author":{"gitId":"EndireKT"},"content":"                                       String timeStart, String taskPriorityInString) {","lastModifiedDate":"2021-11-10"},{"lineNumber":348,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"[\" + taskTypeInString + \"][\" + isDoneInString + \"] \"","lastModifiedDate":"2021-11-12"},{"lineNumber":349,"author":{"gitId":"EndireKT"},"content":"                + taskDetail + \" [\" + taskPriorityInString + \"]\");","lastModifiedDate":"2021-11-12"},{"lineNumber":350,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"             by: \" + year + \" \" + month + \" \" + day + \" \" + timeStart + \")\");","lastModifiedDate":"2021-11-10"},{"lineNumber":351,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":353,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":354,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"EndireKT"},"content":"     * Display message when a task is removed","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"EndireKT"},"content":"    public static void msgRemoveItem(TaskList myList, int taskNumber, int numOfTaskAfterDelete) {","lastModifiedDate":"2021-11-10"},{"lineNumber":358,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"EndireKT"},"content":"        msgBlankBeforeTaskDetail();","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"EndireKT"},"content":"        new MsgTaskDetail(myList, taskNumber).showTaskDetail();","lastModifiedDate":"2021-11-10"},{"lineNumber":362,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Now you have \" + numOfTaskAfterDelete + \" tasks in the list.\");","lastModifiedDate":"2021-11-10"},{"lineNumber":363,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":367,"author":{"gitId":"EndireKT"},"content":"     * Display arrow head","lastModifiedDate":"2021-11-12"},{"lineNumber":368,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":369,"author":{"gitId":"EndireKT"},"content":"    public static void msgArrowHead() {","lastModifiedDate":"2021-11-10"},{"lineNumber":370,"author":{"gitId":"EndireKT"},"content":"        System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2021-11-10"},{"lineNumber":371,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":372,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":373,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":374,"author":{"gitId":"EndireKT"},"content":"     * Display full list of Duke command","lastModifiedDate":"2021-11-12"},{"lineNumber":375,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":376,"author":{"gitId":"EndireKT"},"content":"    public static void msgShowDukeCommandList() {","lastModifiedDate":"2021-11-11"},{"lineNumber":377,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"\u003e\u003e Full List of Duke Command Available:\");","lastModifiedDate":"2021-11-11"},{"lineNumber":378,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    1. todo (task description)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":379,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a TODO task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":380,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    2. event (task description)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":381,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a EVENT task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":382,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    3. event (task description)/at (date)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":383,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a EVENT task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":384,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    4. event (task description)/at (date) (time)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":385,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a EVENT task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":386,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    5. deadline (task description)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":387,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a DEADLINE task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":388,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    6. deadline (task description)/by (date)\");","lastModifiedDate":"2021-11-14"},{"lineNumber":389,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a DEADLINE task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":390,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    7. deadline (task description)/by (date) (time start) (time end)\");","lastModifiedDate":"2021-11-14"},{"lineNumber":391,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e add a DEADLINE task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":392,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    8. list\");","lastModifiedDate":"2021-11-11"},{"lineNumber":393,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e show full list of task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":394,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    9. set\");","lastModifiedDate":"2021-11-11"},{"lineNumber":395,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e change priority of a task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":396,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    10. done (task number)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":397,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e mark a task as completed\");","lastModifiedDate":"2021-11-11"},{"lineNumber":398,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    11. find (keyword)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":399,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e find a task based on keyword\");","lastModifiedDate":"2021-11-11"},{"lineNumber":400,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    12. info\");","lastModifiedDate":"2021-11-11"},{"lineNumber":401,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e display full list of Duke Command\");","lastModifiedDate":"2021-11-11"},{"lineNumber":402,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    13. delete (task number)\");","lastModifiedDate":"2021-11-11"},{"lineNumber":403,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e delete a task\");","lastModifiedDate":"2021-11-11"},{"lineNumber":404,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    14. save\");","lastModifiedDate":"2021-11-14"},{"lineNumber":405,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e save all the tasks\");","lastModifiedDate":"2021-11-14"},{"lineNumber":406,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    15. bye\");","lastModifiedDate":"2021-11-14"},{"lineNumber":407,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"        \u003e\u003e end your friendly Duke chat box\");","lastModifiedDate":"2021-11-11"},{"lineNumber":408,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-14"},{"lineNumber":409,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":410,"author":{"gitId":"EndireKT"},"content":"    // Error Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-10-01"},{"lineNumber":411,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":412,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-11"},{"lineNumber":413,"author":{"gitId":"EndireKT"},"content":"     * Display message when a progress file fail to load","lastModifiedDate":"2021-11-11"},{"lineNumber":414,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-11"},{"lineNumber":415,"author":{"gitId":"EndireKT"},"content":"    public static void msgUnableToLoadProgress() {","lastModifiedDate":"2021-11-11"},{"lineNumber":416,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\" \u003e\u003e Fail to load progress. New Task List is created \u003c\u003c\");","lastModifiedDate":"2021-11-11"},{"lineNumber":417,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-11"},{"lineNumber":418,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":419,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":420,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":421,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":422,"author":{"gitId":"EndireKT"},"content":"     * Display message when a task is marked as done","lastModifiedDate":"2021-11-01"},{"lineNumber":423,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":424,"author":{"gitId":"EndireKT"},"content":"     * @param e Exception error","lastModifiedDate":"2021-11-01"},{"lineNumber":425,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":426,"author":{"gitId":"EndireKT"},"content":"    public static void msgError(Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":427,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"Error Occurs: \" + e);","lastModifiedDate":"2021-10-01"},{"lineNumber":428,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-01"},{"lineNumber":429,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":430,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":431,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":432,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":434,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInput() {","lastModifiedDate":"2021-11-09"},{"lineNumber":435,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    Sorry :(   Invalid Input. Try Again ~ \");","lastModifiedDate":"2021-09-30"},{"lineNumber":436,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":440,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"EndireKT"},"content":"     * Description of the task is missing","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInputMissingDescription() {","lastModifiedDate":"2021-11-09"},{"lineNumber":444,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":445,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-01"},{"lineNumber":446,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":447,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":448,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"EndireKT"},"content":"     * Date of the task is missing","lastModifiedDate":"2021-11-01"},{"lineNumber":451,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInputMissingDate() {","lastModifiedDate":"2021-11-14"},{"lineNumber":453,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! The date cannot be empty.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":454,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-01"},{"lineNumber":455,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":456,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":457,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"EndireKT"},"content":"     * Time of the task is missing","lastModifiedDate":"2021-11-01"},{"lineNumber":460,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":461,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInputMissingTime() {","lastModifiedDate":"2021-11-09"},{"lineNumber":462,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! The time cannot be empty.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":463,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-01"},{"lineNumber":464,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":465,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":466,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":467,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"EndireKT"},"content":"     * The task number is not found","lastModifiedDate":"2021-11-08"},{"lineNumber":469,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":470,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidTaskNumber() {","lastModifiedDate":"2021-11-09"},{"lineNumber":471,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! The task number is invalid.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":472,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-01"},{"lineNumber":473,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":474,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":475,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":476,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":477,"author":{"gitId":"EndireKT"},"content":"     * The priority is invalid","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidPriority() {","lastModifiedDate":"2021-11-09"},{"lineNumber":480,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! The priority is invalid. Choose 1, 2 or 3\");","lastModifiedDate":"2021-11-14"},{"lineNumber":481,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-01"},{"lineNumber":482,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":483,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":484,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"EndireKT"},"content":"     * Format of the date is unaccepted","lastModifiedDate":"2021-11-01"},{"lineNumber":487,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":488,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInputWrongDateTimeFormat() {","lastModifiedDate":"2021-11-09"},{"lineNumber":489,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! Please follow this format:\");","lastModifiedDate":"2021-11-14"},{"lineNumber":490,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    /by yyyy-mm-dd hh:mm\");","lastModifiedDate":"2021-10-31"},{"lineNumber":491,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-31"},{"lineNumber":492,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":493,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":494,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":495,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":496,"author":{"gitId":"EndireKT"},"content":"     * Format of the date and time is unaccepted","lastModifiedDate":"2021-11-01"},{"lineNumber":497,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":498,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInputWrongDateTimeStartEndFormat() {","lastModifiedDate":"2021-11-09"},{"lineNumber":499,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! Please follow this format:\");","lastModifiedDate":"2021-11-14"},{"lineNumber":500,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    /at yyyy-mm-dd hh:mm hh:mm:\");","lastModifiedDate":"2021-10-31"},{"lineNumber":501,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-31"},{"lineNumber":502,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":503,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":504,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":505,"author":{"gitId":"EndireKT"},"content":"     * Display message that remind user about invalid input","lastModifiedDate":"2021-11-01"},{"lineNumber":506,"author":{"gitId":"EndireKT"},"content":"     * Start time should be before End time","lastModifiedDate":"2021-11-01"},{"lineNumber":507,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":508,"author":{"gitId":"EndireKT"},"content":"    public static void msgInvalidInputTimeStartLaterThanTimeEnd() {","lastModifiedDate":"2021-11-09"},{"lineNumber":509,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! Event start time cannot be later than end time!\");","lastModifiedDate":"2021-11-14"},{"lineNumber":510,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-10-31"},{"lineNumber":511,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":512,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":513,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":514,"author":{"gitId":"EndireKT"},"content":"     * Display message about task list being empty","lastModifiedDate":"2021-11-12"},{"lineNumber":515,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":516,"author":{"gitId":"EndireKT"},"content":"    public static void msgTaskListIsEmpty() {","lastModifiedDate":"2021-11-14"},{"lineNumber":517,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"    OOPS!!! The task list is empty.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":518,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-11"},{"lineNumber":519,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":520,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":521,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":522,"author":{"gitId":"EndireKT"},"content":"     * Display message when buddha.txt fails to load","lastModifiedDate":"2021-11-12"},{"lineNumber":523,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":524,"author":{"gitId":"EndireKT"},"content":"    public static void msgUnableToLoadBuddha() {","lastModifiedDate":"2021-11-12"},{"lineNumber":525,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\" \u003e\u003e Buddha Protection is under maintenance \u003c\u003c\");","lastModifiedDate":"2021-11-11"},{"lineNumber":526,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-11-11"},{"lineNumber":527,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-11"},{"lineNumber":528,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":529,"author":{"gitId":"EndireKT"},"content":"    // Ending Messages \u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c","lastModifiedDate":"2021-10-01"},{"lineNumber":530,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":531,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":532,"author":{"gitId":"EndireKT"},"content":"     * Display message before the end of program","lastModifiedDate":"2021-11-01"},{"lineNumber":533,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":534,"author":{"gitId":"EndireKT"},"content":"    public static void msgBye() {","lastModifiedDate":"2021-11-11"},{"lineNumber":535,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":536,"author":{"gitId":"EndireKT"},"content":"        System.out.println(\"_________________________________\");","lastModifiedDate":"2021-09-28"},{"lineNumber":537,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":538,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":539,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":540,"author":{"gitId":"EndireKT"},"content":"     * Display buddha.txt before the end of program","lastModifiedDate":"2021-11-11"},{"lineNumber":541,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":542,"author":{"gitId":"EndireKT"},"content":"    public static void msgBuddha(String buddhaText) {","lastModifiedDate":"2021-11-11"},{"lineNumber":543,"author":{"gitId":"EndireKT"},"content":"        System.out.println(buddhaText);","lastModifiedDate":"2021-11-11"},{"lineNumber":544,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":545,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"EndireKT":545}},{"path":"src/main/java/duke/ui/MsgTaskDetail.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.ui;","lastModifiedDate":"2021-11-10"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-11-10"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskPriority;","lastModifiedDate":"2021-11-10"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-11-10"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" * Ui class that display message about a task","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"public class MsgTaskDetail {","lastModifiedDate":"2021-11-10"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    private static TaskList myList;","lastModifiedDate":"2021-11-10"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    private static int taskIndex;","lastModifiedDate":"2021-11-10"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    private static String taskTypeInString;","lastModifiedDate":"2021-11-10"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    private static String isDoneInString;","lastModifiedDate":"2021-11-10"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    private static String taskDetail;","lastModifiedDate":"2021-11-10"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    private static String taskPriorityInString;","lastModifiedDate":"2021-11-10"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    private static String year;","lastModifiedDate":"2021-11-10"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    private static String month;","lastModifiedDate":"2021-11-10"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    private static String day;","lastModifiedDate":"2021-11-10"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"    private static String timeStart;","lastModifiedDate":"2021-11-10"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    private static String timeEnd;","lastModifiedDate":"2021-11-10"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"     * Constructor","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"    public MsgTaskDetail(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-10"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2021-11-10"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-11-10"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        taskTypeInString \u003d getTaskTypeInString(myList, taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"        isDoneInString \u003d getIsDoneInString(myList, taskIndex);","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        taskDetail \u003d getTaskDetail(myList, taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        taskPriorityInString \u003d getTaskPriority(myList, taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"     * Show task detail based on the task type","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"    public static void showTaskDetail() {","lastModifiedDate":"2021-11-10"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"        TaskType taskType \u003d myList.getTaskType(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"        switch (taskType) {","lastModifiedDate":"2021-11-10"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"        case TODOS:","lastModifiedDate":"2021-11-10"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"            showTaskTodo();","lastModifiedDate":"2021-11-10"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-10"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"        case EVENT:","lastModifiedDate":"2021-11-10"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"            showTaskEvent(myList, taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-10"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"        case DEADLINE:","lastModifiedDate":"2021-11-10"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"            showTaskDeadline(myList, taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-10"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"        default:","lastModifiedDate":"2021-11-10"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"            break;","lastModifiedDate":"2021-11-11"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"     * Show task detail of TODO type","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"    private static void showTaskTodo() {","lastModifiedDate":"2021-11-10"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"        Message.msgTaskTodo(taskTypeInString, isDoneInString, taskDetail, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"     * Show task detail of EVENT type","lastModifiedDate":"2021-11-12"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"    private static void showTaskEvent(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-10"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"        year \u003d myList.getTaskEventTaskDateYearInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"        month \u003d myList.getTaskEventTaskDateMonthInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"        day \u003d myList.getTaskEventTaskDateDayInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"        timeStart \u003d myList.getTaskEventTaskTimeStartInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"        timeEnd \u003d myList.getTaskEventTaskTimeEndInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"        if (timeStart.equals(\"null\") \u0026\u0026 timeEnd.equals(\"null\")) {","lastModifiedDate":"2021-11-10"},{"lineNumber":80,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskEvent(taskTypeInString, isDoneInString, taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":81,"author":{"gitId":"EndireKT"},"content":"                    year, month, day, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":82,"author":{"gitId":"EndireKT"},"content":"        } else if (timeEnd.equals(\"null\")) {","lastModifiedDate":"2021-11-10"},{"lineNumber":83,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskEvent(taskTypeInString, isDoneInString, taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":84,"author":{"gitId":"EndireKT"},"content":"                    year, month, day, timeStart, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":85,"author":{"gitId":"EndireKT"},"content":"        } else {","lastModifiedDate":"2021-11-10"},{"lineNumber":86,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskEvent(taskTypeInString, isDoneInString, taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":87,"author":{"gitId":"EndireKT"},"content":"                    year, month, day, timeStart, timeEnd, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":88,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":89,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":90,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":91,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":92,"author":{"gitId":"EndireKT"},"content":"     * Show task detail of DEADLINE type","lastModifiedDate":"2021-11-12"},{"lineNumber":93,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":94,"author":{"gitId":"EndireKT"},"content":"    private static void showTaskDeadline(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-10"},{"lineNumber":95,"author":{"gitId":"EndireKT"},"content":"        year \u003d myList.getTaskDeadLineTaskDateYearInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":96,"author":{"gitId":"EndireKT"},"content":"        month \u003d myList.getTaskDeadLineTaskDateMonthInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":97,"author":{"gitId":"EndireKT"},"content":"        day \u003d myList.getTaskDeadLineTaskDateDayInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":98,"author":{"gitId":"EndireKT"},"content":"        timeStart \u003d myList.getTaskDeadLineTaskTimeInString(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":99,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":100,"author":{"gitId":"EndireKT"},"content":"        if (timeStart.equals(\"null\")) {","lastModifiedDate":"2021-11-10"},{"lineNumber":101,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskDeadline(taskTypeInString, isDoneInString, taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":102,"author":{"gitId":"EndireKT"},"content":"                    year, month, day, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":103,"author":{"gitId":"EndireKT"},"content":"        } else {","lastModifiedDate":"2021-11-10"},{"lineNumber":104,"author":{"gitId":"EndireKT"},"content":"            Message.msgTaskDeadline(taskTypeInString, isDoneInString, taskDetail,","lastModifiedDate":"2021-11-10"},{"lineNumber":105,"author":{"gitId":"EndireKT"},"content":"                    year, month, day, timeStart, taskPriorityInString);","lastModifiedDate":"2021-11-10"},{"lineNumber":106,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-10"},{"lineNumber":107,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":108,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":109,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":110,"author":{"gitId":"EndireKT"},"content":"     * Get task type in string","lastModifiedDate":"2021-11-12"},{"lineNumber":111,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":112,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":113,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":114,"author":{"gitId":"EndireKT"},"content":"     * @return String that describes the task type","lastModifiedDate":"2021-11-12"},{"lineNumber":115,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":116,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskTypeInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":117,"author":{"gitId":"EndireKT"},"content":"        TaskType taskType \u003d myList.getTaskType(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":118,"author":{"gitId":"EndireKT"},"content":"        return TaskType.taskTypeToString(taskType);","lastModifiedDate":"2021-11-10"},{"lineNumber":119,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":120,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":121,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":122,"author":{"gitId":"EndireKT"},"content":"     * Get isDone status in string","lastModifiedDate":"2021-11-12"},{"lineNumber":123,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":124,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":125,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":126,"author":{"gitId":"EndireKT"},"content":"     * @return String that describes the is done status","lastModifiedDate":"2021-11-12"},{"lineNumber":127,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":128,"author":{"gitId":"EndireKT"},"content":"    private static String getIsDoneInString(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-12"},{"lineNumber":129,"author":{"gitId":"EndireKT"},"content":"        boolean isDone \u003d myList.getTaskDoneStatus(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":130,"author":{"gitId":"EndireKT"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-11-10"},{"lineNumber":131,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":132,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":133,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":134,"author":{"gitId":"EndireKT"},"content":"     * Get task detail in string","lastModifiedDate":"2021-11-12"},{"lineNumber":135,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":136,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":137,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":138,"author":{"gitId":"EndireKT"},"content":"     * @return String that describes the task detail","lastModifiedDate":"2021-11-12"},{"lineNumber":139,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":140,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskDetail(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-10"},{"lineNumber":141,"author":{"gitId":"EndireKT"},"content":"        return myList.getTaskDetail(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":142,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":143,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-10"},{"lineNumber":144,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":145,"author":{"gitId":"EndireKT"},"content":"     * Get task priority in string","lastModifiedDate":"2021-11-12"},{"lineNumber":146,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":147,"author":{"gitId":"EndireKT"},"content":"     * @param myList    TaskList that contains the list of task","lastModifiedDate":"2021-11-12"},{"lineNumber":148,"author":{"gitId":"EndireKT"},"content":"     * @param taskIndex Int that represents the index of the task","lastModifiedDate":"2021-11-12"},{"lineNumber":149,"author":{"gitId":"EndireKT"},"content":"     * @return String that describes the priority of a task","lastModifiedDate":"2021-11-12"},{"lineNumber":150,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":151,"author":{"gitId":"EndireKT"},"content":"    private static String getTaskPriority(TaskList myList, int taskIndex) {","lastModifiedDate":"2021-11-10"},{"lineNumber":152,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriority \u003d myList.getTaskPriority(taskIndex);","lastModifiedDate":"2021-11-10"},{"lineNumber":153,"author":{"gitId":"EndireKT"},"content":"        return TaskPriority.convertPriorityToString(taskPriority);","lastModifiedDate":"2021-11-10"},{"lineNumber":154,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-10"},{"lineNumber":155,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-10"}],"authorContributionMap":{"EndireKT":155}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-09"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":" * Interface class for User Interface","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":" *","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":" * @author Kang Teng","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":" * @version 8.0","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":" * @since 2021-09-01","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"public class Ui {","lastModifiedDate":"2021-11-09"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    public Ui() {","lastModifiedDate":"2021-11-09"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    /**","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"     * request user input and read the input string","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"     *","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"     * @param scanner Scanner that read user input","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"     */","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    public String requestUserInput(Scanner scanner) {","lastModifiedDate":"2021-11-10"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-11-09"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"        try {","lastModifiedDate":"2021-11-09"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"            Message.msgArrowHead();","lastModifiedDate":"2021-11-10"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-11-10"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-11-09"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"            Message.msgError(e);","lastModifiedDate":"2021-11-09"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"        }","lastModifiedDate":"2021-11-09"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        return userInput;","lastModifiedDate":"2021-11-09"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-09"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"EndireKT":37}},{"path":"src/resources/FutureImporvement.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"Level 8:","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"1. date time should accept other format. for now cannot.","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"2. Stretch goal: Use dates and times in more meaningful ways. e.g., add a command to print deadlines/events occurring on a specific date.","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"3. save the time and date","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"4. JUnit Test buggy","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"5. Read JUnit Basic","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"EndireKT":6}},{"path":"src/resources/buddha.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"//","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"//                       _oo0oo_","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"//                      o8888888o","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"//                      88\" . \"88","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"//                      (| -_- |)","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"//                      0\\  \u003d  /0","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"//                    ___/`---\u0027\\___","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"//                  .\u0027 \\\\|     |// \u0027.","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"//                 / \\\\|||  :  |||// \\","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"//                / _||||| -:- |||||- \\","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"//               |   | \\\\\\  -  /// |   |","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"//               | \\_|  \u0027\u0027\\---/\u0027\u0027  |_/ |","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"//               \\  .-\\__  \u0027-\u0027  ___/-. /","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"//             ___\u0027. .\u0027  /--.--\\  `. .\u0027___","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"//          .\"\" \u0027\u003c  `.___\\_\u003c|\u003e_/___.\u0027 \u003e\u0027 \"\".","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"//         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"//         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"//     \u003d\u003d\u003d\u003d\u003d`-.____`.___ \\_____/___.-`___.-\u0027\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"//                       `\u003d---\u003d\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"//","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"//","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"//     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"//     Buddha Protect Me       Say Bye to All Bug","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"//     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"EndireKT":24}},{"path":"src/resources/progress_backup.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"0|E|0|project meeting|1|2001-01-25|null|null|;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"1|E|0|project meeting|3|2002-06-25|18:00|null|;","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"2|E|0|project meeting|3|2002-06-25|18:00|19:00|;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"3|D|0|return book|3|2010-01-25|null|;","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"4|D|0|return book|3|2011-02-25|06:00|;","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"EndireKT":5}},{"path":"src/test/java/duke/SampleTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.util.List;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Assumptions;","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"public class SampleTest {","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"    @DisplayName(\"Sample JUnit Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Sample Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Sample Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"    public void dummyFailTest() {","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        assertEquals(2, 1);","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Sample Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"    public void shouldShowSimpleAssertion() {","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"        assertEquals(1, 1);","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"        assertEquals(1, 2);","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"    @DisplayName(\"Should check all items in the list\")","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Sample Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"    public void shouldCheckAllItemsInTheList() {","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"        List\u003cInteger\u003e numbers \u003d List.of(2, 3, 5, 7);","lastModifiedDate":"2021-11-12"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"                assertEquals(2, numbers.get(0)), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"                assertEquals(300, numbers.get(1)), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"                assertEquals(5, numbers.get(2)), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"                assertEquals(700, numbers.get(3)));","lastModifiedDate":"2021-11-12"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"    @DisplayName(\"Should only run the test if some criteria are met 1\")","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Sample Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"    void shouldOnlyRunTheTestIfSomeCriteriaAreMet1() {","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"        Assumptions.assumeTrue(13 \u003e 10);","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"        assertEquals(2, 1);","lastModifiedDate":"2021-11-12"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    @DisplayName(\"Should only run the test if some criteria are met 2\")","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Sample Test\")","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    void shouldOnlyRunTheTestIfSomeCriteriaAreMet2() {","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"        Assumptions.assumeTrue(13 \u003c 10);","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        assertEquals(2, 1);","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"EndireKT":64}},{"path":"src/test/java/duke/action/ParseProgressTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.action;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"class ParseProgressTest {","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Unknown JUnit behaviour\")","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"    void testSplitStringIntoSentence() {","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"        String input \u003d \"HelloWorld\";","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"        String[] expected \u003d {\"HelloWorld\"};","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"        assertEquals(expected, input);","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    @Disabled(\"Unknown JUnit behaviour\")","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    void splitSentenceByBarSeparator() {","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"        String input \u003d \"HelloWorld\";","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"        String[] expected \u003d {\"HelloWorld\"};","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"        assertEquals(expected, input);","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"EndireKT":25}},{"path":"src/test/java/duke/task/TaskPriorityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.util.List;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"class TaskPriorityTest {","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"    void testIsHigherPriority() {","lastModifiedDate":"2021-11-12"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriorityHigh \u003d TaskPriority.HIGH;","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"        TaskPriority taskPriorityLow \u003d TaskPriority.LOW;","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"        assertEquals(true, TaskPriority.isHigherPriority(taskPriorityHigh, taskPriorityLow));","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"    void testConvertIntToPriority() {","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"        List\u003cInteger\u003e priorities \u003d List.of(1, 2, 3, 4, 100, 0);","lastModifiedDate":"2021-11-12"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.HIGH, TaskPriority.convertIntToPriority(priorities.get(0))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.MEDIUM, TaskPriority.convertIntToPriority(priorities.get(1))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.LOW, TaskPriority.convertIntToPriority(priorities.get(2))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.INVALID, TaskPriority.convertIntToPriority(priorities.get(3))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.INVALID, TaskPriority.convertIntToPriority(priorities.get(4))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.INVALID, TaskPriority.convertIntToPriority(priorities.get(5))));","lastModifiedDate":"2021-11-12"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"    void testConvertStringToPriority() {","lastModifiedDate":"2021-11-12"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"        List\u003cString\u003e priorities \u003d List.of(\"1\", \"2\", \"3\", \"4\", \"100\", \"0\");","lastModifiedDate":"2021-11-12"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.HIGH, TaskPriority.convertStringToPriority(priorities.get(0))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.MEDIUM, TaskPriority.convertStringToPriority(priorities.get(1))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.LOW, TaskPriority.convertStringToPriority(priorities.get(2))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.INVALID, TaskPriority.convertStringToPriority(priorities.get(3))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.INVALID, TaskPriority.convertStringToPriority(priorities.get(4))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"                assertEquals(TaskPriority.INVALID, TaskPriority.convertStringToPriority(priorities.get(5))));","lastModifiedDate":"2021-11-12"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"    void testConvertPriorityToInt() {","lastModifiedDate":"2021-11-12"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"        List\u003cTaskPriority\u003e priorities \u003d List.of(TaskPriority.LOW,","lastModifiedDate":"2021-11-12"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"                TaskPriority.MEDIUM, TaskPriority.HIGH, TaskPriority.INVALID);","lastModifiedDate":"2021-11-12"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"                assertEquals(3, TaskPriority.convertPriorityToInt(priorities.get(0))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"                assertEquals(2, TaskPriority.convertPriorityToInt(priorities.get(1))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"                assertEquals(1, TaskPriority.convertPriorityToInt(priorities.get(2))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"                assertEquals(0, TaskPriority.convertPriorityToInt(priorities.get(3))));","lastModifiedDate":"2021-11-12"},{"lineNumber":56,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":57,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":58,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":59,"author":{"gitId":"EndireKT"},"content":"    void testConvertPriorityToString() {","lastModifiedDate":"2021-11-12"},{"lineNumber":60,"author":{"gitId":"EndireKT"},"content":"        List\u003cTaskPriority\u003e priorities \u003d List.of(TaskPriority.LOW,","lastModifiedDate":"2021-11-12"},{"lineNumber":61,"author":{"gitId":"EndireKT"},"content":"                TaskPriority.MEDIUM, TaskPriority.HIGH, TaskPriority.INVALID);","lastModifiedDate":"2021-11-12"},{"lineNumber":62,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":63,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":64,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"LOW\", TaskPriority.convertPriorityToString(priorities.get(0))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":65,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"MEDIUM\", TaskPriority.convertPriorityToString(priorities.get(1))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":66,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"HIGH\", TaskPriority.convertPriorityToString(priorities.get(2))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":67,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"INVALID\", TaskPriority.convertPriorityToString(priorities.get(3))));","lastModifiedDate":"2021-11-12"},{"lineNumber":68,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":69,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":70,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":71,"author":{"gitId":"EndireKT"},"content":"    void testToStringInNumber() {","lastModifiedDate":"2021-11-12"},{"lineNumber":72,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":73,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":74,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"3\", TaskPriority.LOW.toStringInNumber()), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":75,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"2\", TaskPriority.MEDIUM.toStringInNumber()), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":76,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"1\", TaskPriority.HIGH.toStringInNumber()), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"0\", TaskPriority.INVALID.toStringInNumber()));","lastModifiedDate":"2021-11-12"},{"lineNumber":78,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":79,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"EndireKT":79}},{"path":"src/test/java/duke/task/TaskTypeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"package duke.task;","lastModifiedDate":"2021-11-12"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-12"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"import java.util.List;","lastModifiedDate":"2021-11-12"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-12"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"class TaskTypeTest {","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"    @Test","lastModifiedDate":"2021-11-12"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"    void testTaskTypeToStringtaskTypeString() {","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"        List\u003cTaskType\u003e types \u003d List.of(TaskType.TODOS, TaskType.DEADLINE, TaskType.EVENT);","lastModifiedDate":"2021-11-12"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"        Assertions.assertAll(() -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"T\", TaskType.taskTypeToString(types.get(0))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"D\", TaskType.taskTypeToString(types.get(1))), () -\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"                assertEquals(\"E\", TaskType.taskTypeToString(types.get(2))));","lastModifiedDate":"2021-11-12"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"    }","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"}","lastModifiedDate":"2021-11-12"}],"authorContributionMap":{"EndireKT":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EndireKT"},"content":"todo borrow book","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"EndireKT"},"content":"event project meeting/at 2001-01-25","lastModifiedDate":"2021-11-10"},{"lineNumber":3,"author":{"gitId":"EndireKT"},"content":"event project meeting/at 2002-06-25 18:00","lastModifiedDate":"2021-11-10"},{"lineNumber":4,"author":{"gitId":"EndireKT"},"content":"event project meeting/at 2002-06-25 18:00 19:00","lastModifiedDate":"2021-11-10"},{"lineNumber":5,"author":{"gitId":"EndireKT"},"content":"deadline return book/by 2010-01-25","lastModifiedDate":"2021-11-10"},{"lineNumber":6,"author":{"gitId":"EndireKT"},"content":"deadline return book/by 2011-02-25 06:00","lastModifiedDate":"2021-11-10"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"list","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"EndireKT"},"content":"set","lastModifiedDate":"2021-11-10"},{"lineNumber":9,"author":{"gitId":"EndireKT"},"content":"2","lastModifiedDate":"2021-11-10"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"1","lastModifiedDate":"2021-11-10"},{"lineNumber":11,"author":{"gitId":"EndireKT"},"content":"done 2","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"EndireKT"},"content":"list","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"EndireKT"},"content":"undone 2","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"EndireKT"},"content":"list","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"EndireKT"},"content":"find meeting","lastModifiedDate":"2021-11-12"},{"lineNumber":16,"author":{"gitId":"EndireKT"},"content":"info","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"EndireKT"},"content":"delete 1","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"EndireKT"},"content":"save","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"EndireKT"},"content":"list","lastModifiedDate":"2021-11-12"},{"lineNumber":20,"author":{"gitId":"EndireKT"},"content":"save","lastModifiedDate":"2021-11-12"},{"lineNumber":21,"author":{"gitId":"EndireKT"},"content":"bye","lastModifiedDate":"2021-11-12"},{"lineNumber":22,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"EndireKT"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"EndireKT"},"content":"dfd gsfdg","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"EndireKT"},"content":"XXXX","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"EndireKT"},"content":"to do something","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"EndireKT"},"content":"todo","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"EndireKT"},"content":"event","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"EndireKT"},"content":"deadline","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"EndireKT"},"content":"event project meeting sometime later","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"EndireKT"},"content":"deadline project meeting sometime later","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"EndireKT"},"content":"event project meeting/at 2001 jan 15","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"EndireKT"},"content":"deadline project meeting/by 2001 jan 15","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"EndireKT"},"content":"event project meeting/at 2002-06-25 1800","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"EndireKT"},"content":"deadline return book/by 2011-02-25 0600","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"EndireKT"},"content":"event project meeting/at 2002-06-25 19:00 18:00","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"EndireKT"},"content":"list abc","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"EndireKT"},"content":"set abc","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"EndireKT"},"content":"set","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"EndireKT"},"content":"100","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"EndireKT"},"content":"-1","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"EndireKT"},"content":"-1","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"EndireKT"},"content":"abc","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"EndireKT"},"content":"100","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"EndireKT"},"content":"1","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"EndireKT"},"content":"done 100","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"EndireKT"},"content":"undone 100","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"EndireKT"},"content":"done aaa","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"EndireKT"},"content":"undone aaa","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"EndireKT"},"content":"find","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"EndireKT"},"content":"find Meeting","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"EndireKT"},"content":"find meeeeeeting","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"EndireKT"},"content":"delete","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"EndireKT"},"content":"delete 0","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"EndireKT"},"content":"delete -1","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"EndireKT":55}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"EndireKT"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-11-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"EndireKT"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-11-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"EndireKT":2}}]
