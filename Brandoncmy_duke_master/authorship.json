[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"    mainClassName \u003d \"seedu.duke.scale.Duke\"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Brandoncmy":1,"-":45}},{"path":"src/main/java/duke/BeforeOOP.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import java.io.File;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"public class BeforeOOP {                                                                         // Week 8 - level 7 - done//","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    public static void printTaskList(ArrayList\u003cTask\u003e item){","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"_________________________________________________\");","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"        for (Task list : taskList){","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(i+1 + \".\" + \"[\" + taskList.get(i).getType() + \"]\" + taskList.get(i).getStatusIcon() + taskList.get(i).description);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"            i++;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"_________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    public static void printDeleteTask(int index){","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"_________________________________________________\");","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"\\t\" + taskList.get(index).getType() + taskList.get(index).getStatusIcon() + taskList.get(index).description);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"Now you have \" + (taskList.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"_________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"    private static void appendToFile(String filePath, ArrayList\u003cTask\u003e item) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"        for (Task list : taskList){","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"            fw.write(taskList.get(i).getType() + \" | \" + taskList.get(i).isDone + \" | \" + taskList.get(i).description + \u0027\\n\u0027);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"            i++;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"        fw.close();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"        // create file //","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"        File duke \u003d new File(\"duke.txt\");","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"        checkFile(duke);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Brandoncmy"},"content":"        printGreet(); // start //","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"Brandoncmy"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"Brandoncmy"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"Brandoncmy"},"content":"        String input \u003d \"User input\";","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"Brandoncmy"},"content":"        String firstInput \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Brandoncmy"},"content":"        firstInput.toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"Brandoncmy"},"content":"        while (input !\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Brandoncmy"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Brandoncmy"},"content":"            firstInput \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"Brandoncmy"},"content":"            firstInput.toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Brandoncmy"},"content":"            if (firstInput.equalsIgnoreCase(\"bye\")){                                                                      // \"exit\"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Brandoncmy"},"content":"                printExit();   //exit//","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Brandoncmy"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"Brandoncmy"},"content":"            }else if (firstInput.equalsIgnoreCase(\"list\")){                                                       // print \"list\"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Brandoncmy"},"content":"                printTaskList(taskList);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Brandoncmy"},"content":"            }else if (firstInput.equalsIgnoreCase(\"delete\")){                                                     // print \"delete\"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"Brandoncmy"},"content":"                String deleteNum \u003d input.split(\" \")[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"Brandoncmy"},"content":"                int d_num \u003d Integer.parseInt(deleteNum) - 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"Brandoncmy"},"content":"                printDeleteTask(d_num);","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"Brandoncmy"},"content":"                taskList.remove(d_num);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Brandoncmy"},"content":"            }else if (firstInput.equalsIgnoreCase(\"done\")){                                                       // make \"done\"","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Brandoncmy"},"content":"                String taskNum \u003d input.split(\" \")[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Brandoncmy"},"content":"                int num \u003d Integer.parseInt(taskNum) - 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Brandoncmy"},"content":"                if (taskList.get(num).description !\u003d  null){","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Brandoncmy"},"content":"                    taskList.get(num).markAsDone();                                                                            //list : mark as done","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"Brandoncmy"},"content":"                    System.out.println(\"_________________________________________________\");","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"Brandoncmy"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + taskList.get(num).getStatusIcon() + taskList.get(num).description);","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"Brandoncmy"},"content":"                    System.out.println(\"_________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"Brandoncmy"},"content":"                }else{","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"Brandoncmy"},"content":"                    System.out.println(\"There is no task #\" + num);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"Brandoncmy"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"Brandoncmy"},"content":"                if (checkError(input)) {continue;}","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"Brandoncmy"},"content":"                String taskDescription \u003d input.substring(firstInput.length(), input.length());                              // keep task description","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"Brandoncmy"},"content":"                    switch (firstInput) {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"Brandoncmy"},"content":"                        case \"todo\":","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"Brandoncmy"},"content":"                            Todo t \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"Brandoncmy"},"content":"                            t.type \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"Brandoncmy"},"content":"                            taskList.add(t);","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"Brandoncmy"},"content":"                            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"Brandoncmy"},"content":"                        case \"deadline\":","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"Brandoncmy"},"content":"                            Deadline d \u003d new Deadline(taskDescription);","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"Brandoncmy"},"content":"                            d.type \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"Brandoncmy"},"content":"                            taskList.add(d);","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"Brandoncmy"},"content":"                            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"Brandoncmy"},"content":"                        case \"event\":","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"Brandoncmy"},"content":"                            Event e \u003d new Event(taskDescription);","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"Brandoncmy"},"content":"                            e.type \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"Brandoncmy"},"content":"                            taskList.add(e);","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"Brandoncmy"},"content":"                            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"Brandoncmy"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"Brandoncmy"},"content":"                    System.out.println(\"_________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"Brandoncmy"},"content":"                            + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"Brandoncmy"},"content":"                            + \"\\t\" + \"[\" + taskList.get(taskCount).getType() + \"]\" + taskList.get(taskCount).getStatusIcon() + taskList.get(taskCount).description + \"\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Brandoncmy"},"content":"                            + \"Now you have \" + (taskCount + 1) + \" tasks in the list.\" + \"\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"Brandoncmy"},"content":"                            + \"_________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"Brandoncmy"},"content":"                    taskCount++;","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"Brandoncmy"},"content":"        appendToFile(duke.getAbsolutePath(), taskList);","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Brandoncmy"},"content":"    public static boolean checkFile (File duke){","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Brandoncmy"},"content":"            if (duke.createNewFile()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"Brandoncmy"},"content":"                System.out.println(\"File created: \" + duke.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"Brandoncmy"},"content":"            } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Brandoncmy"},"content":"                System.out.println(\"File already exists.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"File path: \" + duke.getAbsolutePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Brandoncmy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Brandoncmy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Brandoncmy"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"Brandoncmy"},"content":"    public static boolean checkError (String descriptor){","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"Brandoncmy"},"content":"        try{","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"Brandoncmy"},"content":"            checkTask(descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"Brandoncmy"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"Brandoncmy"},"content":"        }catch (IllegalStateException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"______________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"Brandoncmy"},"content":"                    + \"☹ OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"Brandoncmy"},"content":"                    + \"______________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"Brandoncmy"},"content":"        }catch (IllegalCallerException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"______________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"Brandoncmy"},"content":"                    + \"☹ OOPS!!! The description of an event cannot be empty.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"Brandoncmy"},"content":"                    + \"______________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"Brandoncmy"},"content":"        }catch (IllegalAccessError e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"______________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"Brandoncmy"},"content":"                    + \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"Brandoncmy"},"content":"                    + \"______________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"Brandoncmy"},"content":"        }catch (DukeException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"_______________________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"Brandoncmy"},"content":"                    + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"Brandoncmy"},"content":"                    + \"_______________________________________________________________\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"Brandoncmy"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"Brandoncmy"},"content":"    public static boolean checkTask(String taskName) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"Brandoncmy"},"content":"        String firstInput \u003d taskName.split(\" \")[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"Brandoncmy"},"content":"        firstInput.toLowerCase();","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"Brandoncmy"},"content":"        String taskDescription \u003d taskName.substring(firstInput.length(), taskName.length());","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"Brandoncmy"},"content":"        switch (firstInput){","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"Brandoncmy"},"content":"            case \"todo\" :","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"Brandoncmy"},"content":"                if (taskDescription.trim().isEmpty()){","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"Brandoncmy"},"content":"                    throw new IllegalStateException();","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"Brandoncmy"},"content":"                }else{","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"Brandoncmy"},"content":"            case \"event\" :","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"Brandoncmy"},"content":"                if (taskDescription.trim().isEmpty()){","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"Brandoncmy"},"content":"                    throw new IllegalCallerException();","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"Brandoncmy"},"content":"                }else{","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"Brandoncmy"},"content":"            case \"deadline\" :","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"Brandoncmy"},"content":"                if (taskDescription.trim().isEmpty()){","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"Brandoncmy"},"content":"                    throw new IllegalAccessError();","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"Brandoncmy"},"content":"                }else{","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"Brandoncmy"},"content":"            default: throw new DukeException();","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"Brandoncmy"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"Brandoncmy"},"content":"    public static class DukeException extends Exception {","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"Brandoncmy"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"Brandoncmy"},"content":"        public Todo(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"Brandoncmy"},"content":"            super(description);","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"Brandoncmy"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"Brandoncmy"},"content":"        public Deadline(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"Brandoncmy"},"content":"            super(description);","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"Brandoncmy"},"content":"            if (description.contains(\"/by\"))","lastModifiedDate":"2021-10-05"},{"lineNumber":210,"author":{"gitId":"Brandoncmy"},"content":"            this.description \u003d description.replace(\"/by\", \"(by:\") + \")\";","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"Brandoncmy"},"content":"    public static class Event extends Task {","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"Brandoncmy"},"content":"        protected String taskDesc;","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"Brandoncmy"},"content":"        public Event(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"Brandoncmy"},"content":"            super(description);","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"Brandoncmy"},"content":"            if (description.contains(\"/at\")){","lastModifiedDate":"2021-10-05"},{"lineNumber":221,"author":{"gitId":"Brandoncmy"},"content":"                this.description \u003d description.replace(\"/at\", \"(at:\") + \")\";","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":225,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"Brandoncmy"},"content":"    public static class Task {","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"Brandoncmy"},"content":"        protected String description;","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"Brandoncmy"},"content":"        protected String type;","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"Brandoncmy"},"content":"        protected boolean isDone;","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":231,"author":{"gitId":"Brandoncmy"},"content":"        public Task(String description) {","lastModifiedDate":"2021-09-26"},{"lineNumber":232,"author":{"gitId":"Brandoncmy"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-09-26"},{"lineNumber":233,"author":{"gitId":"Brandoncmy"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":234,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":235,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"Brandoncmy"},"content":"        public boolean markAsDone() {","lastModifiedDate":"2021-10-05"},{"lineNumber":237,"author":{"gitId":"Brandoncmy"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"Brandoncmy"},"content":"            return true; // mark done task with X","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":240,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":241,"author":{"gitId":"Brandoncmy"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"Brandoncmy"},"content":"            if (!isDone){","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"Brandoncmy"},"content":"                return (\"[ ] \");","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"Brandoncmy"},"content":"            return (isDone ? \"[X] \" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"Brandoncmy"},"content":"        public String getType(){","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"Brandoncmy"},"content":"            String taskType \u003d this.type;","lastModifiedDate":"2021-09-26"},{"lineNumber":251,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"Brandoncmy"},"content":"            switch (taskType){","lastModifiedDate":"2021-09-26"},{"lineNumber":253,"author":{"gitId":"Brandoncmy"},"content":"                case \"todo\" :","lastModifiedDate":"2021-09-26"},{"lineNumber":254,"author":{"gitId":"Brandoncmy"},"content":"                    type \u003d \"T\";","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":256,"author":{"gitId":"Brandoncmy"},"content":"                case \"deadline\" :","lastModifiedDate":"2021-09-26"},{"lineNumber":257,"author":{"gitId":"Brandoncmy"},"content":"                    type \u003d \"D\";","lastModifiedDate":"2021-10-05"},{"lineNumber":258,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":259,"author":{"gitId":"Brandoncmy"},"content":"                case \"event\" :","lastModifiedDate":"2021-09-26"},{"lineNumber":260,"author":{"gitId":"Brandoncmy"},"content":"                    type \u003d \"E\";","lastModifiedDate":"2021-10-05"},{"lineNumber":261,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-09-26"},{"lineNumber":262,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":263,"author":{"gitId":"Brandoncmy"},"content":"            return type;","lastModifiedDate":"2021-09-26"},{"lineNumber":264,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":265,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":266,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":267,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":268,"author":{"gitId":"Brandoncmy"},"content":"    public static void printGreet(){","lastModifiedDate":"2021-09-26"},{"lineNumber":269,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":270,"author":{"gitId":"Brandoncmy"},"content":"        String greet","lastModifiedDate":"2021-09-26"},{"lineNumber":271,"author":{"gitId":"Brandoncmy"},"content":"                \u003d \"_________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":272,"author":{"gitId":"Brandoncmy"},"content":"                + \"Hello! I\u0027m scale.Duke\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":273,"author":{"gitId":"Brandoncmy"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":274,"author":{"gitId":"Brandoncmy"},"content":"                + \"_________________________________________________\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":275,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":276,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(greet);","lastModifiedDate":"2021-09-26"},{"lineNumber":277,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":278,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":279,"author":{"gitId":"Brandoncmy"},"content":"    public static void printExit(){","lastModifiedDate":"2021-09-26"},{"lineNumber":280,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"Brandoncmy"},"content":"        String exit \u003d \"_________________________________________________\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"Brandoncmy"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":283,"author":{"gitId":"Brandoncmy"},"content":"                + \"_________________________________________________\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":284,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":285,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(exit);","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Brandoncmy":286,"-":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"public class Duke {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"    public void run() {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"            try {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"                ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"            }finally {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"                ui.showOutput();","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":44}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.AddTodoCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.AddEventCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.AddDeadlineCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.DoneCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.ListCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.DeleteCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.FindCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"import duke.commandBase.ByeCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"public class Parser {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"        switch (userInput.split(\" \")[0]) {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"            case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"                return new AddTodoCommand(false, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"            case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"                return new AddEventCommand(false, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"            case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"                return new AddDeadlineCommand(false, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"                return new DoneCommand(false, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"                return new ListCommand(false, \"\"); //just print","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"                return new DeleteCommand(false, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"                return new FindCommand(false, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"                return new ByeCommand(true, userInput);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"            default:","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":37}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.*;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import java.io.File;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"public class Storage {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    private String filePath;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    private File file;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    private Scanner input;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"            input \u003d new Scanner(file);","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"            createFileAndDirectory();","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"    public void createFileAndDirectory() {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"            file.createNewFile();","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"            throw new IOException();","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"Error creating file.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"            for (int i \u003d 0; i \u003c TaskList.TaskLength(); ++i) {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"                String taskType \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"                String date \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"                int isDone \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"                Task task \u003d TaskList.getTaskName(i);","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"Brandoncmy"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"Brandoncmy"},"content":"                    taskType \u003d \"T\";","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Brandoncmy"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Brandoncmy"},"content":"                    taskType \u003d \"E\";","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"Brandoncmy"},"content":"                    date \u003d dateToString(((Event) task).at); //casting","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Brandoncmy"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"Brandoncmy"},"content":"                    taskType \u003d \"D\";","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"Brandoncmy"},"content":"                    date \u003d dateToString(((Deadline) task).by);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"Brandoncmy"},"content":"                if (task.isDone) {","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Brandoncmy"},"content":"                    isDone \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"Brandoncmy"},"content":"                } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"Brandoncmy"},"content":"                    isDone \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"Brandoncmy"},"content":"                if (date.equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"Brandoncmy"},"content":"                    fw.write(taskType + \" | \" + Integer.toString(isDone) + \" | \" + TaskList.getTaskName(i).description + System.lineSeparator());","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"Brandoncmy"},"content":"                } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"Brandoncmy"},"content":"                    fw.write(taskType + \" | \" + Integer.toString(isDone) + \" | \" + TaskList.getTaskName(i).description + \" | \" + date + System.lineSeparator());","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"Brandoncmy"},"content":"                }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"Brandoncmy"},"content":"            fw.close();","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"Brandoncmy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"Brandoncmy"},"content":"            System.out.println(\"Error in saving file.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"Brandoncmy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"Brandoncmy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"Brandoncmy"},"content":"        if (!file.exists() || !file.isFile()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"Brandoncmy"},"content":"            return taskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"Brandoncmy"},"content":"        while (input.hasNextLine()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"Brandoncmy"},"content":"            String line \u003d input.nextLine();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"Brandoncmy"},"content":"            String[] splitLine \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"Brandoncmy"},"content":"            switch (splitLine[0]) {","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"Brandoncmy"},"content":"                case \"T\":","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"Brandoncmy"},"content":"                    Todo newTodo \u003d new Todo(splitLine[2]);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"Brandoncmy"},"content":"                    if (splitLine[1].equals(\"1\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"Brandoncmy"},"content":"                        newTodo.markAsDone();","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"Brandoncmy"},"content":"                    }","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"Brandoncmy"},"content":"                    taskList.add(newTodo);","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"Brandoncmy"},"content":"                case \"E\":","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"Brandoncmy"},"content":"                    Event newEvent \u003d new Event(splitLine[1], stringToDate(splitLine[2]));","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"Brandoncmy"},"content":"                    if (splitLine[1].equals(\"1\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"Brandoncmy"},"content":"                        newEvent.markAsDone();","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"Brandoncmy"},"content":"                    }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"Brandoncmy"},"content":"                    taskList.add(newEvent);","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"Brandoncmy"},"content":"                case \"D\":","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"Brandoncmy"},"content":"                    Deadline newDeadline \u003d new Deadline(splitLine[2], stringToDate(splitLine[3]));","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"Brandoncmy"},"content":"                    if (splitLine[1].equals(\"1\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"Brandoncmy"},"content":"                        newDeadline.markAsDone();","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"Brandoncmy"},"content":"                    }","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"Brandoncmy"},"content":"                    taskList.add(newDeadline);","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"Brandoncmy"},"content":"                    break;","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"Brandoncmy"},"content":"        return taskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime stringToDate(String date) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"Brandoncmy"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"Brandoncmy"},"content":"            return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"Brandoncmy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The date loaded from the file is invalid.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"Brandoncmy"},"content":"    public String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"Brandoncmy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"Brandoncmy"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":129}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"public class Ui {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    private static final String LINE \u003d \"_______________________________________________________\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"    private final Scanner input;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    private String output;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    public Ui() {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"        this(System.in);","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public Ui(InputStream input) {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"        this.input \u003d new Scanner(input);","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    private static boolean ignoreSpace(String rawInputLine) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        return rawInputLine.trim().isEmpty();","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    public static void showWelcome() {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        String logo","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"                \u003d \"\\t ____        _        \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"                + \"\\t|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"                + \"\\t| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"                + \"\\t| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(LINE +","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"                \"\\tHello! I\u0027m \\n\" + logo +","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"                \"\\tWhat can I do for you?\\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"                \"\\tHere are the list of menu: \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"                \"\\t 1. todo ... \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"                \"\\t 2. deadline ... by ... \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"                \"\\t 3. event ... at ... \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"                \"\\t 4. list \u003d to show the item in the list \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"                \"\\t 5. done ...(number) \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"                \"\\t 6. delete ...(number) \\n\" +","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"                LINE);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"        output \u003d LINE + \"Bye. Hope to see you again soon.\\n\" + LINE;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"    public String readCommand() {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"        System.out.println(\"Type: \" );","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"Brandoncmy"},"content":"        String user_input \u003d input.nextLine();","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Brandoncmy"},"content":"        return user_input;","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"Brandoncmy"},"content":"    public String showOutput() {","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"Brandoncmy"},"content":"        return this.output;","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"Brandoncmy"},"content":"    public void showOutputToUser(String output){","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Brandoncmy"},"content":"        this.output \u003d output;","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"Brandoncmy"},"content":"    public String showLoadingError(String errorMessage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"Brandoncmy"},"content":"        return LINE + \":( OOPS!!! \" + errorMessage + \"\\n\" + LINE;","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":68}},{"path":"src/main/java/duke/commandBase/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Deadline;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DEADLINE_MSG \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DEADLINE_MSG1 \u003d \"\\nNow you have \";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DEADLINE_MSG2 \u003d \" in task list.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    protected Deadline deadline;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    public AddDeadlineCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        if (description.substring(8).equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The description of deadline cannot be empty.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        } else if (!description.contains(\"by\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The date cannot be empty.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"        String taskDescription \u003d description.substring(9, description.indexOf(\"by\") - 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"        String taskDate \u003d description.substring(description.indexOf(\"by\") + 3);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"        deadline \u003d new Deadline(taskDescription, stringToDate(taskDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"        taskList.addTaskList(deadline);","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"        assert taskList.TaskLength() \u003e 0; //taskList size should \u003e 0 after adding new task","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"        ui.showOutputToUser(DEADLINE_MSG + deadline.getDescription() + DEADLINE_MSG1 + taskList.TaskLength() + DEADLINE_MSG2);","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"        storage.save();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime stringToDate(String date) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"            return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The format of the date and time is not DD/MM/YYYY HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":49}},{"path":"src/main/java/duke/commandBase/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Event;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    public static final String EVENT_MSG \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    public static final String EVENT_MSG1 \u003d \"\\nNow you have \";","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    public static final String EVENT_MSG2 \u003d \" in task list.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    protected Event event;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"    public AddEventCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"        if (description.substring(5).equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The description of event cannot be empty.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"        } else if (!description.contains(\"at\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The event date cannot be empty.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"        String taskDescription \u003d description.substring(6, description.indexOf(\"at\") - 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"        String taskDate \u003d description.substring(description.indexOf(\"at\") + 3);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"        event \u003d new Event(taskDescription, stringToDate(taskDate));","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"        TaskList.addTaskList(event);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"        assert taskList.TaskLength() \u003e 0; //taskList size should \u003e 0 after adding new task","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"        ui.showOutputToUser(EVENT_MSG + event.getDescription() + EVENT_MSG1 + TaskList.TaskLength() + EVENT_MSG2);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"        storage.save();","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime stringToDate(String date) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"            return LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The format of the date and time is not DD/MM/YYYY HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":50}},{"path":"src/main/java/duke/commandBase/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Todo;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"    public static final String TODO_MSG \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    public static final String TODO_MSG1 \u003d \"Now you have \";","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public static final String TODO_MSG2 \u003d \" in task list.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    protected Todo todo;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    public AddTodoCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"        if (description.substring(4).equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The description of todo cannot be empty.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        todo \u003d new Todo(description.substring(5));","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"        taskList.addTaskList(todo);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        assert taskList.TaskLength() \u003e 0; //taskList size should \u003e 0 after adding new task","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"        ui.showOutputToUser(TODO_MSG + todo.getDescription() + TODO_MSG1 + taskList.TaskLength() + TODO_MSG2);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"        storage.save();","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":33}},{"path":"src/main/java/duke/commandBase/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    public ByeCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":19}},{"path":"src/main/java/duke/commandBase/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DELETE_MSG \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DELETE_MSG1 \u003d \"\\nNow you have \";","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DELETE_MSG2 \u003d \" in task list.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    public DeleteCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"        if (description.substring(7).equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"Which task to delete?\");","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"        index \u003d Integer.parseInt(description.substring(7)) - 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        ui.showOutputToUser(DELETE_MSG + \"\\t\" + taskList.getTaskName(index).getDescription());","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"        taskList.DeleteTask(index);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        //ui.showOutputToUser(DELETE_MSG1 + taskList.length() + DELETE_MSG2);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"        storage.save();","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":32}},{"path":"src/main/java/duke/commandBase/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    public static final String DONE_MSG \u003d \"Nice! I have marked this task as done:\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public DoneCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"        if (description.substring(4).equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"Which task is done?\");","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        index \u003d Integer.parseInt(description.substring(5)) - 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"        (taskList.getTaskName(index)).markAsDone();","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        ui.showOutputToUser(DONE_MSG + taskList.getTaskName(index).getDescription());","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"        storage.save();","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":30}},{"path":"src/main/java/duke/commandBase/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public static final String FIND_MSG \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    public static final String FIND_MSG2 \u003d \"You have no matched task.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    public FindCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"        boolean isMatch \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        List\u003cString\u003e matchedTasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        if (description.substring(4).equals(\"\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The task description of find cannot be empty.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"        description \u003d description.substring(4);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"        for (int i \u003d 0; i \u003c taskList.TaskLength(); i++) {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"            Task task \u003d taskList.getTaskName(i);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"                matchedTasksList.add(task.getDescription());","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"                isMatch \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"        if (isMatch) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"            ui.showOutputToUser(FIND_MSG + getIndexedList(matchedTasksList));","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"            ui.showOutputToUser(FIND_MSG2);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"    public static String getTaskString(int indexToShow, String task){","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"        return String.format( \"%1$d. %2$s\", indexToShow, task);","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Brandoncmy"},"content":"    public static String getIndexedList(List\u003cString\u003e tasks){","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"Brandoncmy"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Brandoncmy"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"Brandoncmy"},"content":"        for (String task : tasks){","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"Brandoncmy"},"content":"            output +\u003d \"\\n\\t\" + getTaskString(index, task);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"Brandoncmy"},"content":"            index++;","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"Brandoncmy"},"content":"        return output;","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":62}},{"path":"src/main/java/duke/commandBase/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.commandBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.taskBase.TaskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public static final String LIST_MSG \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    public ListCommand(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"        super(isExit, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    public static String getTaskString(int indexToShow, String task){","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"        return String.format( \"%1$d. %2$s\", indexToShow, task);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"    public static String getIndexedList(List\u003cString\u003e tasks){","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        for (String task : tasks){","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"            output +\u003d \"\\n\\t\" + getTaskString(index, task);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"            index++;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"        return output;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"    public String getTaskList(TaskList taskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"        List\u003cString\u003e indexedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Brandoncmy"},"content":"        for (int i \u003d 0; i \u003c taskList.TaskLength(); i++) {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Brandoncmy"},"content":"            indexedList.add(taskList.getTaskName(i).getDescription());","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Brandoncmy"},"content":"        return getIndexedList(indexedList);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Brandoncmy"},"content":"        if (taskList.TaskLength() \u003d\u003d 0) {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Brandoncmy"},"content":"            throw new DukeException(\"The task list is empty!\");","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"Brandoncmy"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"Brandoncmy"},"content":"        ui.showOutputToUser(LIST_MSG + getTaskList(taskList));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":53}},{"path":"src/main/java/duke/taskBase/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.taskBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import duke.Storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import duke.Ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"public class Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"    boolean isExit \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    protected String description;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"    public Command(boolean isExit, String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"        return isExit;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"        throw new DukeException(\"No such function yet.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":25}},{"path":"src/main/java/duke/taskBase/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.taskBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime by;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"        super(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"        return \"[D]\" + super.getDescription() + \" (by: \" + dateToString(by) + \")\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        return this.by;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"    public String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":27}},{"path":"src/main/java/duke/taskBase/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.taskBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime at;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"        super(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"        return \"[E]\" + super.getDescription() + \" (at: \" + dateToString(at) + \")\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"        return this.at;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    public String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":28}},{"path":"src/main/java/duke/taskBase/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.taskBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"public class Task {","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"    public String description;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    public boolean isDone;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"        this.isDone \u003d true; // mark done task with \"tick\"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); // mark done task with \"tick\", not doen with \"X\"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"    public String getDescription(){","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        return \"[\" + getStatusIcon() + \"]\" + this.description;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"        return null;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":31}},{"path":"src/main/java/duke/taskBase/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.taskBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"public class TaskList {","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    public static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    public TaskList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Brandoncmy"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Brandoncmy"},"content":"    public static void addTaskList(Task description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Brandoncmy"},"content":"        taskList.add(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Brandoncmy"},"content":"    public static Task DeleteTask(int description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Brandoncmy"},"content":"        return taskList.remove(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Brandoncmy"},"content":"    public static int TaskLength() {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Brandoncmy"},"content":"        return taskList.size();","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Brandoncmy"},"content":"    public static Task getTaskName(int description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Brandoncmy"},"content":"        return taskList.get(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":38}},{"path":"src/main/java/duke/taskBase/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke.taskBase;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"        super(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"    public String getDescription(){","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"        return \"[T]\" + super.getDescription();","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":14}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"package duke;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Brandoncmy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Brandoncmy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Brandoncmy"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Brandoncmy"},"content":"public class TaskTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Brandoncmy"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Brandoncmy"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Brandoncmy"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Brandoncmy"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Brandoncmy"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":12}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Brandoncmy"},"content":"T | 1 | read","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Brandoncmy":1}}]
