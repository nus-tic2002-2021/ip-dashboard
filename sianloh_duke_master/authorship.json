[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"# Duke.Duke project template","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sianloh":2,"-":22}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"import Duke.ExceptionList.*;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"import Duke.TaskList.*;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"import java.io.IOException;  // Import the IOException class to handle errors","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"public class Duke {","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    private Storage storage;","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"    private TaskList tl;","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"    private Ui ui;","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"    public Duke(){","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"sianloh"},"content":"        run();","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"sianloh"},"content":"    private Pattern pattern \u003d Pattern.compile(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"sianloh"},"content":"    public boolean isNumeric(String strNum) {","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"sianloh"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"sianloh"},"content":"            return false;","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"sianloh"},"content":"        return pattern.matcher(strNum).matches();","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"sianloh"},"content":"    public void run() {","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"sianloh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"sianloh"},"content":"        ui.showStartMessage();","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"sianloh"},"content":"        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"sianloh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"sianloh"},"content":"        try {","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"sianloh"},"content":"            tl \u003d new TaskList(storage.load());","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"sianloh"},"content":"         catch (DukeException | IOException e) {","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"sianloh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"sianloh"},"content":"            tl \u003d new TaskList();","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"sianloh"},"content":"        String line, desc, desc2, s1, s2;","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"sianloh"},"content":"        while (true) {","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"sianloh"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"sianloh"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"sianloh"},"content":"            try {","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"sianloh"},"content":"                if (!line.isEmpty()) {","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"sianloh"},"content":"                    desc2 \u003d \"\";","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"sianloh"},"content":"                    if (line.contains(\" \")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"sianloh"},"content":"                        String[] input \u003d line.split(\" \", 2);","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"sianloh"},"content":"                        desc \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"sianloh"},"content":"                        desc2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"sianloh"},"content":"                    } else {","lastModifiedDate":"2021-11-14"},{"lineNumber":56,"author":{"gitId":"sianloh"},"content":"                        desc \u003d line;","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"sianloh"},"content":"                    }","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"sianloh"},"content":"                    if (line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":59,"author":{"gitId":"sianloh"},"content":"                        storage.saveTask(tl);","lastModifiedDate":"2021-11-14"},{"lineNumber":60,"author":{"gitId":"sianloh"},"content":"                        break;","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"sianloh"},"content":"                    }","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"sianloh"},"content":"                    if (line.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"sianloh"},"content":"                        tl.printTaskList();","lastModifiedDate":"2021-11-14"},{"lineNumber":65,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":66,"author":{"gitId":"sianloh"},"content":"                    } else if (desc.equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":67,"author":{"gitId":"sianloh"},"content":"                        if (desc2.isEmpty() || !isNumeric(desc2)){","lastModifiedDate":"2021-11-14"},{"lineNumber":68,"author":{"gitId":"sianloh"},"content":"                            throw new CommandNotFoundException(\"Please enter a number.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":69,"author":{"gitId":"sianloh"},"content":"                        }else if (Integer.parseInt(desc2) \u003e tl.getSize() || Integer.parseInt(desc2) \u003c\u003d 0){","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"sianloh"},"content":"                            throw new CommandNotFoundException(\"Sorry, Please enter a legit number.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":71,"author":{"gitId":"sianloh"},"content":"                        }","lastModifiedDate":"2021-11-14"},{"lineNumber":72,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":73,"author":{"gitId":"sianloh"},"content":"                        int x \u003d Integer.parseInt(desc2);","lastModifiedDate":"2021-11-14"},{"lineNumber":74,"author":{"gitId":"sianloh"},"content":"                        tl.setDoneStatus(x);","lastModifiedDate":"2021-11-14"},{"lineNumber":75,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"sianloh"},"content":"                    } else if (desc.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"sianloh"},"content":"                        if (tl.getSize()\u003d\u003d0){","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"sianloh"},"content":"                            throw new NoListFoundException(\"Sorry, I am unable to delete any task because no task is found.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"sianloh"},"content":"                        }","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"sianloh"},"content":"                        if (desc2.isEmpty()|| !isNumeric(desc2)){","lastModifiedDate":"2021-11-14"},{"lineNumber":81,"author":{"gitId":"sianloh"},"content":"                            throw new CommandNotFoundException(\"Please enter a number.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":82,"author":{"gitId":"sianloh"},"content":"                        }else if (Integer.parseInt(desc2) \u003e tl.getSize() || Integer.parseInt(desc2) \u003c\u003d 0){","lastModifiedDate":"2021-11-14"},{"lineNumber":83,"author":{"gitId":"sianloh"},"content":"                            throw new CommandNotFoundException(\"Sorry, Please enter a legit number.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":84,"author":{"gitId":"sianloh"},"content":"                        }","lastModifiedDate":"2021-11-14"},{"lineNumber":85,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":86,"author":{"gitId":"sianloh"},"content":"                        int x \u003d Integer.parseInt(desc2);","lastModifiedDate":"2021-11-14"},{"lineNumber":87,"author":{"gitId":"sianloh"},"content":"                        System.out.println(\"I\u0027ve deleted this task entered: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"sianloh"},"content":"                        tl.deleteTask(x);","lastModifiedDate":"2021-11-14"},{"lineNumber":89,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":90,"author":{"gitId":"sianloh"},"content":"                    } else if (desc.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":91,"author":{"gitId":"sianloh"},"content":"                        if (desc2.isEmpty()){","lastModifiedDate":"2021-11-14"},{"lineNumber":92,"author":{"gitId":"sianloh"},"content":"                            throw new deadlineNotFoundException(\"Sorry, there cannot be any empty deadline task.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":93,"author":{"gitId":"sianloh"},"content":"                        }","lastModifiedDate":"2021-11-14"},{"lineNumber":94,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":95,"author":{"gitId":"sianloh"},"content":"                        tl.addTask(desc,desc2,false);","lastModifiedDate":"2021-11-14"},{"lineNumber":96,"author":{"gitId":"sianloh"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":97,"author":{"gitId":"sianloh"},"content":"                        System.out.println(tl.getLastAddedTask());","lastModifiedDate":"2021-11-14"},{"lineNumber":98,"author":{"gitId":"sianloh"},"content":"                        ui.printTotalTask(tl.getSize());","lastModifiedDate":"2021-11-14"},{"lineNumber":99,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":100,"author":{"gitId":"sianloh"},"content":"                    } else if (desc.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":101,"author":{"gitId":"sianloh"},"content":"                        if (desc2.isEmpty()){","lastModifiedDate":"2021-11-14"},{"lineNumber":102,"author":{"gitId":"sianloh"},"content":"                            throw new eventNotFoundException(\"Sorry, there cannot be any empty event task.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":103,"author":{"gitId":"sianloh"},"content":"                        }","lastModifiedDate":"2021-11-14"},{"lineNumber":104,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"sianloh"},"content":"                        tl.addTask(desc,desc2,false);","lastModifiedDate":"2021-11-14"},{"lineNumber":106,"author":{"gitId":"sianloh"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":107,"author":{"gitId":"sianloh"},"content":"                        System.out.println(tl.getLastAddedTask());","lastModifiedDate":"2021-11-14"},{"lineNumber":108,"author":{"gitId":"sianloh"},"content":"                        ui.printTotalTask(tl.getSize());","lastModifiedDate":"2021-11-14"},{"lineNumber":109,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":110,"author":{"gitId":"sianloh"},"content":"                    } else if (desc.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":111,"author":{"gitId":"sianloh"},"content":"                        if (desc2.isEmpty()){","lastModifiedDate":"2021-11-14"},{"lineNumber":112,"author":{"gitId":"sianloh"},"content":"                            throw new toDoNotFoundException(\"Sorry, there cannot be any empty todo task.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":113,"author":{"gitId":"sianloh"},"content":"                        }","lastModifiedDate":"2021-11-14"},{"lineNumber":114,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":115,"author":{"gitId":"sianloh"},"content":"                        tl.addTask(desc,desc2,false);","lastModifiedDate":"2021-11-14"},{"lineNumber":116,"author":{"gitId":"sianloh"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":117,"author":{"gitId":"sianloh"},"content":"                        System.out.println(tl.getLastAddedTask());","lastModifiedDate":"2021-11-14"},{"lineNumber":118,"author":{"gitId":"sianloh"},"content":"                        ui.printTotalTask(tl.getSize());","lastModifiedDate":"2021-11-14"},{"lineNumber":119,"author":{"gitId":"sianloh"},"content":"                        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":120,"author":{"gitId":"sianloh"},"content":"                    } else {","lastModifiedDate":"2021-11-14"},{"lineNumber":121,"author":{"gitId":"sianloh"},"content":"                        throw new CommandNotFoundException(\"Sorry, I am unable to handle your request.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":122,"author":{"gitId":"sianloh"},"content":"                    }","lastModifiedDate":"2021-11-14"},{"lineNumber":123,"author":{"gitId":"sianloh"},"content":"                }","lastModifiedDate":"2021-11-14"},{"lineNumber":124,"author":{"gitId":"sianloh"},"content":"            } catch (toDoNotFoundException | CommandNotFoundException | NoListFoundException | deadlineNotFoundException | eventNotFoundException e ) {","lastModifiedDate":"2021-11-14"},{"lineNumber":125,"author":{"gitId":"sianloh"},"content":"                ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":126,"author":{"gitId":"sianloh"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-11-14"},{"lineNumber":127,"author":{"gitId":"sianloh"},"content":"                ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":128,"author":{"gitId":"sianloh"},"content":"                continue;","lastModifiedDate":"2021-11-14"},{"lineNumber":129,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":130,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":131,"author":{"gitId":"sianloh"},"content":"        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":132,"author":{"gitId":"sianloh"},"content":"        ui.printBye();","lastModifiedDate":"2021-11-14"},{"lineNumber":133,"author":{"gitId":"sianloh"},"content":"        ui.printBreak();","lastModifiedDate":"2021-11-14"},{"lineNumber":134,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":135,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":136,"author":{"gitId":"sianloh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-14"},{"lineNumber":137,"author":{"gitId":"sianloh"},"content":"        new Duke();","lastModifiedDate":"2021-11-14"},{"lineNumber":138,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":139,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":139}},{"path":"src/main/java/Duke/ExceptionList/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.ExceptionList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class CommandNotFoundException extends Exception{","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    //no other code needed","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"    public CommandNotFoundException(String message) {","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"        super(message);","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"    public CommandNotFoundException(){","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"        super();","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":11}},{"path":"src/main/java/Duke/ExceptionList/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.ExceptionList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"        super(message);","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    public DukeException(){","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"        super();","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":10}},{"path":"src/main/java/Duke/ExceptionList/NoListFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.ExceptionList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class NoListFoundException extends Exception {","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    //no other code needed","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"    public NoListFoundException(String message) {","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"        super(message);","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"    public NoListFoundException() {","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"        super();","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":12}},{"path":"src/main/java/Duke/ExceptionList/deadlineNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.ExceptionList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class deadlineNotFoundException extends Exception{","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    //no other code needed","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"    public deadlineNotFoundException(String message) {","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"        super(message);","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"    public deadlineNotFoundException(){","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"        super();","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":11}},{"path":"src/main/java/Duke/ExceptionList/eventNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.ExceptionList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class eventNotFoundException extends Exception{","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    public eventNotFoundException(String message) {","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"        super(message);","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    public eventNotFoundException(){","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"        super();","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":10}},{"path":"src/main/java/Duke/ExceptionList/toDoNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.ExceptionList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class toDoNotFoundException extends Exception{","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    //no other code needed","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"    public toDoNotFoundException(String message) {","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"        super(message);","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"    public toDoNotFoundException(){","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"        super();","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":11}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.Storage;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"import Duke.TaskList.*;","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"public class Storage {","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"    protected final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    protected final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"    private String filePath \u003d DEFAULT_STORAGE_FILEPATH;","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"    protected Path path;","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"    public Storage(){","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"sianloh"},"content":"        filePath \u003d DEFAULT_STORAGE_FILEPATH;","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"sianloh"},"content":"        path \u003d Paths.get(home, filePath);","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"sianloh"},"content":"    public Storage(String filepath) throws IOException {","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"sianloh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"sianloh"},"content":"        path \u003d Paths.get(home, filePath);","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"sianloh"},"content":"        if (!isValidPath(path)) {}","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"sianloh"},"content":"        //check if file exist","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"sianloh"},"content":"        isPathExist();","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"sianloh"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"sianloh"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"sianloh"},"content":"    private void isPathExist() throws IOException {","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"sianloh"},"content":"        Path path \u003d Paths.get(home, filePath);","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"sianloh"},"content":"        // check if the directory and file exists, else create","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"sianloh"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"sianloh"},"content":"            Files.createDirectory(Paths.get(home,\"data\"));","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"sianloh"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"sianloh"},"content":"     * This method save all the tasks in the ArrayList of TaskLists.","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"sianloh"},"content":"     * @param tasks ArrayList of Task in TaskLists.","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"sianloh"},"content":"    public void saveTask(TaskList tasks){","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"sianloh"},"content":"        path \u003d Paths.get(home, \"data\",DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"sianloh"},"content":"        // start saving task","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"sianloh"},"content":"        String content \u003d \"\";","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"sianloh"},"content":"        ArrayList\u003cTask\u003e save \u003d tasks.getTaskList();","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"sianloh"},"content":"        for (Task task : save)","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"sianloh"},"content":"            content +\u003d task.saveTask() + System.lineSeparator();","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"sianloh"},"content":"        //System.out.println(content);","lastModifiedDate":"2021-11-14"},{"lineNumber":56,"author":{"gitId":"sianloh"},"content":"        try{","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"sianloh"},"content":"            writeToFile(path+\"\",content);","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"sianloh"},"content":"        }catch(IOException e){","lastModifiedDate":"2021-11-14"},{"lineNumber":59,"author":{"gitId":"sianloh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-14"},{"lineNumber":60,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"sianloh"},"content":"     * This method writes all the text into the file.","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":65,"author":{"gitId":"sianloh"},"content":"     * @param filePath Path of the file to be written.","lastModifiedDate":"2021-11-14"},{"lineNumber":66,"author":{"gitId":"sianloh"},"content":"     * @param text String of the text to be stored in the file.","lastModifiedDate":"2021-11-14"},{"lineNumber":67,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":68,"author":{"gitId":"sianloh"},"content":"    private void writeToFile(String filePath, String text) throws IOException {","lastModifiedDate":"2021-11-14"},{"lineNumber":69,"author":{"gitId":"sianloh"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"sianloh"},"content":"        fw.write(text);","lastModifiedDate":"2021-11-14"},{"lineNumber":71,"author":{"gitId":"sianloh"},"content":"        fw.close();","lastModifiedDate":"2021-11-14"},{"lineNumber":72,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":73,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":74,"author":{"gitId":"sianloh"},"content":"    public String load() throws IOException {","lastModifiedDate":"2021-11-14"},{"lineNumber":75,"author":{"gitId":"sianloh"},"content":"        String path \u003d home+\"\\\\data\\\\\"+filePath;","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"sianloh"},"content":"        //return (File) Files.readAllLines(Path.of(path));","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"sianloh"},"content":"        return path; // create a File for the given file path","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":79}},{"path":"src/main/java/Duke/TaskList/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    protected String by;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"    @Override","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"    public String saveTask(){ return \"D|\" + super.saveTask() + \"|\" + by;}","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"sianloh":18}},{"path":"src/main/java/Duke/TaskList/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    protected String at;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"    @Override","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"    public String saveTask(){ return \"E|\" + super.saveTask() + \"|\" + at;}","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"sianloh":19}},{"path":"src/main/java/Duke/TaskList/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    protected String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"    public Task(String description,boolean isDone){","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"sianloh"},"content":"    public String getStatusDone(){","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"sianloh"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with 1","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"sianloh"},"content":"    public void setDone(boolean done){","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"sianloh"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"sianloh"},"content":"    public String getDescription(){","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"sianloh"},"content":"        return description;","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"sianloh"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"sianloh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"sianloh"},"content":"     * This method returns the object in String format.","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"sianloh"},"content":"     * @return the object in string format","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"sianloh"},"content":"    public String toString(){","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"sianloh"},"content":"        String print \u003d \"[\" + getStatusIcon()+\"] \" + getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"sianloh"},"content":"        return print;","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"sianloh"},"content":"     * This method return the object in String format.","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"sianloh"},"content":"     * @return the object in string format for the task to be saved.","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"sianloh"},"content":"    public String saveTask(){","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"sianloh"},"content":"        String save \u003d getStatusDone() + \"|\" + getDescription();","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"sianloh"},"content":"        return save;","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"sianloh":54}},{"path":"src/main/java/Duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"import Duke.ExceptionList.*;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"import java.io.*;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"public class TaskList {","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    ArrayList\u003cTask\u003e taskLists \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"    public TaskList() {","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"    public TaskList(String f) throws DukeException {","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"        //parse the String from the text file then use it to inside into the DB","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(f))) {","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"            String line;","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"                // process the line.","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"sianloh"},"content":"                    addFileTask(line);","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"sianloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"sianloh"},"content":"            throw new DukeException(\"File is not found. Please, make sure you entered the correct path.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"sianloh"},"content":"        } catch (toDoNotFoundException | eventNotFoundException | deadlineNotFoundException |IOException e) {","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"sianloh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"sianloh"},"content":"    public void addFileTask(String str) throws toDoNotFoundException, eventNotFoundException, deadlineNotFoundException {","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"sianloh"},"content":"        String[] input \u003d str.split(\"\\\\|\", 2);","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"sianloh"},"content":"        String s1 \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"sianloh"},"content":"        String s2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"sianloh"},"content":"        addTask(s1, s2, true);","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"sianloh"},"content":"     * Adds task into the ArrayList of Tasks object. The cmd has been passed through validation thus unwanted commands","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"sianloh"},"content":"     * will not be written into the list.","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"sianloh"},"content":"     * @param cmd the given command by the user","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"sianloh"},"content":"     * @param description details on the task listed by user","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"sianloh"},"content":"     * @param file checks if it is from a loaded file or an input string","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"sianloh"},"content":"    public void addTask(String cmd, String description, boolean file) throws toDoNotFoundException, eventNotFoundException, deadlineNotFoundException {","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"sianloh"},"content":"        if (cmd.equalsIgnoreCase(\"todo\") || cmd.equalsIgnoreCase(\"T\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"sianloh"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"sianloh"},"content":"                throw new toDoNotFoundException(\"Sorry, there cannot be any empty todo task.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"sianloh"},"content":"            if (file) {","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"sianloh"},"content":"                String[] input \u003d description.split(\"\\\\|\", 2);","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"sianloh"},"content":"                String s1 \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"sianloh"},"content":"                String s2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"sianloh"},"content":"                taskLists.add(new ToDo(s2));","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"sianloh"},"content":"                if (s1.equals(\"1\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"sianloh"},"content":"                    taskLists.get(taskLists.size() - 1).setDone(true);","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"sianloh"},"content":"                }","lastModifiedDate":"2021-11-14"},{"lineNumber":56,"author":{"gitId":"sianloh"},"content":"            } else taskLists.add(new ToDo(description));","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"sianloh"},"content":"        } else if (cmd.equalsIgnoreCase(\"deadline\") || cmd.equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":59,"author":{"gitId":"sianloh"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2021-11-14"},{"lineNumber":60,"author":{"gitId":"sianloh"},"content":"                throw new deadlineNotFoundException(\"Sorry, there cannot be any empty deadline task.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"sianloh"},"content":"            if (file) {","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"sianloh"},"content":"                String[] input \u003d description.split(\"\\\\|\", 3);","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"sianloh"},"content":"                String s1 \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":65,"author":{"gitId":"sianloh"},"content":"                String s2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":66,"author":{"gitId":"sianloh"},"content":"                String s3 \u003d input[2];","lastModifiedDate":"2021-11-14"},{"lineNumber":67,"author":{"gitId":"sianloh"},"content":"                taskLists.add(new Deadline(s2, s3));","lastModifiedDate":"2021-11-14"},{"lineNumber":68,"author":{"gitId":"sianloh"},"content":"                if (s1.equals(\"1\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":69,"author":{"gitId":"sianloh"},"content":"                    taskLists.get(taskLists.size() - 1).setDone(true);","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"sianloh"},"content":"                }","lastModifiedDate":"2021-11-14"},{"lineNumber":71,"author":{"gitId":"sianloh"},"content":"            } else {","lastModifiedDate":"2021-11-14"},{"lineNumber":72,"author":{"gitId":"sianloh"},"content":"                String[] input \u003d description.split(\"/by \", 2);","lastModifiedDate":"2021-11-14"},{"lineNumber":73,"author":{"gitId":"sianloh"},"content":"                String s1 \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":74,"author":{"gitId":"sianloh"},"content":"                String s2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":75,"author":{"gitId":"sianloh"},"content":"                taskLists.add(new Deadline(s1, s2));","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"sianloh"},"content":"        } else if (cmd.equalsIgnoreCase(\"event\") || cmd.equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"sianloh"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"sianloh"},"content":"                throw new eventNotFoundException(\"Sorry, there cannot be any empty event task.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":81,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":82,"author":{"gitId":"sianloh"},"content":"            if (file) {","lastModifiedDate":"2021-11-14"},{"lineNumber":83,"author":{"gitId":"sianloh"},"content":"                String[] input \u003d description.split(\"\\\\|\", 3);","lastModifiedDate":"2021-11-14"},{"lineNumber":84,"author":{"gitId":"sianloh"},"content":"                String s1 \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":85,"author":{"gitId":"sianloh"},"content":"                String s2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":86,"author":{"gitId":"sianloh"},"content":"                String s3 \u003d input[2];","lastModifiedDate":"2021-11-14"},{"lineNumber":87,"author":{"gitId":"sianloh"},"content":"                taskLists.add(new Event(s2, s3));","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"sianloh"},"content":"                if (s1.equals(\"1\")) {","lastModifiedDate":"2021-11-14"},{"lineNumber":89,"author":{"gitId":"sianloh"},"content":"                    taskLists.get(taskLists.size() - 1).setDone(true);","lastModifiedDate":"2021-11-14"},{"lineNumber":90,"author":{"gitId":"sianloh"},"content":"                }","lastModifiedDate":"2021-11-14"},{"lineNumber":91,"author":{"gitId":"sianloh"},"content":"            } else {","lastModifiedDate":"2021-11-14"},{"lineNumber":92,"author":{"gitId":"sianloh"},"content":"                String[] input \u003d description.split(\"/at \", 2);","lastModifiedDate":"2021-11-14"},{"lineNumber":93,"author":{"gitId":"sianloh"},"content":"                String s1 \u003d input[0];","lastModifiedDate":"2021-11-14"},{"lineNumber":94,"author":{"gitId":"sianloh"},"content":"                String s2 \u003d input[1];","lastModifiedDate":"2021-11-14"},{"lineNumber":95,"author":{"gitId":"sianloh"},"content":"                taskLists.add(new Event(s1, s2));","lastModifiedDate":"2021-11-14"},{"lineNumber":96,"author":{"gitId":"sianloh"},"content":"            }","lastModifiedDate":"2021-11-14"},{"lineNumber":97,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":98,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":99,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":100,"author":{"gitId":"sianloh"},"content":"    public String getLastAddedTask() {","lastModifiedDate":"2021-11-14"},{"lineNumber":101,"author":{"gitId":"sianloh"},"content":"        return taskLists.get(taskLists.size() - 1).toString();","lastModifiedDate":"2021-11-14"},{"lineNumber":102,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":103,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":104,"author":{"gitId":"sianloh"},"content":"     * User input will perform a deleting of the specific task from the ArrayList of Tasks object.","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":106,"author":{"gitId":"sianloh"},"content":"     * @param x the given position of the list given by the user","lastModifiedDate":"2021-11-14"},{"lineNumber":107,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":108,"author":{"gitId":"sianloh"},"content":"    public void deleteTask(int x) {","lastModifiedDate":"2021-11-14"},{"lineNumber":109,"author":{"gitId":"sianloh"},"content":"        System.out.println(taskLists.get(x - 1).toString());","lastModifiedDate":"2021-11-14"},{"lineNumber":110,"author":{"gitId":"sianloh"},"content":"        taskLists.remove(x - 1);","lastModifiedDate":"2021-11-14"},{"lineNumber":111,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":112,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":113,"author":{"gitId":"sianloh"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-11-14"},{"lineNumber":114,"author":{"gitId":"sianloh"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":115,"author":{"gitId":"sianloh"},"content":"        for (int i \u003d 0; i \u003c taskLists.size(); i++) {","lastModifiedDate":"2021-11-14"},{"lineNumber":116,"author":{"gitId":"sianloh"},"content":"            System.out.println(taskLists.get(i).toString());","lastModifiedDate":"2021-11-14"},{"lineNumber":117,"author":{"gitId":"sianloh"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":118,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":119,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":120,"author":{"gitId":"sianloh"},"content":"    public void setDoneStatus(int x) {","lastModifiedDate":"2021-11-14"},{"lineNumber":121,"author":{"gitId":"sianloh"},"content":"        taskLists.get(x - 1).setDone(true);","lastModifiedDate":"2021-11-14"},{"lineNumber":122,"author":{"gitId":"sianloh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-11-14"},{"lineNumber":123,"author":{"gitId":"sianloh"},"content":"        System.out.println(taskLists.get(x - 1).toString());","lastModifiedDate":"2021-11-14"},{"lineNumber":124,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":125,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":126,"author":{"gitId":"sianloh"},"content":"    public int getSize() {","lastModifiedDate":"2021-11-14"},{"lineNumber":127,"author":{"gitId":"sianloh"},"content":"        return taskLists.size();","lastModifiedDate":"2021-11-14"},{"lineNumber":128,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":129,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":130,"author":{"gitId":"sianloh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-11-14"},{"lineNumber":131,"author":{"gitId":"sianloh"},"content":"        return taskLists;","lastModifiedDate":"2021-11-14"},{"lineNumber":132,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":133,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":133}},{"path":"src/main/java/Duke/TaskList/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    @Override","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"    public String saveTask(){ return \"T|\" + super.saveTask();}","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"sianloh":16}},{"path":"src/main/java/Duke/TaskList/taskToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public enum taskToDo {","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    todo,deadline,list,event,done,delete","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":5}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sianloh"},"content":"package Duke.Ui;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"sianloh"},"content":"public class Ui {","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"sianloh"},"content":"    private final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"sianloh"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"sianloh"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"sianloh"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"sianloh"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"sianloh"},"content":"    private final String logoMessage \u003d logo + \"\\nHello! I\u0027m Duke.Duke. \\nWhat can I do for you?\";","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"sianloh"},"content":"    private final String breakLines \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"sianloh"},"content":"    private String print(){","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"sianloh"},"content":"        return logoMessage;","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"    //Printing divider","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"sianloh"},"content":"    public void printBreak() {","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"sianloh"},"content":"        System.out.println(breakLines);","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"sianloh"},"content":"    //Printing goodbye message","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"sianloh"},"content":"    public void printBye() {","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"sianloh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"sianloh"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"sianloh"},"content":"     * Listing the total number of Task object inside the TaskLists.","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"sianloh"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"sianloh"},"content":"     * @param counter the number of task in the TaskLists","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"sianloh"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"sianloh"},"content":"    public void printTotalTask(int counter) {","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"sianloh"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"sianloh"},"content":"    //Printing start message","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"sianloh"},"content":"    public void showStartMessage(){","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"sianloh"},"content":"        System.out.println(print());","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"sianloh"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"sianloh"},"content":"    //Printing Loading Error message","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"sianloh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"sianloh"},"content":"        System.out.println(\"Sorry file is not found. We will save a new copy.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"sianloh"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"sianloh"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"sianloh":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sianloh"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sianloh":1,"-":20}}]
