[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"sourceSets {","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"    test {","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"        java {","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"            srcDirs \u003d [\u0027src/test/java\u0027]","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"dependencies {","lastModifiedDate":"2021-11-18"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-11-18"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-11-18"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"    mainClassName \u003d \"com.tic2002.duke.Duke\"","lastModifiedDate":"2021-11-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-11-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"maynardwhy":18,"-":39}},{"path":"src/main/java/com/tic2002/app/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.app;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"/**","lastModifiedDate":"2021-11-17"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":" * Creates class exception as DukeException to handle errors","lastModifiedDate":"2021-11-17"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":" */","lastModifiedDate":"2021-11-17"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":8}},{"path":"src/main/java/com/tic2002/app/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.app;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.TaskCommands;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.isValidDate;","lastModifiedDate":"2021-11-19"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.isValidTime;","lastModifiedDate":"2021-11-19"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.toDate;","lastModifiedDate":"2021-11-19"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.toTime;","lastModifiedDate":"2021-11-19"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.Find.findWord;","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.Priority.isValidPriority;","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.TaskCommands.addEvent;","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.TaskCommands.addTodo;","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.TaskCommands.addDeadline;","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.TaskCommands.updatePriority;","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"public class Parser {","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"     * Set enumerations of valid commands","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"    public enum validCommands {","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"        LIST, DONE, UNDONE, DELETE, HELP, BYE, TODO, EVENT, DEADLINE, ON, PRIORITY, FIND","lastModifiedDate":"2021-11-18"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"     * To check if user input String check is valid","lastModifiedDate":"2021-11-18"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"     * @param checkCommand takes user input as String","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"     *              check if checkCommand matches enum","lastModifiedDate":"2021-11-18"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"     * @return true if match, false if doesn\u0027t match","lastModifiedDate":"2021-11-18"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isValidInput (String checkCommand) {","lastModifiedDate":"2021-11-18"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"        for (validCommands a : validCommands.values()) {","lastModifiedDate":"2021-11-18"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"            if(a.name().equals(checkCommand)) {","lastModifiedDate":"2021-11-18"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"                return true;","lastModifiedDate":"2021-11-18"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"        return false;","lastModifiedDate":"2021-11-18"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"     * Takes in input from user and makes sense of input for Event","lastModifiedDate":"2021-11-18"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"    public static void eventParse(String userEntry, String description){","lastModifiedDate":"2021-11-18"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"        String timeDescription \u003d userEntry.split(\"/at \")[1];","lastModifiedDate":"2021-11-18"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"        if(description.equals(\"\")) {","lastModifiedDate":"2021-11-18"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"include /at\");","lastModifiedDate":"2021-11-18"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"        else {","lastModifiedDate":"2021-11-18"},{"lineNumber":52,"author":{"gitId":"maynardwhy"},"content":"            description \u003d description.split(\" /\")[0];","lastModifiedDate":"2021-11-18"},{"lineNumber":53,"author":{"gitId":"maynardwhy"},"content":"            addEvent(description,timeDescription);","lastModifiedDate":"2021-11-18"},{"lineNumber":54,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":55,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":57,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":58,"author":{"gitId":"maynardwhy"},"content":"    * Takes in input from user and makes sense of input for Deadline","lastModifiedDate":"2021-11-18"},{"lineNumber":59,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":60,"author":{"gitId":"maynardwhy"},"content":"    public static void deadlineParse(String userEntry, String description){","lastModifiedDate":"2021-11-18"},{"lineNumber":61,"author":{"gitId":"maynardwhy"},"content":"        String timeDescription \u003d userEntry.split(\"/by \")[1];","lastModifiedDate":"2021-11-18"},{"lineNumber":62,"author":{"gitId":"maynardwhy"},"content":"        description \u003d description.split(\" /\")[0];","lastModifiedDate":"2021-11-18"},{"lineNumber":63,"author":{"gitId":"maynardwhy"},"content":"        String date \u003d timeDescription.split(\", \")[0];","lastModifiedDate":"2021-11-18"},{"lineNumber":64,"author":{"gitId":"maynardwhy"},"content":"        String time \u003d timeDescription.split(\", \")[1];","lastModifiedDate":"2021-11-18"},{"lineNumber":65,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":66,"author":{"gitId":"maynardwhy"},"content":"        if(description.equals(\"\")) {","lastModifiedDate":"2021-11-18"},{"lineNumber":67,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"include /by\");","lastModifiedDate":"2021-11-18"},{"lineNumber":68,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":69,"author":{"gitId":"maynardwhy"},"content":"        else if(!isValidDate(date) || !isValidTime(time)) {","lastModifiedDate":"2021-11-18"},{"lineNumber":70,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"Please use an exact date time, yyyy-mm-dd, hh:mm\");","lastModifiedDate":"2021-11-18"},{"lineNumber":71,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":72,"author":{"gitId":"maynardwhy"},"content":"        else{","lastModifiedDate":"2021-11-18"},{"lineNumber":73,"author":{"gitId":"maynardwhy"},"content":"            try {","lastModifiedDate":"2021-11-18"},{"lineNumber":74,"author":{"gitId":"maynardwhy"},"content":"                LocalDate dateDate \u003d toDate(date);","lastModifiedDate":"2021-11-18"},{"lineNumber":75,"author":{"gitId":"maynardwhy"},"content":"                LocalTime timeTime \u003d toTime(time);","lastModifiedDate":"2021-11-18"},{"lineNumber":76,"author":{"gitId":"maynardwhy"},"content":"                addDeadline(description, dateDate, timeTime);","lastModifiedDate":"2021-11-18"},{"lineNumber":77,"author":{"gitId":"maynardwhy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-18"},{"lineNumber":78,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Please enter in yyyy-mm-dd, hh:mm\");","lastModifiedDate":"2021-11-18"},{"lineNumber":79,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":80,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":81,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":82,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":83,"author":{"gitId":"maynardwhy"},"content":"    public static void priorityParse(String description){","lastModifiedDate":"2021-11-18"},{"lineNumber":84,"author":{"gitId":"maynardwhy"},"content":"        int ref \u003d Integer.parseInt(description.split(\" \")[0]);","lastModifiedDate":"2021-11-18"},{"lineNumber":85,"author":{"gitId":"maynardwhy"},"content":"        int priority \u003d Integer.parseInt(description.split(\" \")[1]);","lastModifiedDate":"2021-11-18"},{"lineNumber":86,"author":{"gitId":"maynardwhy"},"content":"        if(isValidPriority(priority)) {","lastModifiedDate":"2021-11-18"},{"lineNumber":87,"author":{"gitId":"maynardwhy"},"content":"                updatePriority(ref-1, priority);","lastModifiedDate":"2021-11-18"},{"lineNumber":88,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":89,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":90,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":91,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isNumber(String input) {","lastModifiedDate":"2021-11-19"},{"lineNumber":92,"author":{"gitId":"maynardwhy"},"content":"        try {","lastModifiedDate":"2021-11-19"},{"lineNumber":93,"author":{"gitId":"maynardwhy"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-11-19"},{"lineNumber":94,"author":{"gitId":"maynardwhy"},"content":"            return true;","lastModifiedDate":"2021-11-19"},{"lineNumber":95,"author":{"gitId":"maynardwhy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-19"},{"lineNumber":96,"author":{"gitId":"maynardwhy"},"content":"            return false;","lastModifiedDate":"2021-11-19"},{"lineNumber":97,"author":{"gitId":"maynardwhy"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-19"},{"lineNumber":98,"author":{"gitId":"maynardwhy"},"content":"            return false;","lastModifiedDate":"2021-11-19"},{"lineNumber":99,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-19"},{"lineNumber":100,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-19"},{"lineNumber":101,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":102,"author":{"gitId":"maynardwhy"},"content":"     * Takes user input as String and parse input","lastModifiedDate":"2021-11-18"},{"lineNumber":103,"author":{"gitId":"maynardwhy"},"content":"     * @param userEntry Takes user entry as String","lastModifiedDate":"2021-11-18"},{"lineNumber":104,"author":{"gitId":"maynardwhy"},"content":"     *                  Creates String timeDescription for Deadline \u0026 Event cases","lastModifiedDate":"2021-11-18"},{"lineNumber":105,"author":{"gitId":"maynardwhy"},"content":"     *                  Creates String description to store description of task","lastModifiedDate":"2021-11-18"},{"lineNumber":106,"author":{"gitId":"maynardwhy"},"content":"     *                  Creates String command to store first word of String userEntry, which is the command","lastModifiedDate":"2021-11-18"},{"lineNumber":107,"author":{"gitId":"maynardwhy"},"content":"     *                  Create int size to check length of String userEntry","lastModifiedDate":"2021-11-18"},{"lineNumber":108,"author":{"gitId":"maynardwhy"},"content":"     *                  String commandUpper to change String command to upper case","lastModifiedDate":"2021-11-18"},{"lineNumber":109,"author":{"gitId":"maynardwhy"},"content":"     *                  check if user entered only command without description, except for LIST \u0026 BYE","lastModifiedDate":"2021-11-18"},{"lineNumber":110,"author":{"gitId":"maynardwhy"},"content":"     *                  Check if matches validCommands","lastModifiedDate":"2021-11-18"},{"lineNumber":111,"author":{"gitId":"maynardwhy"},"content":"     * @throws DukeException when error occurs","lastModifiedDate":"2021-11-18"},{"lineNumber":112,"author":{"gitId":"maynardwhy"},"content":"     * switch for commandUpper","lastModifiedDate":"2021-11-18"},{"lineNumber":113,"author":{"gitId":"maynardwhy"},"content":"     * done - Set task as done","lastModifiedDate":"2021-11-18"},{"lineNumber":114,"author":{"gitId":"maynardwhy"},"content":"     * undone - Set task as not done","lastModifiedDate":"2021-11-18"},{"lineNumber":115,"author":{"gitId":"maynardwhy"},"content":"     * delete - delete a task","lastModifiedDate":"2021-11-18"},{"lineNumber":116,"author":{"gitId":"maynardwhy"},"content":"     * help - prints out instructions","lastModifiedDate":"2021-11-18"},{"lineNumber":117,"author":{"gitId":"maynardwhy"},"content":"     * bye - ends Duke","lastModifiedDate":"2021-11-18"},{"lineNumber":118,"author":{"gitId":"maynardwhy"},"content":"     * todo - creates todo task","lastModifiedDate":"2021-11-18"},{"lineNumber":119,"author":{"gitId":"maynardwhy"},"content":"     * event - creates event","lastModifiedDate":"2021-11-18"},{"lineNumber":120,"author":{"gitId":"maynardwhy"},"content":"     * deadline - creates task with deadline","lastModifiedDate":"2021-11-18"},{"lineNumber":121,"author":{"gitId":"maynardwhy"},"content":"     * on - returns task with matching date","lastModifiedDate":"2021-11-18"},{"lineNumber":122,"author":{"gitId":"maynardwhy"},"content":"     * priority - sets task priority","lastModifiedDate":"2021-11-18"},{"lineNumber":123,"author":{"gitId":"maynardwhy"},"content":"     * find - find tasks that matches user input","lastModifiedDate":"2021-11-18"},{"lineNumber":124,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":125,"author":{"gitId":"maynardwhy"},"content":"    public static void parseCommand(String userEntry) throws DukeException {","lastModifiedDate":"2021-11-18"},{"lineNumber":126,"author":{"gitId":"maynardwhy"},"content":"        String description;","lastModifiedDate":"2021-11-18"},{"lineNumber":127,"author":{"gitId":"maynardwhy"},"content":"        String command \u003d userEntry.split(\" \")[0];","lastModifiedDate":"2021-11-18"},{"lineNumber":128,"author":{"gitId":"maynardwhy"},"content":"        description \u003d userEntry.replaceFirst(command + \" \", \"\");","lastModifiedDate":"2021-11-18"},{"lineNumber":129,"author":{"gitId":"maynardwhy"},"content":"        int size \u003d userEntry.length();","lastModifiedDate":"2021-11-18"},{"lineNumber":130,"author":{"gitId":"maynardwhy"},"content":"        String commandUpper \u003d command.toUpperCase();","lastModifiedDate":"2021-11-18"},{"lineNumber":131,"author":{"gitId":"maynardwhy"},"content":"        if(size \u003d\u003d 1 \u0026\u0026 !commandUpper.equals(\"LIST\") \u0026\u0026 !commandUpper.equals(\"BYE\")) {","lastModifiedDate":"2021-11-18"},{"lineNumber":132,"author":{"gitId":"maynardwhy"},"content":"            throw new DukeException();","lastModifiedDate":"2021-11-18"},{"lineNumber":133,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":134,"author":{"gitId":"maynardwhy"},"content":"        if(!isValidInput(commandUpper)) {","lastModifiedDate":"2021-11-18"},{"lineNumber":135,"author":{"gitId":"maynardwhy"},"content":"            throw new DukeException();","lastModifiedDate":"2021-11-18"},{"lineNumber":136,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":137,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":138,"author":{"gitId":"maynardwhy"},"content":"        switch (commandUpper) {","lastModifiedDate":"2021-11-18"},{"lineNumber":139,"author":{"gitId":"maynardwhy"},"content":"        case \"LIST\":","lastModifiedDate":"2021-11-18"},{"lineNumber":140,"author":{"gitId":"maynardwhy"},"content":"            TaskCommands.printList();","lastModifiedDate":"2021-11-18"},{"lineNumber":141,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":142,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":143,"author":{"gitId":"maynardwhy"},"content":"        case\"DONE\":","lastModifiedDate":"2021-11-18"},{"lineNumber":144,"author":{"gitId":"maynardwhy"},"content":"            int ref \u003d Integer.parseInt(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":145,"author":{"gitId":"maynardwhy"},"content":"            TaskCommands.setDone(ref-1);","lastModifiedDate":"2021-11-18"},{"lineNumber":146,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":147,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":148,"author":{"gitId":"maynardwhy"},"content":"        case\"UNDONE\":","lastModifiedDate":"2021-11-18"},{"lineNumber":149,"author":{"gitId":"maynardwhy"},"content":"            ref \u003d Integer.parseInt(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":150,"author":{"gitId":"maynardwhy"},"content":"            TaskCommands.setUnDone(ref-1);","lastModifiedDate":"2021-11-18"},{"lineNumber":151,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":152,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":153,"author":{"gitId":"maynardwhy"},"content":"        case\"DELETE\":","lastModifiedDate":"2021-11-18"},{"lineNumber":154,"author":{"gitId":"maynardwhy"},"content":"            ref \u003d Integer.parseInt(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":155,"author":{"gitId":"maynardwhy"},"content":"            TaskCommands.deleteTask(ref-1);","lastModifiedDate":"2021-11-18"},{"lineNumber":156,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":157,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":158,"author":{"gitId":"maynardwhy"},"content":"        case\"HELP\":","lastModifiedDate":"2021-11-18"},{"lineNumber":159,"author":{"gitId":"maynardwhy"},"content":"            UI.instructions();","lastModifiedDate":"2021-11-18"},{"lineNumber":160,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":161,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":162,"author":{"gitId":"maynardwhy"},"content":"        case\"BYE\":","lastModifiedDate":"2021-11-18"},{"lineNumber":163,"author":{"gitId":"maynardwhy"},"content":"            UI.endDuke();","lastModifiedDate":"2021-11-18"},{"lineNumber":164,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":165,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":166,"author":{"gitId":"maynardwhy"},"content":"        case\"TODO\":","lastModifiedDate":"2021-11-18"},{"lineNumber":167,"author":{"gitId":"maynardwhy"},"content":"            addTodo(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":168,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":169,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":170,"author":{"gitId":"maynardwhy"},"content":"        case\"EVENT\":","lastModifiedDate":"2021-11-18"},{"lineNumber":171,"author":{"gitId":"maynardwhy"},"content":"            eventParse(userEntry, description);","lastModifiedDate":"2021-11-18"},{"lineNumber":172,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":173,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":174,"author":{"gitId":"maynardwhy"},"content":"        case\"DEADLINE\":","lastModifiedDate":"2021-11-18"},{"lineNumber":175,"author":{"gitId":"maynardwhy"},"content":"            deadlineParse(userEntry, description);","lastModifiedDate":"2021-11-18"},{"lineNumber":176,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":177,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":178,"author":{"gitId":"maynardwhy"},"content":"        case\"ON\":","lastModifiedDate":"2021-11-18"},{"lineNumber":179,"author":{"gitId":"maynardwhy"},"content":"            if(isValidDate(description) || (!description.equals(\"\"))) {","lastModifiedDate":"2021-11-18"},{"lineNumber":180,"author":{"gitId":"maynardwhy"},"content":"                LocalDate checkDate \u003d toDate(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":181,"author":{"gitId":"maynardwhy"},"content":"                TaskCommands.printDateList(checkDate);","lastModifiedDate":"2021-11-18"},{"lineNumber":182,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":183,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":184,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":185,"author":{"gitId":"maynardwhy"},"content":"        case\"PRIORITY\":","lastModifiedDate":"2021-11-18"},{"lineNumber":186,"author":{"gitId":"maynardwhy"},"content":"            try {","lastModifiedDate":"2021-11-18"},{"lineNumber":187,"author":{"gitId":"maynardwhy"},"content":"                priorityParse(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":188,"author":{"gitId":"maynardwhy"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-18"},{"lineNumber":189,"author":{"gitId":"maynardwhy"},"content":"            throw new DukeException();","lastModifiedDate":"2021-11-18"},{"lineNumber":190,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":191,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":192,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":193,"author":{"gitId":"maynardwhy"},"content":"        case\"FIND\":","lastModifiedDate":"2021-11-18"},{"lineNumber":194,"author":{"gitId":"maynardwhy"},"content":"            findWord(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":195,"author":{"gitId":"maynardwhy"},"content":"            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":196,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":197,"author":{"gitId":"maynardwhy"},"content":"        default:","lastModifiedDate":"2021-11-18"},{"lineNumber":198,"author":{"gitId":"maynardwhy"},"content":"            throw new DukeException();","lastModifiedDate":"2021-11-18"},{"lineNumber":199,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":200,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":201,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"},{"lineNumber":202,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":203,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":204,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":205,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":205}},{"path":"src/main/java/com/tic2002/app/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.app;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.Event;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.Task;","lastModifiedDate":"2021-11-18"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.Todo;","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.Deadline;","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.List;","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-11-18"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-11-18"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-18"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.*;","lastModifiedDate":"2021-11-19"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.app.Parser.isNumber;","lastModifiedDate":"2021-11-19"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"public class Storage extends List {","lastModifiedDate":"2021-11-19"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"    private static ArrayList\u003cTask\u003e Load \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-18"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"     * Method to load listing from Duke.txt","lastModifiedDate":"2021-11-18"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"     * Get path for user hom","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"     * Get path for duke.txt","lastModifiedDate":"2021-11-18"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"     * run duke.txt over switch to store as tasks in List","lastModifiedDate":"2021-11-18"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"    public static void loadList() {","lastModifiedDate":"2021-11-18"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-11-18"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"        Path path \u003d Paths.get(home, \"data\", \"duke.txt\");","lastModifiedDate":"2021-11-18"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"        boolean directoryExists \u003d Files.exists(path);","lastModifiedDate":"2021-11-18"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"        String description;","lastModifiedDate":"2021-11-18"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"        if(directoryExists) {","lastModifiedDate":"2021-11-18"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"            try (BufferedReader br \u003d new BufferedReader(new FileReader(path + \"\"))) {","lastModifiedDate":"2021-11-18"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"                String sCurrentLine;","lastModifiedDate":"2021-11-18"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"                int i \u003d 0;","lastModifiedDate":"2021-11-18"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"                while ((sCurrentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-11-18"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"                    String line \u003d sCurrentLine.split(\",\")[0];","lastModifiedDate":"2021-11-18"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"                    String priorityString \u003d sCurrentLine.split(\",\")[1];","lastModifiedDate":"2021-11-19"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"                    assert isNumber(priorityString) : \"Error in file: \" + sCurrentLine;","lastModifiedDate":"2021-11-19"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"                    int priority \u003d Integer.parseInt(priorityString);","lastModifiedDate":"2021-11-19"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"                    String [] words \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-11-18"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"                    String type \u003d words[0];","lastModifiedDate":"2021-11-18"},{"lineNumber":52,"author":{"gitId":"maynardwhy"},"content":"                    boolean isDone \u003d Boolean.parseBoolean(words[1]);","lastModifiedDate":"2021-11-18"},{"lineNumber":53,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":54,"author":{"gitId":"maynardwhy"},"content":"                    switch (type) {","lastModifiedDate":"2021-11-18"},{"lineNumber":55,"author":{"gitId":"maynardwhy"},"content":"                        case \"T\":","lastModifiedDate":"2021-11-18"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"                            description \u003d words[2];","lastModifiedDate":"2021-11-18"},{"lineNumber":57,"author":{"gitId":"maynardwhy"},"content":"                            Load.add(new Todo(description));","lastModifiedDate":"2021-11-18"},{"lineNumber":58,"author":{"gitId":"maynardwhy"},"content":"                            Load.get(i).priority(priority);","lastModifiedDate":"2021-11-18"},{"lineNumber":59,"author":{"gitId":"maynardwhy"},"content":"                            if (isDone) {","lastModifiedDate":"2021-11-18"},{"lineNumber":60,"author":{"gitId":"maynardwhy"},"content":"                                Load.get(i).setDone();","lastModifiedDate":"2021-11-18"},{"lineNumber":61,"author":{"gitId":"maynardwhy"},"content":"                            }","lastModifiedDate":"2021-11-18"},{"lineNumber":62,"author":{"gitId":"maynardwhy"},"content":"                            i++;","lastModifiedDate":"2021-11-18"},{"lineNumber":63,"author":{"gitId":"maynardwhy"},"content":"                            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":64,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":65,"author":{"gitId":"maynardwhy"},"content":"                    case \"D\":","lastModifiedDate":"2021-11-18"},{"lineNumber":66,"author":{"gitId":"maynardwhy"},"content":"                        description \u003d words[2];","lastModifiedDate":"2021-11-18"},{"lineNumber":67,"author":{"gitId":"maynardwhy"},"content":"                        String date \u003d words[3];","lastModifiedDate":"2021-11-18"},{"lineNumber":68,"author":{"gitId":"maynardwhy"},"content":"                        String time \u003d words[4];","lastModifiedDate":"2021-11-18"},{"lineNumber":69,"author":{"gitId":"maynardwhy"},"content":"                        try {","lastModifiedDate":"2021-11-18"},{"lineNumber":70,"author":{"gitId":"maynardwhy"},"content":"                            LocalDate byDate \u003d toDate(date);","lastModifiedDate":"2021-11-18"},{"lineNumber":71,"author":{"gitId":"maynardwhy"},"content":"                            LocalTime byTime \u003d toTime(time);","lastModifiedDate":"2021-11-18"},{"lineNumber":72,"author":{"gitId":"maynardwhy"},"content":"                            Load.add(new Deadline(description, byDate, byTime));","lastModifiedDate":"2021-11-18"},{"lineNumber":73,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":74,"author":{"gitId":"maynardwhy"},"content":"                            if(isDone){","lastModifiedDate":"2021-11-19"},{"lineNumber":75,"author":{"gitId":"maynardwhy"},"content":"                                Load.get(i).setDone();","lastModifiedDate":"2021-11-19"},{"lineNumber":76,"author":{"gitId":"maynardwhy"},"content":"                                Load.get(i).priority(0);","lastModifiedDate":"2021-11-19"},{"lineNumber":77,"author":{"gitId":"maynardwhy"},"content":"                            }","lastModifiedDate":"2021-11-19"},{"lineNumber":78,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":79,"author":{"gitId":"maynardwhy"},"content":"                            if(!isDone) {","lastModifiedDate":"2021-11-19"},{"lineNumber":80,"author":{"gitId":"maynardwhy"},"content":"                                if (isWithinThreeDays(byDate)) {","lastModifiedDate":"2021-11-19"},{"lineNumber":81,"author":{"gitId":"maynardwhy"},"content":"                                    Load.get(i).priority(3);","lastModifiedDate":"2021-11-19"},{"lineNumber":82,"author":{"gitId":"maynardwhy"},"content":"                                } else if (isOverDue(byDate)) {","lastModifiedDate":"2021-11-19"},{"lineNumber":83,"author":{"gitId":"maynardwhy"},"content":"                                    Load.get(i).priority(4);","lastModifiedDate":"2021-11-19"},{"lineNumber":84,"author":{"gitId":"maynardwhy"},"content":"                                } else {","lastModifiedDate":"2021-11-19"},{"lineNumber":85,"author":{"gitId":"maynardwhy"},"content":"                                    Load.get(i).priority(priority);","lastModifiedDate":"2021-11-19"},{"lineNumber":86,"author":{"gitId":"maynardwhy"},"content":"                                }","lastModifiedDate":"2021-11-19"},{"lineNumber":87,"author":{"gitId":"maynardwhy"},"content":"                            }","lastModifiedDate":"2021-11-19"},{"lineNumber":88,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":89,"author":{"gitId":"maynardwhy"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-18"},{"lineNumber":90,"author":{"gitId":"maynardwhy"},"content":"                            System.out.println(\"Error in file: \" + sCurrentLine );","lastModifiedDate":"2021-11-18"},{"lineNumber":91,"author":{"gitId":"maynardwhy"},"content":"                            break;","lastModifiedDate":"2021-11-18"},{"lineNumber":92,"author":{"gitId":"maynardwhy"},"content":"                        }","lastModifiedDate":"2021-11-18"},{"lineNumber":93,"author":{"gitId":"maynardwhy"},"content":"                        if(isDone){","lastModifiedDate":"2021-11-18"},{"lineNumber":94,"author":{"gitId":"maynardwhy"},"content":"                            Load.get(i).setDone();","lastModifiedDate":"2021-11-18"},{"lineNumber":95,"author":{"gitId":"maynardwhy"},"content":"                        }","lastModifiedDate":"2021-11-18"},{"lineNumber":96,"author":{"gitId":"maynardwhy"},"content":"                        i++;","lastModifiedDate":"2021-11-18"},{"lineNumber":97,"author":{"gitId":"maynardwhy"},"content":"                        break;","lastModifiedDate":"2021-11-18"},{"lineNumber":98,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":99,"author":{"gitId":"maynardwhy"},"content":"                    case \"E\":","lastModifiedDate":"2021-11-18"},{"lineNumber":100,"author":{"gitId":"maynardwhy"},"content":"                        description \u003d words[2];","lastModifiedDate":"2021-11-18"},{"lineNumber":101,"author":{"gitId":"maynardwhy"},"content":"                        Load.add(new Event(description, words[3]));","lastModifiedDate":"2021-11-18"},{"lineNumber":102,"author":{"gitId":"maynardwhy"},"content":"                        Load.get(i).priority(priority);","lastModifiedDate":"2021-11-18"},{"lineNumber":103,"author":{"gitId":"maynardwhy"},"content":"                        if(isDone){","lastModifiedDate":"2021-11-18"},{"lineNumber":104,"author":{"gitId":"maynardwhy"},"content":"                            Load.get(i).setDone();","lastModifiedDate":"2021-11-18"},{"lineNumber":105,"author":{"gitId":"maynardwhy"},"content":"                        }","lastModifiedDate":"2021-11-18"},{"lineNumber":106,"author":{"gitId":"maynardwhy"},"content":"                        i++;","lastModifiedDate":"2021-11-18"},{"lineNumber":107,"author":{"gitId":"maynardwhy"},"content":"                        break;","lastModifiedDate":"2021-11-18"},{"lineNumber":108,"author":{"gitId":"maynardwhy"},"content":"                    }","lastModifiedDate":"2021-11-18"},{"lineNumber":109,"author":{"gitId":"maynardwhy"},"content":"                }","lastModifiedDate":"2021-11-18"},{"lineNumber":110,"author":{"gitId":"maynardwhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-11-18"},{"lineNumber":111,"author":{"gitId":"maynardwhy"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-11-18"},{"lineNumber":112,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":113,"author":{"gitId":"maynardwhy"},"content":"            List.setList(Load);","lastModifiedDate":"2021-11-18"},{"lineNumber":114,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":115,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":116,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":117,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":118,"author":{"gitId":"maynardwhy"},"content":"     * Method to save current listing","lastModifiedDate":"2021-11-18"},{"lineNumber":119,"author":{"gitId":"maynardwhy"},"content":"     * Copy ArrayList List to ArrayList Load","lastModifiedDate":"2021-11-18"},{"lineNumber":120,"author":{"gitId":"maynardwhy"},"content":"     * get user home path","lastModifiedDate":"2021-11-18"},{"lineNumber":121,"author":{"gitId":"maynardwhy"},"content":"     * Get path of Duke.txt","lastModifiedDate":"2021-11-18"},{"lineNumber":122,"author":{"gitId":"maynardwhy"},"content":"     * print tasks to Duke.txt based on Task variable","lastModifiedDate":"2021-11-18"},{"lineNumber":123,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":124,"author":{"gitId":"maynardwhy"},"content":"    public static void saveList() {","lastModifiedDate":"2021-11-18"},{"lineNumber":125,"author":{"gitId":"maynardwhy"},"content":"        Load \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":126,"author":{"gitId":"maynardwhy"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-11-18"},{"lineNumber":127,"author":{"gitId":"maynardwhy"},"content":"        java.nio.file.Path path \u003d Paths.get(home, \"data\", \"duke.txt\");","lastModifiedDate":"2021-11-18"},{"lineNumber":128,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":129,"author":{"gitId":"maynardwhy"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);","lastModifiedDate":"2021-11-18"},{"lineNumber":130,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":131,"author":{"gitId":"maynardwhy"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-11-18"},{"lineNumber":132,"author":{"gitId":"maynardwhy"},"content":"            try {","lastModifiedDate":"2021-11-18"},{"lineNumber":133,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"File created at : \" + path);","lastModifiedDate":"2021-11-18"},{"lineNumber":134,"author":{"gitId":"maynardwhy"},"content":"                Files.createDirectory(Paths.get(home,\"data\"));","lastModifiedDate":"2021-11-18"},{"lineNumber":135,"author":{"gitId":"maynardwhy"},"content":"                Files.createFile(path);","lastModifiedDate":"2021-11-18"},{"lineNumber":136,"author":{"gitId":"maynardwhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-11-18"},{"lineNumber":137,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Error saving file\");","lastModifiedDate":"2021-11-18"},{"lineNumber":138,"author":{"gitId":"maynardwhy"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-11-18"},{"lineNumber":139,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":140,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":141,"author":{"gitId":"maynardwhy"},"content":"        String save \u003d \"\";","lastModifiedDate":"2021-11-18"},{"lineNumber":142,"author":{"gitId":"maynardwhy"},"content":"        for (Task task : Load) {","lastModifiedDate":"2021-11-18"},{"lineNumber":143,"author":{"gitId":"maynardwhy"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2021-11-18"},{"lineNumber":144,"author":{"gitId":"maynardwhy"},"content":"            try {","lastModifiedDate":"2021-11-18"},{"lineNumber":145,"author":{"gitId":"maynardwhy"},"content":"                switch (type) {","lastModifiedDate":"2021-11-18"},{"lineNumber":146,"author":{"gitId":"maynardwhy"},"content":"                case \"T\":","lastModifiedDate":"2021-11-18"},{"lineNumber":147,"author":{"gitId":"maynardwhy"},"content":"                    save +\u003d task.getType() + \"|\"","lastModifiedDate":"2021-11-18"},{"lineNumber":148,"author":{"gitId":"maynardwhy"},"content":"                            + task.getDone() + \"|\"","lastModifiedDate":"2021-11-18"},{"lineNumber":149,"author":{"gitId":"maynardwhy"},"content":"                            + task.getDescription() + \",\"","lastModifiedDate":"2021-11-18"},{"lineNumber":150,"author":{"gitId":"maynardwhy"},"content":"                            + task.getPriority()","lastModifiedDate":"2021-11-18"},{"lineNumber":151,"author":{"gitId":"maynardwhy"},"content":"                            + System.lineSeparator();","lastModifiedDate":"2021-11-18"},{"lineNumber":152,"author":{"gitId":"maynardwhy"},"content":"                    break;","lastModifiedDate":"2021-11-18"},{"lineNumber":153,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":154,"author":{"gitId":"maynardwhy"},"content":"                case \"E\":","lastModifiedDate":"2021-11-18"},{"lineNumber":155,"author":{"gitId":"maynardwhy"},"content":"                    save +\u003d task.getType() + \"|\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":156,"author":{"gitId":"maynardwhy"},"content":"                            task.getDone() + \"|\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":157,"author":{"gitId":"maynardwhy"},"content":"                            task.getDescription() + \"|\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":158,"author":{"gitId":"maynardwhy"},"content":"                            task.getTiming() + \",\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":159,"author":{"gitId":"maynardwhy"},"content":"                            task.getPriority() +","lastModifiedDate":"2021-11-18"},{"lineNumber":160,"author":{"gitId":"maynardwhy"},"content":"                            System.lineSeparator();","lastModifiedDate":"2021-11-18"},{"lineNumber":161,"author":{"gitId":"maynardwhy"},"content":"                    break;","lastModifiedDate":"2021-11-18"},{"lineNumber":162,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":163,"author":{"gitId":"maynardwhy"},"content":"                case \"D\":","lastModifiedDate":"2021-11-18"},{"lineNumber":164,"author":{"gitId":"maynardwhy"},"content":"                    save +\u003d task.getType() + \"|\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":165,"author":{"gitId":"maynardwhy"},"content":"                            task.getDone() + \"|\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":166,"author":{"gitId":"maynardwhy"},"content":"                            task.getDescription() + \"|\" + task.getDate() + \"|\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":167,"author":{"gitId":"maynardwhy"},"content":"                            task.getTime() + \",\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":168,"author":{"gitId":"maynardwhy"},"content":"                            task.getPriority() +","lastModifiedDate":"2021-11-18"},{"lineNumber":169,"author":{"gitId":"maynardwhy"},"content":"                            System.lineSeparator();","lastModifiedDate":"2021-11-18"},{"lineNumber":170,"author":{"gitId":"maynardwhy"},"content":"                    break;","lastModifiedDate":"2021-11-18"},{"lineNumber":171,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":172,"author":{"gitId":"maynardwhy"},"content":"                default:","lastModifiedDate":"2021-11-18"},{"lineNumber":173,"author":{"gitId":"maynardwhy"},"content":"                    break;","lastModifiedDate":"2021-11-18"},{"lineNumber":174,"author":{"gitId":"maynardwhy"},"content":"                }","lastModifiedDate":"2021-11-18"},{"lineNumber":175,"author":{"gitId":"maynardwhy"},"content":"                writeToFile(path + \"\", save);","lastModifiedDate":"2021-11-18"},{"lineNumber":176,"author":{"gitId":"maynardwhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-11-18"},{"lineNumber":177,"author":{"gitId":"maynardwhy"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-11-18"},{"lineNumber":178,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":179,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":180,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":181,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":182,"author":{"gitId":"maynardwhy"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-11-18"},{"lineNumber":183,"author":{"gitId":"maynardwhy"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-11-18"},{"lineNumber":184,"author":{"gitId":"maynardwhy"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-11-18"},{"lineNumber":185,"author":{"gitId":"maynardwhy"},"content":"        fw.close();","lastModifiedDate":"2021-11-18"},{"lineNumber":186,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":187,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":187}},{"path":"src/main/java/com/tic2002/app/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.app;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-15"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.app.Storage.loadList;","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"public class UI {","lastModifiedDate":"2021-11-15"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"    private Parser parser;","lastModifiedDate":"2021-11-15"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"    /** Main function of UI to run program","lastModifiedDate":"2021-11-17"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"     * dukeLogo - Calling the logo","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"     * loadList - Calling the Storage function to load duke.txt","lastModifiedDate":"2021-11-17"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"     * line - Creates a String to store user input","lastModifiedDate":"2021-11-17"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"     * Scanner in - to scan and read user input","lastModifiedDate":"2021-11-17"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"     * while(true) - while there is input from the user","lastModifiedDate":"2021-11-19"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"     * newLine() - Calls a line break","lastModifiedDate":"2021-11-19"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"     * command Split user line to the first word","lastModifiedDate":"2021-11-19"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"     * commandUpper Convert user input String to uppercase","lastModifiedDate":"2021-11-19"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"     * parser.validInput(commandUpper) passes command String to check boolean","lastModifiedDate":"2021-11-19"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"     * catch(NullPointerException e) catches null in String","lastModifiedDate":"2021-11-19"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"     * println tells user to input accurately","lastModifiedDate":"2021-11-19"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"     * instructions() print instructions to use Duke","lastModifiedDate":"2021-11-19"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"     * parser.parseCommand(line) passes command String to Parser to do command","lastModifiedDate":"2021-11-19"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"     * catch(NullPointerException e) catches null in String","lastModifiedDate":"2021-11-19"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"     * println tells user to input accurately","lastModifiedDate":"2021-11-19"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"     * instructions() print instructions to use Duke","lastModifiedDate":"2021-11-19"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"     * catch(ArrayIndexOutOfBoundsException e) catches array out of bounds in String","lastModifiedDate":"2021-11-19"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"     * catch(IndexOutOfBoundsException e) catches index out of bounds in String","lastModifiedDate":"2021-11-19"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"    public void run(){","lastModifiedDate":"2021-11-15"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"        dukeLogo();","lastModifiedDate":"2021-11-15"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"        loadList();","lastModifiedDate":"2021-11-15"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"        String line;","lastModifiedDate":"2021-11-15"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-15"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-11-18"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"        while(true) {","lastModifiedDate":"2021-11-15"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-11-15"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"            newLine();","lastModifiedDate":"2021-11-15"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"            String command \u003d line.split(\" \")[0];","lastModifiedDate":"2021-11-15"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"            String commandUpper \u003d command.toUpperCase();","lastModifiedDate":"2021-11-15"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"            try {","lastModifiedDate":"2021-11-15"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"                assert commandUpper !\u003d null : \"Please enter valid input\\n\";","lastModifiedDate":"2021-11-19"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"                parser.isValidInput(commandUpper);","lastModifiedDate":"2021-11-18"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"            } catch (NullPointerException e){","lastModifiedDate":"2021-11-15"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Please enter a valid input\\n\");","lastModifiedDate":"2021-11-17"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"                instructions();","lastModifiedDate":"2021-11-17"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-15"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"            try {","lastModifiedDate":"2021-11-15"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"                assert line !\u003d null: \"Please enter a valid input\\n\";","lastModifiedDate":"2021-11-19"},{"lineNumber":52,"author":{"gitId":"maynardwhy"},"content":"                parser.parseCommand(line);","lastModifiedDate":"2021-11-17"},{"lineNumber":53,"author":{"gitId":"maynardwhy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-11-15"},{"lineNumber":54,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Please enter a valid input\\n\");","lastModifiedDate":"2021-11-17"},{"lineNumber":55,"author":{"gitId":"maynardwhy"},"content":"                instructions();","lastModifiedDate":"2021-11-15"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"            } catch (NullPointerException e){","lastModifiedDate":"2021-11-15"},{"lineNumber":57,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Please enter a valid input\\n\");","lastModifiedDate":"2021-11-17"},{"lineNumber":58,"author":{"gitId":"maynardwhy"},"content":"                instructions();","lastModifiedDate":"2021-11-15"},{"lineNumber":59,"author":{"gitId":"maynardwhy"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-11-15"},{"lineNumber":60,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Please enter a valid input\\n\");","lastModifiedDate":"2021-11-17"},{"lineNumber":61,"author":{"gitId":"maynardwhy"},"content":"                instructions();","lastModifiedDate":"2021-11-15"},{"lineNumber":62,"author":{"gitId":"maynardwhy"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-15"},{"lineNumber":63,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"Please enter a valid input\\n\");","lastModifiedDate":"2021-11-17"},{"lineNumber":64,"author":{"gitId":"maynardwhy"},"content":"                instructions();","lastModifiedDate":"2021-11-15"},{"lineNumber":65,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-15"},{"lineNumber":66,"author":{"gitId":"maynardwhy"},"content":"            newLine();","lastModifiedDate":"2021-11-15"},{"lineNumber":67,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-15"},{"lineNumber":68,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":69,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":70,"author":{"gitId":"maynardwhy"},"content":"    private static void dukeLogo () {","lastModifiedDate":"2021-11-15"},{"lineNumber":71,"author":{"gitId":"maynardwhy"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-11-15"},{"lineNumber":72,"author":{"gitId":"maynardwhy"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-11-15"},{"lineNumber":73,"author":{"gitId":"maynardwhy"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-11-15"},{"lineNumber":74,"author":{"gitId":"maynardwhy"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-11-15"},{"lineNumber":75,"author":{"gitId":"maynardwhy"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-11-15"},{"lineNumber":76,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-11-15"},{"lineNumber":77,"author":{"gitId":"maynardwhy"},"content":"        //Hello command","lastModifiedDate":"2021-11-15"},{"lineNumber":78,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"Hello, I\u0027m Duke\\n\" + \"What tasks can I serve you?\");","lastModifiedDate":"2021-11-15"},{"lineNumber":79,"author":{"gitId":"maynardwhy"},"content":"        newLine();","lastModifiedDate":"2021-11-15"},{"lineNumber":80,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":81,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":82,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":83,"author":{"gitId":"maynardwhy"},"content":"     * to end program","lastModifiedDate":"2021-11-17"},{"lineNumber":84,"author":{"gitId":"maynardwhy"},"content":"     * Storage.saveList() - call Storage to save list to duke.txt","lastModifiedDate":"2021-11-17"},{"lineNumber":85,"author":{"gitId":"maynardwhy"},"content":"     * System.exit() - exit system safely","lastModifiedDate":"2021-11-18"},{"lineNumber":86,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":87,"author":{"gitId":"maynardwhy"},"content":"    public static void endDuke () {","lastModifiedDate":"2021-11-15"},{"lineNumber":88,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tBye! Thanks for visiting The Duke!\");","lastModifiedDate":"2021-11-15"},{"lineNumber":89,"author":{"gitId":"maynardwhy"},"content":"        Storage.saveList();","lastModifiedDate":"2021-11-15"},{"lineNumber":90,"author":{"gitId":"maynardwhy"},"content":"        System.exit(0);","lastModifiedDate":"2021-11-15"},{"lineNumber":91,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":92,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":93,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":94,"author":{"gitId":"maynardwhy"},"content":"     * newLine() - Prints a new line break","lastModifiedDate":"2021-11-17"},{"lineNumber":95,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":96,"author":{"gitId":"maynardwhy"},"content":"    public static void newLine () {","lastModifiedDate":"2021-11-15"},{"lineNumber":97,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"________________________________________________\");","lastModifiedDate":"2021-11-15"},{"lineNumber":98,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-15"},{"lineNumber":99,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":100,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":101,"author":{"gitId":"maynardwhy"},"content":"     * Prints out instructions to use Duke","lastModifiedDate":"2021-11-17"},{"lineNumber":102,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":103,"author":{"gitId":"maynardwhy"},"content":"    public static void instructions () {","lastModifiedDate":"2021-11-15"},{"lineNumber":104,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"DUKE helps you organise your tasks efficiently, please enter as follows:\" +","lastModifiedDate":"2021-11-15"},{"lineNumber":105,"author":{"gitId":"maynardwhy"},"content":"                \"\\n\\tevent [description] /at [time]\\n\\t\" +","lastModifiedDate":"2021-11-15"},{"lineNumber":106,"author":{"gitId":"maynardwhy"},"content":"                \"todo [description]\\n\\t\" +","lastModifiedDate":"2021-11-15"},{"lineNumber":107,"author":{"gitId":"maynardwhy"},"content":"                \"deadline [description] /by yyyy-mm-dd, hh:mm\\n\\t\" +","lastModifiedDate":"2021-11-19"},{"lineNumber":108,"author":{"gitId":"maynardwhy"},"content":"                \"done [number] - to mark task as completed\\n\\t\" +","lastModifiedDate":"2021-11-15"},{"lineNumber":109,"author":{"gitId":"maynardwhy"},"content":"                \"list - to show all tasks\\n\\t\" +","lastModifiedDate":"2021-11-15"},{"lineNumber":110,"author":{"gitId":"maynardwhy"},"content":"                \"delete [number] - to delete a task\\n\\t\" +","lastModifiedDate":"2021-11-15"},{"lineNumber":111,"author":{"gitId":"maynardwhy"},"content":"                \"on yyyy-mm-dd - to check if tasks match date given\\n\\t\" +","lastModifiedDate":"2021-11-17"},{"lineNumber":112,"author":{"gitId":"maynardwhy"},"content":"                \"priority [index] [0(TO REMOVE) / 1(LOW) / 2(MED) / 3(HIGH)] - to set priority\\n\\t\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":113,"author":{"gitId":"maynardwhy"},"content":"                \"find [word] - To search for a word\\n\\t\" +","lastModifiedDate":"2021-11-18"},{"lineNumber":114,"author":{"gitId":"maynardwhy"},"content":"                \"bye - to end DUKE\");","lastModifiedDate":"2021-11-15"},{"lineNumber":115,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":116,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-15"}],"authorContributionMap":{"maynardwhy":116}},{"path":"src/main/java/com/tic2002/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.duke;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.app.UI;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"public class Duke {","lastModifiedDate":"2021-11-15"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"    private static UI ui;","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"    /** @param args to create program to run","lastModifiedDate":"2021-11-17"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"     * Creating a new UI in main Duke \u0026 running","lastModifiedDate":"2021-11-17"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"        ui.run();","lastModifiedDate":"2021-11-15"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":20}},{"path":"src/main/java/com/tic2002/task/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-19"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-17"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-17"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-17"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-17"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-17"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"public class DateTime {","lastModifiedDate":"2021-11-17"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"     * To validate user input String date","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"     * @param date Takes a String input date","lastModifiedDate":"2021-11-17"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"     *             verifying if date matches \"yyyy-mm-dd\" format","lastModifiedDate":"2021-11-17"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"     * @return returns true if matches accurate format","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"     *         returns false if does not match accurate format","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"     * parse date with format","lastModifiedDate":"2021-11-17"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"     * must be exact with format","lastModifiedDate":"2021-11-17"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"     * if true, set","lastModifiedDate":"2021-11-17"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"     * return valid as true","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isValidDate (String date) {","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"        boolean valid;","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"        try {","lastModifiedDate":"2021-11-17"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"            sdf.parse(date);","lastModifiedDate":"2021-11-17"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"            sdf.setLenient(false);","lastModifiedDate":"2021-11-17"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"            valid \u003d true;","lastModifiedDate":"2021-11-17"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"        } catch (ParseException e){","lastModifiedDate":"2021-11-17"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"            valid \u003d false;","lastModifiedDate":"2021-11-17"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"Please use an exact date: yyyy-mm-dd\");","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-17"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"        return valid;","lastModifiedDate":"2021-11-17"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-17"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"     * To valid user input String time","lastModifiedDate":"2021-11-17"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"     * @param time takes a String input time","lastModifiedDate":"2021-11-17"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"     *             verifying if time matches \"hh:mm\" format","lastModifiedDate":"2021-11-17"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"     * @return true if matches format, false if does not match format","lastModifiedDate":"2021-11-18"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"     *          parse date with format","lastModifiedDate":"2021-11-18"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"     *          must be exact with format","lastModifiedDate":"2021-11-18"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"     *          if true, set \u0026 return","lastModifiedDate":"2021-11-18"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isValidTime (String time) {","lastModifiedDate":"2021-11-17"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"HH:mm\");","lastModifiedDate":"2021-11-18"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"        boolean valid;","lastModifiedDate":"2021-11-18"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"        try {","lastModifiedDate":"2021-11-17"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"            sdf.parse(time);","lastModifiedDate":"2021-11-17"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"            sdf.setLenient(false);","lastModifiedDate":"2021-11-17"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"            valid \u003d true;","lastModifiedDate":"2021-11-17"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"        } catch (ParseException e){","lastModifiedDate":"2021-11-17"},{"lineNumber":52,"author":{"gitId":"maynardwhy"},"content":"            valid \u003d false;","lastModifiedDate":"2021-11-17"},{"lineNumber":53,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-17"},{"lineNumber":54,"author":{"gitId":"maynardwhy"},"content":"        return valid;","lastModifiedDate":"2021-11-17"},{"lineNumber":55,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-17"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":57,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":58,"author":{"gitId":"maynardwhy"},"content":"     * Takes user input String date and returns as LocalDate","lastModifiedDate":"2021-11-17"},{"lineNumber":59,"author":{"gitId":"maynardwhy"},"content":"     * @param date parses to LocalDate","lastModifiedDate":"2021-11-17"},{"lineNumber":60,"author":{"gitId":"maynardwhy"},"content":"     * @return date as LocalDate","lastModifiedDate":"2021-11-17"},{"lineNumber":61,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":62,"author":{"gitId":"maynardwhy"},"content":"    public static LocalDate toDate(String date) {","lastModifiedDate":"2021-11-17"},{"lineNumber":63,"author":{"gitId":"maynardwhy"},"content":"        return LocalDate.parse(date);","lastModifiedDate":"2021-11-18"},{"lineNumber":64,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-17"},{"lineNumber":65,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":66,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":67,"author":{"gitId":"maynardwhy"},"content":"     * Takes user input String time and returns as LocalTime","lastModifiedDate":"2021-11-17"},{"lineNumber":68,"author":{"gitId":"maynardwhy"},"content":"     * @param time parses to LocalTime","lastModifiedDate":"2021-11-17"},{"lineNumber":69,"author":{"gitId":"maynardwhy"},"content":"     * @return time as LocalTime","lastModifiedDate":"2021-11-17"},{"lineNumber":70,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":71,"author":{"gitId":"maynardwhy"},"content":"    public static LocalTime toTime(String time) {","lastModifiedDate":"2021-11-17"},{"lineNumber":72,"author":{"gitId":"maynardwhy"},"content":"        return LocalTime.parse(time);","lastModifiedDate":"2021-11-18"},{"lineNumber":73,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-17"},{"lineNumber":74,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":75,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":76,"author":{"gitId":"maynardwhy"},"content":"     * Takes LocalDate date and returns in a new format","lastModifiedDate":"2021-11-17"},{"lineNumber":77,"author":{"gitId":"maynardwhy"},"content":"     * formatter to format date to \"dd MMM yyyy\"","lastModifiedDate":"2021-11-18"},{"lineNumber":78,"author":{"gitId":"maynardwhy"},"content":"     * @return new date format","lastModifiedDate":"2021-11-17"},{"lineNumber":79,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":80,"author":{"gitId":"maynardwhy"},"content":"    public static String toNewDateFormat (LocalDate date) {","lastModifiedDate":"2021-11-17"},{"lineNumber":81,"author":{"gitId":"maynardwhy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-11-17"},{"lineNumber":82,"author":{"gitId":"maynardwhy"},"content":"        return date.format(formatter);","lastModifiedDate":"2021-11-17"},{"lineNumber":83,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-17"},{"lineNumber":84,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":85,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isWithinThreeDays(LocalDate taskDate) {","lastModifiedDate":"2021-11-19"},{"lineNumber":86,"author":{"gitId":"maynardwhy"},"content":"        LocalDate yesterday \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2021-11-19"},{"lineNumber":87,"author":{"gitId":"maynardwhy"},"content":"        LocalDate threeDaysAfter \u003d LocalDate.now().plusDays(3);","lastModifiedDate":"2021-11-19"},{"lineNumber":88,"author":{"gitId":"maynardwhy"},"content":"        return taskDate.isAfter(yesterday) \u0026\u0026 taskDate.isBefore(threeDaysAfter);","lastModifiedDate":"2021-11-19"},{"lineNumber":89,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-19"},{"lineNumber":90,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":91,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isOverDue(LocalDate taskDate) {","lastModifiedDate":"2021-11-19"},{"lineNumber":92,"author":{"gitId":"maynardwhy"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-11-19"},{"lineNumber":93,"author":{"gitId":"maynardwhy"},"content":"        return taskDate.isBefore(today);","lastModifiedDate":"2021-11-19"},{"lineNumber":94,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-19"},{"lineNumber":95,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-17"}],"authorContributionMap":{"maynardwhy":95}},{"path":"src/main/java/com/tic2002/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-17"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-17"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.*;","lastModifiedDate":"2021-11-19"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"/**","lastModifiedDate":"2021-11-17"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":" * Deadline is inheriting from Task","lastModifiedDate":"2021-11-17"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":" */","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"     * Deadline takes in input of String description, LocalDate dDate and LocalTime dTime","lastModifiedDate":"2021-11-17"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"     * @param description description from Parser that user entered","lastModifiedDate":"2021-11-17"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"     * @param dDate date from Parser","lastModifiedDate":"2021-11-17"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"     * @param dTime time from Parser","lastModifiedDate":"2021-11-17"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"     * The Deadline method stores these tasks in Task","lastModifiedDate":"2021-11-17"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"     * super.type - Assigns type \"D\"","lastModifiedDate":"2021-11-17"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"     * super.isDone - Assigns false to done","lastModifiedDate":"2021-11-17"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"     * @Override - print task in deadline format","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"    public Deadline(String description, LocalDate dDate, LocalTime dTime) {","lastModifiedDate":"2021-11-17"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"        super(description);","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"        super.type(\"D\");","lastModifiedDate":"2021-11-15"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"        super.date \u003d dDate;","lastModifiedDate":"2021-11-17"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"        super.time \u003d dTime;","lastModifiedDate":"2021-11-17"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"        super.isDone \u003d false;","lastModifiedDate":"2021-11-15"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"        super.priority \u003d 0;","lastModifiedDate":"2021-11-18"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"        if(isWithinThreeDays(dDate)){","lastModifiedDate":"2021-11-19"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"            super.priority \u003d 3;","lastModifiedDate":"2021-11-19"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-19"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"        else if(isOverDue(dDate)){","lastModifiedDate":"2021-11-19"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"            super.priority \u003d 4;","lastModifiedDate":"2021-11-19"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-19"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"        else{","lastModifiedDate":"2021-11-19"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"            super.priority \u003d 0;","lastModifiedDate":"2021-11-19"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-19"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"    public String printTask() {","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"        return super.printTask() + \" (by: \" + toNewDateFormat(super.date) + \", \" + super.time + \")\";","lastModifiedDate":"2021-11-17"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":45}},{"path":"src/main/java/com/tic2002/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-11-15"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"     * Deadline takes in input of String description, String at","lastModifiedDate":"2021-11-17"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"     * @param description description from Parser that user entered","lastModifiedDate":"2021-11-17"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"     * super.type - Assigns type \"E\"","lastModifiedDate":"2021-11-17"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"     * super.timing - Stores String at in task timing","lastModifiedDate":"2021-11-17"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"     * super.isDone - Assigns false to done","lastModifiedDate":"2021-11-17"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"     * @Override - print task in Event format","lastModifiedDate":"2021-11-18"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-11-17"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"        super(description);","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"        super.type(\"E\");","lastModifiedDate":"2021-11-15"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"        super.timing(at);","lastModifiedDate":"2021-11-17"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"        super.isDone \u003d false;","lastModifiedDate":"2021-11-15"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"        super.priority \u003d 0;","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    public String printTask() {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"        return super.printTask() + \" (at: \" + super.timing + \")\";","lastModifiedDate":"2021-11-15"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":24}},{"path":"src/main/java/com/tic2002/task/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"public class Find {","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"    public static void findWord(String input){","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"        String description;","lastModifiedDate":"2021-11-18"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"        String checkWord \u003d input.toLowerCase();","lastModifiedDate":"2021-11-18"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Check \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-18"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"        for(int i\u003d0; i\u003cTemp.size(); i++){","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"            description \u003d Temp.get(i).getDescription();","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"            if(description.contains(checkWord)){","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"                Check.add(Temp.get(i));","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"        if(Check.size() \u003d\u003d 0){","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tOops! There are no matching tasks in your list\");","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"        else {","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"            for(int i\u003d0; i\u003cCheck.size(); i++){","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"                System.out.println(\"\\t\" + (i+1) + \". \" + Check.get(i).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":28}},{"path":"src/main/java/com/tic2002/task/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.app.Storage;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-15"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.TaskCommands.printCount;","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"public class List {","lastModifiedDate":"2021-11-19"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"    private static ArrayList\u003cTask\u003e List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-15"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"     * To allow other ArrayList in other classes to set into main ArrayList List","lastModifiedDate":"2021-11-17"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"     * @param Other references other ArrayList","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"    public static void setList(ArrayList\u003cTask\u003e Other) {","lastModifiedDate":"2021-11-15"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"        List \u003d Other;","lastModifiedDate":"2021-11-15"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"     * To return ArrayList List to other ArrayList in other classes","lastModifiedDate":"2021-11-17"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"     * @return ArrayList List","lastModifiedDate":"2021-11-17"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"    public static ArrayList\u003cTask\u003e getList(){","lastModifiedDate":"2021-11-15"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"        return List;","lastModifiedDate":"2021-11-15"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"     * Method to add Task to list","lastModifiedDate":"2021-11-17"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"     * using ArrayList.add() method","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"     * Print line to note task has been added","lastModifiedDate":"2021-11-17"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"     * Print number of items in list","lastModifiedDate":"2021-11-17"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"     * Saves list into storage","lastModifiedDate":"2021-11-17"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"     * @param t - Tasks","lastModifiedDate":"2021-11-17"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"    public static void addList(Task t) {","lastModifiedDate":"2021-11-15"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"        List.add(t);","lastModifiedDate":"2021-11-15"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-11-15"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"        printCount();","lastModifiedDate":"2021-11-15"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"        Storage.saveList();","lastModifiedDate":"2021-11-15"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"     * Method to return List size in int","lastModifiedDate":"2021-11-17"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"     * @return int size of List","lastModifiedDate":"2021-11-17"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"    public static int getSize(){","lastModifiedDate":"2021-11-15"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"        return List.size();","lastModifiedDate":"2021-11-15"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-15"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"}],"authorContributionMap":{"maynardwhy":51}},{"path":"src/main/java/com/tic2002/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"public class Priority extends Task {","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"    private enum validPriority {LOW, MEDIUM, HIGH, OVERDUE; }","lastModifiedDate":"2021-11-19"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-19"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"     * Check if user input is within 1 to 3","lastModifiedDate":"2021-11-19"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"     * @param input user input","lastModifiedDate":"2021-11-19"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"     * @return true and false","lastModifiedDate":"2021-11-19"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-19"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"    public static boolean isValidPriority(int input) {","lastModifiedDate":"2021-11-18"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"        if(input \u003e\u003d 0 \u0026\u0026 input \u003c\u003d3){","lastModifiedDate":"2021-11-19"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"            return true;","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"        return false;","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-19"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    public static String printPriority(int value) {","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"        switch(value) {","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"        case 1:","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"            return \"[\" + validPriority.LOW + \"]\";","lastModifiedDate":"2021-11-19"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"        case 2:","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"            return \"[\" + validPriority.MEDIUM + \"]\";","lastModifiedDate":"2021-11-19"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"        case 3:","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"            return \"[\" + validPriority.HIGH + \"]\";","lastModifiedDate":"2021-11-19"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"        case 4:","lastModifiedDate":"2021-11-19"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"            return \"[\" + validPriority.OVERDUE + \"]\";","lastModifiedDate":"2021-11-19"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"        return \"\";","lastModifiedDate":"2021-11-18"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":31}},{"path":"src/main/java/com/tic2002/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-17"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-17"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.Priority.printPriority;","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"/**","lastModifiedDate":"2021-11-17"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":" * Creates what is in a Task","lastModifiedDate":"2021-11-17"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":" * creates String description - description of task","lastModifiedDate":"2021-11-17"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":" * creates boolean isDone - if the task is done","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":" * creates String type - what type of task is it (Todo, Deadline, Event)","lastModifiedDate":"2021-11-17"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":" * creates LocalDate date - stores date for Deadline","lastModifiedDate":"2021-11-17"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":" * creates LocalTime time - stores time for Deadline","lastModifiedDate":"2021-11-17"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":" */","lastModifiedDate":"2021-11-17"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"public class Task {","lastModifiedDate":"2021-11-15"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"    protected String description;","lastModifiedDate":"2021-11-15"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-11-15"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"    protected String type;","lastModifiedDate":"2021-11-15"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"    protected String timing; ","lastModifiedDate":"2021-11-15"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-11-17"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-11-17"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"    protected int priority;","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"    public Task(){}","lastModifiedDate":"2021-11-15"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"     * Modify basic Task","lastModifiedDate":"2021-11-17"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"     * @param description description of the task","lastModifiedDate":"2021-11-17"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-11-15"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-15"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"     * Modify type of task","lastModifiedDate":"2021-11-17"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"     * @param type type of task assigned","lastModifiedDate":"2021-11-17"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"    public void type(String type){","lastModifiedDate":"2021-11-15"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-11-15"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"     * Modify timing of Event","lastModifiedDate":"2021-11-17"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"     * @param timing timing of Event","lastModifiedDate":"2021-11-17"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"    public void timing (String timing){","lastModifiedDate":"2021-11-15"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2021-11-15"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"     * Modify status of task","lastModifiedDate":"2021-11-17"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"     * @param isDone if task is completed","lastModifiedDate":"2021-11-17"},{"lineNumber":52,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":53,"author":{"gitId":"maynardwhy"},"content":"    public void isDone(Boolean isDone) {this.isDone \u003d isDone; }","lastModifiedDate":"2021-11-15"},{"lineNumber":54,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":55,"author":{"gitId":"maynardwhy"},"content":"    public void priority (int priority) {this.priority \u003d priority; }","lastModifiedDate":"2021-11-18"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":57,"author":{"gitId":"maynardwhy"},"content":"     * Modify date of task to be completed by","lastModifiedDate":"2021-11-17"},{"lineNumber":58,"author":{"gitId":"maynardwhy"},"content":"     * @param date date of task to be completed by","lastModifiedDate":"2021-11-17"},{"lineNumber":59,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":60,"author":{"gitId":"maynardwhy"},"content":"    public void date (LocalDate date){this.date \u003d date; }","lastModifiedDate":"2021-11-17"},{"lineNumber":61,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":62,"author":{"gitId":"maynardwhy"},"content":"     * Modify time of task to be completed by","lastModifiedDate":"2021-11-17"},{"lineNumber":63,"author":{"gitId":"maynardwhy"},"content":"     * @param time date of task to be completed by","lastModifiedDate":"2021-11-17"},{"lineNumber":64,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":65,"author":{"gitId":"maynardwhy"},"content":"    public void time (LocalTime time){this.time \u003d time; }","lastModifiedDate":"2021-11-17"},{"lineNumber":66,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":67,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":68,"author":{"gitId":"maynardwhy"},"content":"     * Method to set task as done","lastModifiedDate":"2021-11-17"},{"lineNumber":69,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":70,"author":{"gitId":"maynardwhy"},"content":"    public void setDone() {","lastModifiedDate":"2021-11-15"},{"lineNumber":71,"author":{"gitId":"maynardwhy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-11-15"},{"lineNumber":72,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":73,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-15"},{"lineNumber":74,"author":{"gitId":"maynardwhy"},"content":"    public void setUnDone() {this.isDone \u003d false; }","lastModifiedDate":"2021-11-18"},{"lineNumber":75,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":76,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":77,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":78,"author":{"gitId":"maynardwhy"},"content":"     * Method to get status of isDone","lastModifiedDate":"2021-11-17"},{"lineNumber":79,"author":{"gitId":"maynardwhy"},"content":"     * @return \"X\" if true, \"\" if false","lastModifiedDate":"2021-11-17"},{"lineNumber":80,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":81,"author":{"gitId":"maynardwhy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-11-15"},{"lineNumber":82,"author":{"gitId":"maynardwhy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-11-15"},{"lineNumber":83,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":84,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":85,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":86,"author":{"gitId":"maynardwhy"},"content":"     * Retrieve done status of isDone","lastModifiedDate":"2021-11-17"},{"lineNumber":87,"author":{"gitId":"maynardwhy"},"content":"     * @return true or false","lastModifiedDate":"2021-11-17"},{"lineNumber":88,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":89,"author":{"gitId":"maynardwhy"},"content":"    public String getDone() { return (isDone ? \"true\" : \"false\");}","lastModifiedDate":"2021-11-17"},{"lineNumber":90,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":91,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":92,"author":{"gitId":"maynardwhy"},"content":"     * Retrieve description","lastModifiedDate":"2021-11-17"},{"lineNumber":93,"author":{"gitId":"maynardwhy"},"content":"     * @return description of task","lastModifiedDate":"2021-11-17"},{"lineNumber":94,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":95,"author":{"gitId":"maynardwhy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-11-15"},{"lineNumber":96,"author":{"gitId":"maynardwhy"},"content":"        return description;","lastModifiedDate":"2021-11-15"},{"lineNumber":97,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":98,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":99,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":100,"author":{"gitId":"maynardwhy"},"content":"     * retrieve type of Task","lastModifiedDate":"2021-11-17"},{"lineNumber":101,"author":{"gitId":"maynardwhy"},"content":"     * @return type of task","lastModifiedDate":"2021-11-17"},{"lineNumber":102,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":103,"author":{"gitId":"maynardwhy"},"content":"    public String getType() { return type; }","lastModifiedDate":"2021-11-15"},{"lineNumber":104,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":105,"author":{"gitId":"maynardwhy"},"content":"     * retrieve Timing of Event","lastModifiedDate":"2021-11-17"},{"lineNumber":106,"author":{"gitId":"maynardwhy"},"content":"     * @return timing","lastModifiedDate":"2021-11-17"},{"lineNumber":107,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":108,"author":{"gitId":"maynardwhy"},"content":"    public String getTiming() {return timing; }","lastModifiedDate":"2021-11-15"},{"lineNumber":109,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":110,"author":{"gitId":"maynardwhy"},"content":"     * retrieve Date of Deadline","lastModifiedDate":"2021-11-17"},{"lineNumber":111,"author":{"gitId":"maynardwhy"},"content":"     * @return date","lastModifiedDate":"2021-11-17"},{"lineNumber":112,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":113,"author":{"gitId":"maynardwhy"},"content":"    public LocalDate getDate() { return date; }","lastModifiedDate":"2021-11-17"},{"lineNumber":114,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":115,"author":{"gitId":"maynardwhy"},"content":"     * retrieve Time of Deadline","lastModifiedDate":"2021-11-17"},{"lineNumber":116,"author":{"gitId":"maynardwhy"},"content":"     * @return time","lastModifiedDate":"2021-11-17"},{"lineNumber":117,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":118,"author":{"gitId":"maynardwhy"},"content":"    public LocalTime getTime() { return time; }","lastModifiedDate":"2021-11-17"},{"lineNumber":119,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-17"},{"lineNumber":120,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":121,"author":{"gitId":"maynardwhy"},"content":"     * Get priority number","lastModifiedDate":"2021-11-18"},{"lineNumber":122,"author":{"gitId":"maynardwhy"},"content":"     * @return priority number","lastModifiedDate":"2021-11-18"},{"lineNumber":123,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":124,"author":{"gitId":"maynardwhy"},"content":"    public int getPriority() {return priority; }","lastModifiedDate":"2021-11-18"},{"lineNumber":125,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":126,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":127,"author":{"gitId":"maynardwhy"},"content":"     * prints tasks out","lastModifiedDate":"2021-11-17"},{"lineNumber":128,"author":{"gitId":"maynardwhy"},"content":"     * @return format of task with type, status and description of Task","lastModifiedDate":"2021-11-17"},{"lineNumber":129,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":130,"author":{"gitId":"maynardwhy"},"content":"    public String printTask() {","lastModifiedDate":"2021-11-15"},{"lineNumber":131,"author":{"gitId":"maynardwhy"},"content":"        return \"[\" + getType() + \"]\" + \"[\" + getStatusIcon() + \"]\" + printPriority(priority) + \" \" + getDescription();","lastModifiedDate":"2021-11-18"},{"lineNumber":132,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-15"},{"lineNumber":133,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-15"}],"authorContributionMap":{"maynardwhy":133}},{"path":"src/main/java/com/tic2002/task/TaskCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-11-18"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"import static com.tic2002.task.DateTime.*;","lastModifiedDate":"2021-11-19"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"/**","lastModifiedDate":"2021-11-18"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":" * TaskCommands inherits from Task","lastModifiedDate":"2021-11-18"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":" */","lastModifiedDate":"2021-11-18"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"public class TaskCommands extends Task {","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"     * Creates a Temporary ArrayList","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"    private ArrayList\u003cTask\u003e Temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"     * Method to add to Todo","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"     * @param description takes String description and adds to Todo","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"    public static void addTodo(String description) {","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"        List.addList(new Todo(description));","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"     * Method to add to Event","lastModifiedDate":"2021-11-18"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"     * @param description takes String description and adds to Event","lastModifiedDate":"2021-11-18"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"     * @param at Takes String at and adds to Event (timing)","lastModifiedDate":"2021-11-18"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"    public static void addEvent(String description, String at) {","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"        List.addList(new Event(description, at));","lastModifiedDate":"2021-11-18"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"     * Method to add to Deadline","lastModifiedDate":"2021-11-18"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"     * @param description takes description and adds to Deadline","lastModifiedDate":"2021-11-18"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"     * @param byDate takes LocalDate date and adds to Deadline (date of deadline)","lastModifiedDate":"2021-11-18"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"     * @param byTime takes LocalDate time and adds to Deadline (time of deadline)","lastModifiedDate":"2021-11-18"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"    public static void addDeadline(String description, LocalDate byDate, LocalTime byTime) {","lastModifiedDate":"2021-11-18"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"        List.addList(new Deadline(description, byDate, byTime));","lastModifiedDate":"2021-11-18"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"     * prints out number of tasks in list","lastModifiedDate":"2021-11-18"},{"lineNumber":45,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":46,"author":{"gitId":"maynardwhy"},"content":"    public static void printCount() {","lastModifiedDate":"2021-11-18"},{"lineNumber":47,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-19"},{"lineNumber":48,"author":{"gitId":"maynardwhy"},"content":"        int ref \u003d -1;","lastModifiedDate":"2021-11-19"},{"lineNumber":49,"author":{"gitId":"maynardwhy"},"content":"        ref +\u003d Temp.size();","lastModifiedDate":"2021-11-19"},{"lineNumber":50,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\t\\t\" + Temp.get(ref).printTask()  +","lastModifiedDate":"2021-11-19"},{"lineNumber":51,"author":{"gitId":"maynardwhy"},"content":"                \"\\n\\tNow you have \" + List.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-11-19"},{"lineNumber":52,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":53,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":54,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":55,"author":{"gitId":"maynardwhy"},"content":"     * Method prints out list","lastModifiedDate":"2021-11-18"},{"lineNumber":56,"author":{"gitId":"maynardwhy"},"content":"     * if list size is empty, print out error","lastModifiedDate":"2021-11-18"},{"lineNumber":57,"author":{"gitId":"maynardwhy"},"content":"     * return","lastModifiedDate":"2021-11-18"},{"lineNumber":58,"author":{"gitId":"maynardwhy"},"content":"     *","lastModifiedDate":"2021-11-18"},{"lineNumber":59,"author":{"gitId":"maynardwhy"},"content":"     * print out tasks in list line","lastModifiedDate":"2021-11-18"},{"lineNumber":60,"author":{"gitId":"maynardwhy"},"content":"     * print out tasks using a loop, number the list items","lastModifiedDate":"2021-11-18"},{"lineNumber":61,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":62,"author":{"gitId":"maynardwhy"},"content":"    public static void printList() {","lastModifiedDate":"2021-11-18"},{"lineNumber":63,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":64,"author":{"gitId":"maynardwhy"},"content":"        if(Temp.size() \u003d\u003d 0){","lastModifiedDate":"2021-11-18"},{"lineNumber":65,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tThere are no items in your list\");","lastModifiedDate":"2021-11-18"},{"lineNumber":66,"author":{"gitId":"maynardwhy"},"content":"            return;","lastModifiedDate":"2021-11-18"},{"lineNumber":67,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":68,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-11-18"},{"lineNumber":69,"author":{"gitId":"maynardwhy"},"content":"        for (int i\u003d0; i\u003cTemp.size(); i++) {","lastModifiedDate":"2021-11-18"},{"lineNumber":70,"author":{"gitId":"maynardwhy"},"content":"            if(Temp.get(i).getStatusIcon().equals(\" \") \u0026\u0026 Temp.get(i).getType().equals(\"D\")) {","lastModifiedDate":"2021-11-19"},{"lineNumber":71,"author":{"gitId":"maynardwhy"},"content":"                if (isWithinThreeDays(Temp.get(i).date)) {","lastModifiedDate":"2021-11-19"},{"lineNumber":72,"author":{"gitId":"maynardwhy"},"content":"                    Temp.get(i).priority(3);","lastModifiedDate":"2021-11-19"},{"lineNumber":73,"author":{"gitId":"maynardwhy"},"content":"                }","lastModifiedDate":"2021-11-19"},{"lineNumber":74,"author":{"gitId":"maynardwhy"},"content":"                if(isOverDue(Temp.get(i).date)){","lastModifiedDate":"2021-11-19"},{"lineNumber":75,"author":{"gitId":"maynardwhy"},"content":"                    Temp.get(i).priority(4);","lastModifiedDate":"2021-11-19"},{"lineNumber":76,"author":{"gitId":"maynardwhy"},"content":"                }","lastModifiedDate":"2021-11-19"},{"lineNumber":77,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-19"},{"lineNumber":78,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\t\" + (i+1) + \". \" + Temp.get(i).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":79,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":80,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":81,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":82,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":83,"author":{"gitId":"maynardwhy"},"content":"     * Method to check if date matches","lastModifiedDate":"2021-11-18"},{"lineNumber":84,"author":{"gitId":"maynardwhy"},"content":"     * @param checkDate takes in user input of date","lastModifiedDate":"2021-11-18"},{"lineNumber":85,"author":{"gitId":"maynardwhy"},"content":"     *                  creates Temp ArrayList and Placeholder ArrayList","lastModifiedDate":"2021-11-18"},{"lineNumber":86,"author":{"gitId":"maynardwhy"},"content":"     *                  creates LocalDate listDate as dates in our listing","lastModifiedDate":"2021-11-18"},{"lineNumber":87,"author":{"gitId":"maynardwhy"},"content":"     *","lastModifiedDate":"2021-11-18"},{"lineNumber":88,"author":{"gitId":"maynardwhy"},"content":"     *                  if Temp is empty, print error","lastModifiedDate":"2021-11-18"},{"lineNumber":89,"author":{"gitId":"maynardwhy"},"content":"     *","lastModifiedDate":"2021-11-18"},{"lineNumber":90,"author":{"gitId":"maynardwhy"},"content":"     * Using for loop, check each item in our listing","lastModifiedDate":"2021-11-18"},{"lineNumber":91,"author":{"gitId":"maynardwhy"},"content":"     * if the Task in the list matches \"D\" (Deadline)","lastModifiedDate":"2021-11-18"},{"lineNumber":92,"author":{"gitId":"maynardwhy"},"content":"     * Get date from that Task","lastModifiedDate":"2021-11-18"},{"lineNumber":93,"author":{"gitId":"maynardwhy"},"content":"     * Compare date from listing listDate with user input date checkDate","lastModifiedDate":"2021-11-18"},{"lineNumber":94,"author":{"gitId":"maynardwhy"},"content":"     * if dates are equal, add to Placeholder ArrayList","lastModifiedDate":"2021-11-18"},{"lineNumber":95,"author":{"gitId":"maynardwhy"},"content":"     * If no items were copied, no dates match, print error","lastModifiedDate":"2021-11-18"},{"lineNumber":96,"author":{"gitId":"maynardwhy"},"content":"     *                  Print out Tasks that has dates matched","lastModifiedDate":"2021-11-18"},{"lineNumber":97,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":98,"author":{"gitId":"maynardwhy"},"content":"    public static void printDateList(LocalDate checkDate){","lastModifiedDate":"2021-11-18"},{"lineNumber":99,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":100,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Placeholder \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-18"},{"lineNumber":101,"author":{"gitId":"maynardwhy"},"content":"        LocalDate listDate;","lastModifiedDate":"2021-11-18"},{"lineNumber":102,"author":{"gitId":"maynardwhy"},"content":"        if(Temp.size() \u003d\u003d 0){","lastModifiedDate":"2021-11-18"},{"lineNumber":103,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tThere are no items in your list\");","lastModifiedDate":"2021-11-18"},{"lineNumber":104,"author":{"gitId":"maynardwhy"},"content":"            return;","lastModifiedDate":"2021-11-18"},{"lineNumber":105,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":106,"author":{"gitId":"maynardwhy"},"content":"        for (Task task : Temp) {","lastModifiedDate":"2021-11-18"},{"lineNumber":107,"author":{"gitId":"maynardwhy"},"content":"            if (task.getType().equals(\"D\")) {","lastModifiedDate":"2021-11-18"},{"lineNumber":108,"author":{"gitId":"maynardwhy"},"content":"                listDate \u003d task.getDate();","lastModifiedDate":"2021-11-18"},{"lineNumber":109,"author":{"gitId":"maynardwhy"},"content":"                int result \u003d checkDate.compareTo(listDate);","lastModifiedDate":"2021-11-18"},{"lineNumber":110,"author":{"gitId":"maynardwhy"},"content":"                if (result \u003d\u003d 0) {","lastModifiedDate":"2021-11-18"},{"lineNumber":111,"author":{"gitId":"maynardwhy"},"content":"                    Placeholder.add(task);","lastModifiedDate":"2021-11-18"},{"lineNumber":112,"author":{"gitId":"maynardwhy"},"content":"                }","lastModifiedDate":"2021-11-18"},{"lineNumber":113,"author":{"gitId":"maynardwhy"},"content":"            }","lastModifiedDate":"2021-11-18"},{"lineNumber":114,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":115,"author":{"gitId":"maynardwhy"},"content":"        if(Placeholder.size() \u003d\u003d 0) {","lastModifiedDate":"2021-11-18"},{"lineNumber":116,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tThere are no items in your list that matches \" +","lastModifiedDate":"2021-11-18"},{"lineNumber":117,"author":{"gitId":"maynardwhy"},"content":"                    toNewDateFormat(checkDate));","lastModifiedDate":"2021-11-18"},{"lineNumber":118,"author":{"gitId":"maynardwhy"},"content":"            return;","lastModifiedDate":"2021-11-18"},{"lineNumber":119,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":120,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":121,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tThere are \" + Placeholder.size() +","lastModifiedDate":"2021-11-18"},{"lineNumber":122,"author":{"gitId":"maynardwhy"},"content":"                \" tasks in your list that matches \" +","lastModifiedDate":"2021-11-18"},{"lineNumber":123,"author":{"gitId":"maynardwhy"},"content":"                toNewDateFormat(checkDate) + \": \" );","lastModifiedDate":"2021-11-18"},{"lineNumber":124,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":125,"author":{"gitId":"maynardwhy"},"content":"        for (int i\u003d0; i\u003cPlaceholder.size(); i++) {","lastModifiedDate":"2021-11-18"},{"lineNumber":126,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\t\" + (i+1) + \". \" + Placeholder.get(i).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":127,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":128,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":129,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":130,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":131,"author":{"gitId":"maynardwhy"},"content":"     * Method to set Task as done","lastModifiedDate":"2021-11-18"},{"lineNumber":132,"author":{"gitId":"maynardwhy"},"content":"     * @param ref gets index from user","lastModifiedDate":"2021-11-18"},{"lineNumber":133,"author":{"gitId":"maynardwhy"},"content":"     *            Retrieve Task from List and set as done","lastModifiedDate":"2021-11-18"},{"lineNumber":134,"author":{"gitId":"maynardwhy"},"content":"     *            Print out line to confirm done","lastModifiedDate":"2021-11-18"},{"lineNumber":135,"author":{"gitId":"maynardwhy"},"content":"     *            Print out Task that is set as done","lastModifiedDate":"2021-11-18"},{"lineNumber":136,"author":{"gitId":"maynardwhy"},"content":"     *            Update main ArrayList List in List class","lastModifiedDate":"2021-11-18"},{"lineNumber":137,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":138,"author":{"gitId":"maynardwhy"},"content":"    public static void setDone(int ref) {","lastModifiedDate":"2021-11-18"},{"lineNumber":139,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":140,"author":{"gitId":"maynardwhy"},"content":"        Temp.get(ref).setDone();","lastModifiedDate":"2021-11-18"},{"lineNumber":141,"author":{"gitId":"maynardwhy"},"content":"        Temp.get(ref).priority(0);","lastModifiedDate":"2021-11-19"},{"lineNumber":142,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-11-18"},{"lineNumber":143,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\t\\t\" + Temp.get(ref).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":144,"author":{"gitId":"maynardwhy"},"content":"        List.setList(Temp);","lastModifiedDate":"2021-11-18"},{"lineNumber":145,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":146,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":147,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":148,"author":{"gitId":"maynardwhy"},"content":"     * Method to set Task as done","lastModifiedDate":"2021-11-18"},{"lineNumber":149,"author":{"gitId":"maynardwhy"},"content":"     * @param ref gets index from user","lastModifiedDate":"2021-11-18"},{"lineNumber":150,"author":{"gitId":"maynardwhy"},"content":"     *            Retrieve Task from List and set as not done","lastModifiedDate":"2021-11-18"},{"lineNumber":151,"author":{"gitId":"maynardwhy"},"content":"     *            Print out line to set as not done","lastModifiedDate":"2021-11-18"},{"lineNumber":152,"author":{"gitId":"maynardwhy"},"content":"     *            Print out Task that is set as not done","lastModifiedDate":"2021-11-18"},{"lineNumber":153,"author":{"gitId":"maynardwhy"},"content":"     *            Update main ArrayList List in List class","lastModifiedDate":"2021-11-18"},{"lineNumber":154,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":155,"author":{"gitId":"maynardwhy"},"content":"    public static void setUnDone(int ref) {","lastModifiedDate":"2021-11-18"},{"lineNumber":156,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":157,"author":{"gitId":"maynardwhy"},"content":"        Temp.get(ref).setUnDone();","lastModifiedDate":"2021-11-18"},{"lineNumber":158,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tOk! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2021-11-18"},{"lineNumber":159,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\t\\t\" + Temp.get(ref).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":160,"author":{"gitId":"maynardwhy"},"content":"        List.setList(Temp);","lastModifiedDate":"2021-11-18"},{"lineNumber":161,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":162,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":163,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":164,"author":{"gitId":"maynardwhy"},"content":"     * Method to delete Task","lastModifiedDate":"2021-11-18"},{"lineNumber":165,"author":{"gitId":"maynardwhy"},"content":"     * @param ref gets index from user","lastModifiedDate":"2021-11-18"},{"lineNumber":166,"author":{"gitId":"maynardwhy"},"content":"     *            Print delete statement","lastModifiedDate":"2021-11-18"},{"lineNumber":167,"author":{"gitId":"maynardwhy"},"content":"     *            Copy ArrayList List from List class to ArrayList Temp","lastModifiedDate":"2021-11-18"},{"lineNumber":168,"author":{"gitId":"maynardwhy"},"content":"     *            Print Task to be removed from Temp ArrayList","lastModifiedDate":"2021-11-18"},{"lineNumber":169,"author":{"gitId":"maynardwhy"},"content":"     *            Delete Task from Temp","lastModifiedDate":"2021-11-18"},{"lineNumber":170,"author":{"gitId":"maynardwhy"},"content":"     *            Update main ArrayList List in List class","lastModifiedDate":"2021-11-18"},{"lineNumber":171,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":172,"author":{"gitId":"maynardwhy"},"content":"    public static void deleteTask(int ref) {","lastModifiedDate":"2021-11-18"},{"lineNumber":173,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-11-18"},{"lineNumber":174,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":175,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\t\\t\" + Temp.get(ref).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":176,"author":{"gitId":"maynardwhy"},"content":"        Temp.remove(ref);","lastModifiedDate":"2021-11-18"},{"lineNumber":177,"author":{"gitId":"maynardwhy"},"content":"        List.setList(Temp);","lastModifiedDate":"2021-11-18"},{"lineNumber":178,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":179,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":180,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-18"},{"lineNumber":181,"author":{"gitId":"maynardwhy"},"content":"     * To update a priority in a task","lastModifiedDate":"2021-11-18"},{"lineNumber":182,"author":{"gitId":"maynardwhy"},"content":"     * @param ref index of task location in list","lastModifiedDate":"2021-11-18"},{"lineNumber":183,"author":{"gitId":"maynardwhy"},"content":"     * @param priority set priority value","lastModifiedDate":"2021-11-18"},{"lineNumber":184,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-18"},{"lineNumber":185,"author":{"gitId":"maynardwhy"},"content":"    public static void updatePriority(int ref, int priority) {","lastModifiedDate":"2021-11-18"},{"lineNumber":186,"author":{"gitId":"maynardwhy"},"content":"        ArrayList\u003cTask\u003e Temp \u003d List.getList();","lastModifiedDate":"2021-11-18"},{"lineNumber":187,"author":{"gitId":"maynardwhy"},"content":"        Temp.get(ref).priority \u003d priority;","lastModifiedDate":"2021-11-18"},{"lineNumber":188,"author":{"gitId":"maynardwhy"},"content":"        if(priority \u003d\u003d 0) {","lastModifiedDate":"2021-11-18"},{"lineNumber":189,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tOk! I\u0027ve removed the priority\");","lastModifiedDate":"2021-11-18"},{"lineNumber":190,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":191,"author":{"gitId":"maynardwhy"},"content":"        else {","lastModifiedDate":"2021-11-18"},{"lineNumber":192,"author":{"gitId":"maynardwhy"},"content":"            System.out.println(\"\\tOk! I\u0027ve updated the priority\");","lastModifiedDate":"2021-11-18"},{"lineNumber":193,"author":{"gitId":"maynardwhy"},"content":"        }","lastModifiedDate":"2021-11-18"},{"lineNumber":194,"author":{"gitId":"maynardwhy"},"content":"        System.out.println(\"\\t\\t\" + Temp.get(ref).printTask());","lastModifiedDate":"2021-11-18"},{"lineNumber":195,"author":{"gitId":"maynardwhy"},"content":"        List.setList(Temp);","lastModifiedDate":"2021-11-18"},{"lineNumber":196,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":197,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"},{"lineNumber":198,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":198}},{"path":"src/main/java/com/tic2002/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package com.tic2002.task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"/**","lastModifiedDate":"2021-11-17"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":" * Todo is inheriting from Task","lastModifiedDate":"2021-11-17"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":" */","lastModifiedDate":"2021-11-17"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"    /**","lastModifiedDate":"2021-11-17"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"     * Deadline takes in input of String description","lastModifiedDate":"2021-11-17"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"     * @param description description from Parser that user entered","lastModifiedDate":"2021-11-17"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"     * super.type - Assigns type \"T\"","lastModifiedDate":"2021-11-17"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"     * super.isDone - Assigns false to done","lastModifiedDate":"2021-11-17"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"     * @Override - print task in Todo format","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"     */","lastModifiedDate":"2021-11-17"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"        super(description);","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"        super.type(\"T\");","lastModifiedDate":"2021-11-15"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"        super.isDone \u003d false;","lastModifiedDate":"2021-11-15"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"        super.priority \u003d 0;","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"    public String printTask() {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"        return super.printTask();","lastModifiedDate":"2021-11-15"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":25}},{"path":"src/main/text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"Hello from","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":" ____        _","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"|  _ \\ _   _| | _____","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"Hello, I\u0027m Duke","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"What can I do for you?","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"________________________________________________","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"added: dance","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"________________________________________________","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"added: sing","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"________________________________________________","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"added: act","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"________________________________________________","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"1. [ ] dance","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"2. [ ] sing","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"3. [ ] act","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"\t[X] sing","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"\tBye! Thanks for visiting The Duke!","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":23}},{"path":"src/main/text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"dance","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"sing","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"act","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"list","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"done 2","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"bye","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":6}},{"path":"src/main/text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"then","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"    mkdir ../bin","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"fi","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"# delete output from previous run","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"then","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"fi","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"if ! javac -cp /Users/mwhy/duke/src/main/java -Xlint:none -d ../bin /Users/mwhy/duke/src/main/java/*.java","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"then","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"    exit 1","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"fi","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"# convert to UNIX format","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"then","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"    exit 0","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"else","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"    exit 1","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"fi","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"maynardwhy":38}},{"path":"src/test/java/app/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package app;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.DateTime;","lastModifiedDate":"2021-11-19"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-18"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import org.junit.jupiter.api.RepeatedTest;","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-18"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"class DateTimeTest {","lastModifiedDate":"2021-11-18"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"    DateTime dateTime;","lastModifiedDate":"2021-11-18"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    String date \u003d \"2021-11-11\";","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"    String time \u003d \"05:00\";","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"    void setUp() {","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"        dateTime \u003d new DateTime();","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"    @org.junit.jupiter.api.Test","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"    @DisplayName(\"Dates should return true\")","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    void testIsValidDate() {","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"        assertEquals(true, dateTime.isValidDate(date),","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"                \"Correct date should work\");","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":26,"author":{"gitId":"maynardwhy"},"content":"    @org.junit.jupiter.api.Test","lastModifiedDate":"2021-11-18"},{"lineNumber":27,"author":{"gitId":"maynardwhy"},"content":"    @DisplayName(\"Time should return true\")","lastModifiedDate":"2021-11-18"},{"lineNumber":28,"author":{"gitId":"maynardwhy"},"content":"    void isValidTime() {","lastModifiedDate":"2021-11-18"},{"lineNumber":29,"author":{"gitId":"maynardwhy"},"content":"        assertEquals(true, dateTime.isValidTime(time),","lastModifiedDate":"2021-11-18"},{"lineNumber":30,"author":{"gitId":"maynardwhy"},"content":"                \"Correct time should work\");","lastModifiedDate":"2021-11-18"},{"lineNumber":31,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":32,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":33,"author":{"gitId":"maynardwhy"},"content":"    @org.junit.jupiter.api.Test","lastModifiedDate":"2021-11-18"},{"lineNumber":34,"author":{"gitId":"maynardwhy"},"content":"    void toDate() {","lastModifiedDate":"2021-11-18"},{"lineNumber":35,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":36,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":37,"author":{"gitId":"maynardwhy"},"content":"    @org.junit.jupiter.api.Test","lastModifiedDate":"2021-11-18"},{"lineNumber":38,"author":{"gitId":"maynardwhy"},"content":"    void toTime() {","lastModifiedDate":"2021-11-18"},{"lineNumber":39,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":40,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":41,"author":{"gitId":"maynardwhy"},"content":"    @org.junit.jupiter.api.Test","lastModifiedDate":"2021-11-18"},{"lineNumber":42,"author":{"gitId":"maynardwhy"},"content":"    void toNewDateFormat() {","lastModifiedDate":"2021-11-18"},{"lineNumber":43,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":44,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":44}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maynardwhy"},"content":"package task;","lastModifiedDate":"2021-11-18"},{"lineNumber":2,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":3,"author":{"gitId":"maynardwhy"},"content":"import com.tic2002.task.Todo;","lastModifiedDate":"2021-11-18"},{"lineNumber":4,"author":{"gitId":"maynardwhy"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-18"},{"lineNumber":5,"author":{"gitId":"maynardwhy"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-11-18"},{"lineNumber":6,"author":{"gitId":"maynardwhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-18"},{"lineNumber":7,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":8,"author":{"gitId":"maynardwhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-18"},{"lineNumber":9,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":10,"author":{"gitId":"maynardwhy"},"content":"class TodoTest {","lastModifiedDate":"2021-11-18"},{"lineNumber":11,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":12,"author":{"gitId":"maynardwhy"},"content":"    Todo todo;","lastModifiedDate":"2021-11-18"},{"lineNumber":13,"author":{"gitId":"maynardwhy"},"content":"    String description \u003d \"having lunch\";","lastModifiedDate":"2021-11-18"},{"lineNumber":14,"author":{"gitId":"maynardwhy"},"content":"","lastModifiedDate":"2021-11-18"},{"lineNumber":15,"author":{"gitId":"maynardwhy"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-18"},{"lineNumber":16,"author":{"gitId":"maynardwhy"},"content":"    void setUp(){","lastModifiedDate":"2021-11-18"},{"lineNumber":17,"author":{"gitId":"maynardwhy"},"content":"        todo \u003d new Todo(description);","lastModifiedDate":"2021-11-18"},{"lineNumber":18,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":19,"author":{"gitId":"maynardwhy"},"content":"    @Test","lastModifiedDate":"2021-11-18"},{"lineNumber":20,"author":{"gitId":"maynardwhy"},"content":"    @DisplayName(\"Should print correct entries\")","lastModifiedDate":"2021-11-18"},{"lineNumber":21,"author":{"gitId":"maynardwhy"},"content":"    void printTask() {","lastModifiedDate":"2021-11-18"},{"lineNumber":22,"author":{"gitId":"maynardwhy"},"content":"        assertEquals(\"[T][ ] having lunch\", todo.printTask(),","lastModifiedDate":"2021-11-18"},{"lineNumber":23,"author":{"gitId":"maynardwhy"},"content":"                \"should match output\");","lastModifiedDate":"2021-11-18"},{"lineNumber":24,"author":{"gitId":"maynardwhy"},"content":"    }","lastModifiedDate":"2021-11-18"},{"lineNumber":25,"author":{"gitId":"maynardwhy"},"content":"}","lastModifiedDate":"2021-11-18"}],"authorContributionMap":{"maynardwhy":25}}]
