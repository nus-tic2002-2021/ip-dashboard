[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"# dukeMain.Duke project template","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"3. After that, locate the `src/main/java/dukeMain.Duke.java` file, right-click it, and choose `Run dukeMain.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WhasabiQ":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.7.1\u0027","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"configurations {","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"    intTestImplementation.extendsFrom implementation","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    intTestRuntimeOnly.extendsFrom runtimeOnly","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    useJUnitPlatform {","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        includeEngines \u0027junit-vintage\u0027","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"        // excludeEngines \u0027junit-jupiter\u0027","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"    useTestNG {","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"        groupByInstances \u003d true","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WhasabiQ":14,"-":44}},{"path":"src/main/java/dukeMain/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.commands.Command;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.*;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.*;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"/** The main class of Duke Task Management Application.","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Where the programmes start to run.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * */","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"public class Duke {","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    private Ui ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    private Storage storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    /** Constructor of Duke","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"     *  initialize Storage and Tasklist","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"     *  with the default filepath","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"     * @param filePath String","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"        } catch (InvalidStorageFilePathException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"            ui.showInvalidStorageError();","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    /** Executed after Duke is initialized.","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"     *  Starts to run the whole program.","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"    public void run() {","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"        while (!isExit) {","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"            try {","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"            } finally {","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"                ui.showLine();","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":58}},{"path":"src/main/java/dukeMain/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.commands.*;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.common.month.monthEnum;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/** Parser class helps the program to understand","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * the command entered by the users and/or files.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * */","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"public class Parser {","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    public static String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\\\n%1$s\";","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"     * split str with regex  : \"\\\\s\\\\|\\\\s\" translate to \" | \"","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"     * Specially used for File processing","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"     * @param str String","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"     * @return String[] of splited str","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public static String[] parseFileLine(String str){","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        return str.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * split str with regex indicated by type variable","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * @param type","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     * @param str String","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     * @return String[] of splited str","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"    public static String[] parseType(String str, String type){","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"        return str.split(type);","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"     * Breakdown the commands given from the users.","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"     * @param fullCommand String","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"     * @return Command","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"    public static Command parse(String fullCommand){","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"        String[] strArr \u003d processCommand(fullCommand);","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"        final String commandWord \u003d strArr[0];","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"        final String arguments \u003d strArr[1];","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2021-11-13"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"            case AddCommand.COMMAND_WORD_1: // todo","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"            case AddCommand.COMMAND_WORD_2: // deadline","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"            case AddCommand.COMMAND_WORD_3: // event","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"                return prepareAdd(commandWord,arguments);","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"            case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"                return prepareDeleteNDone(commandWord,arguments);","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"WhasabiQ"},"content":"            case SaveCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"WhasabiQ"},"content":"                return new SaveCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"WhasabiQ"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"WhasabiQ"},"content":"                return new ListCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":63,"author":{"gitId":"WhasabiQ"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-13"},{"lineNumber":64,"author":{"gitId":"WhasabiQ"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"WhasabiQ"},"content":"            case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-11-14"},{"lineNumber":66,"author":{"gitId":"WhasabiQ"},"content":"                return new FindCommand(arguments);","lastModifiedDate":"2021-11-14"},{"lineNumber":67,"author":{"gitId":"WhasabiQ"},"content":"            case HelpCommand.COMMAND_WORD: // Fallthrough","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"WhasabiQ"},"content":"            default:","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"WhasabiQ"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-11-13"},{"lineNumber":70,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"WhasabiQ"},"content":"    /** Helps to prepare and check","lastModifiedDate":"2021-11-14"},{"lineNumber":74,"author":{"gitId":"WhasabiQ"},"content":"     *  the arguments need for Delete and Done command.","lastModifiedDate":"2021-11-14"},{"lineNumber":75,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"WhasabiQ"},"content":"     * @param command String","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"WhasabiQ"},"content":"     * @param arguments String","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"WhasabiQ"},"content":"     * @return Command type","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"WhasabiQ"},"content":"    private static Command prepareDeleteNDone(String command, String arguments) {","lastModifiedDate":"2021-11-14"},{"lineNumber":81,"author":{"gitId":"WhasabiQ"},"content":"        String[] str \u003d parseType(arguments,\"\\\\s\");","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"WhasabiQ"},"content":"//        System.out.println(\"Str : \" + str[0]);","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"WhasabiQ"},"content":"        int index;","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"WhasabiQ"},"content":"        if (str.length !\u003d 1 ) return new IncorrectCommand(\"Please only include 1 Number after \u0027done\u0027\" );","lastModifiedDate":"2021-11-13"},{"lineNumber":85,"author":{"gitId":"WhasabiQ"},"content":"        try{","lastModifiedDate":"2021-11-13"},{"lineNumber":86,"author":{"gitId":"WhasabiQ"},"content":"            index \u003d Integer.parseInt(str[0]);","lastModifiedDate":"2021-11-13"},{"lineNumber":87,"author":{"gitId":"WhasabiQ"},"content":"            return (command.equalsIgnoreCase(DoneCommand.COMMAND_WORD)) ? new DoneCommand(index) : new DeleteCommand(index);","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"WhasabiQ"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":89,"author":{"gitId":"WhasabiQ"},"content":"            return new IncorrectCommand(\"Please enter a number\");","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"WhasabiQ"},"content":"    /** Helps to prepare and check","lastModifiedDate":"2021-11-14"},{"lineNumber":94,"author":{"gitId":"WhasabiQ"},"content":"     *  the arguments need for Add commands.","lastModifiedDate":"2021-11-14"},{"lineNumber":95,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":96,"author":{"gitId":"WhasabiQ"},"content":"     * @param command String","lastModifiedDate":"2021-11-14"},{"lineNumber":97,"author":{"gitId":"WhasabiQ"},"content":"     * @param arguments String","lastModifiedDate":"2021-11-14"},{"lineNumber":98,"author":{"gitId":"WhasabiQ"},"content":"     * @return Command type","lastModifiedDate":"2021-11-14"},{"lineNumber":99,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":100,"author":{"gitId":"WhasabiQ"},"content":"    private static Command prepareAdd(String command,String arguments) {","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"WhasabiQ"},"content":"        String[] str \u003d parseType(arguments,\"/\");","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":103,"author":{"gitId":"WhasabiQ"},"content":"//        if ((command.equalsIgnoreCase(AddCommand.COMMAND_WORD_1) \u0026\u0026 str.length !\u003d 1 ) ||","lastModifiedDate":"2021-11-14"},{"lineNumber":104,"author":{"gitId":"WhasabiQ"},"content":"//            (!command.equalsIgnoreCase(AddCommand.COMMAND_WORD_1) \u0026\u0026 str.length !\u003d 2))","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"WhasabiQ"},"content":"//            return new IncorrectCommand(\"Wrong format. Please follow this the examples\"+AddCommand.MESSAGE_USAGE );","lastModifiedDate":"2021-11-14"},{"lineNumber":106,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":107,"author":{"gitId":"WhasabiQ"},"content":"        return new AddCommand(command, str);","lastModifiedDate":"2021-11-13"},{"lineNumber":108,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"WhasabiQ"},"content":"    /** Helps to break the user commands","lastModifiedDate":"2021-11-14"},{"lineNumber":111,"author":{"gitId":"WhasabiQ"},"content":"     * into commands and argments","lastModifiedDate":"2021-11-14"},{"lineNumber":112,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":113,"author":{"gitId":"WhasabiQ"},"content":"     * @param command String","lastModifiedDate":"2021-11-14"},{"lineNumber":114,"author":{"gitId":"WhasabiQ"},"content":"     * @return String Array","lastModifiedDate":"2021-11-14"},{"lineNumber":115,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":116,"author":{"gitId":"WhasabiQ"},"content":"    private static String[] processCommand(String command){","lastModifiedDate":"2021-11-13"},{"lineNumber":117,"author":{"gitId":"WhasabiQ"},"content":"        String [] split \u003d command.split(\"\\\\s\");","lastModifiedDate":"2021-11-13"},{"lineNumber":118,"author":{"gitId":"WhasabiQ"},"content":"        String [] returnStr \u003d new String[2];","lastModifiedDate":"2021-11-13"},{"lineNumber":119,"author":{"gitId":"WhasabiQ"},"content":"        String arg \u003d \"\";","lastModifiedDate":"2021-11-13"},{"lineNumber":120,"author":{"gitId":"WhasabiQ"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"WhasabiQ"},"content":"        for (String str : split){","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"WhasabiQ"},"content":"            if (count \u003d\u003d 0){","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"WhasabiQ"},"content":"                returnStr[0] \u003d str; // add command into First slot","lastModifiedDate":"2021-11-13"},{"lineNumber":124,"author":{"gitId":"WhasabiQ"},"content":"                count ++;","lastModifiedDate":"2021-11-13"},{"lineNumber":125,"author":{"gitId":"WhasabiQ"},"content":"            }else{","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"WhasabiQ"},"content":"                if (count \u003d\u003d 1){","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"WhasabiQ"},"content":"                    arg +\u003d str;","lastModifiedDate":"2021-11-13"},{"lineNumber":128,"author":{"gitId":"WhasabiQ"},"content":"                    count++ ;","lastModifiedDate":"2021-11-13"},{"lineNumber":129,"author":{"gitId":"WhasabiQ"},"content":"                }else{","lastModifiedDate":"2021-11-13"},{"lineNumber":130,"author":{"gitId":"WhasabiQ"},"content":"                    arg +\u003d  \" \" + str;","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"WhasabiQ"},"content":"                }","lastModifiedDate":"2021-11-13"},{"lineNumber":132,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"WhasabiQ"},"content":"        returnStr[1] \u003d arg;","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"WhasabiQ"},"content":"        return returnStr;","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"WhasabiQ"},"content":"    /** parse Local Date from string variable","lastModifiedDate":"2021-11-14"},{"lineNumber":139,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":140,"author":{"gitId":"WhasabiQ"},"content":"     * @param dateTime String","lastModifiedDate":"2021-11-14"},{"lineNumber":141,"author":{"gitId":"WhasabiQ"},"content":"     * @return LocalDate","lastModifiedDate":"2021-11-14"},{"lineNumber":142,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":143,"author":{"gitId":"WhasabiQ"},"content":"    public static LocalDate parseLDT(String dateTime){","lastModifiedDate":"2021-11-13"},{"lineNumber":144,"author":{"gitId":"WhasabiQ"},"content":"        String str[] \u003d dateTime.split(\"\\\\W\");","lastModifiedDate":"2021-11-13"},{"lineNumber":145,"author":{"gitId":"WhasabiQ"},"content":"        int beginIndex \u003d 0,day,month,year;","lastModifiedDate":"2021-11-13"},{"lineNumber":146,"author":{"gitId":"WhasabiQ"},"content":"        LocalDate lDate ;","lastModifiedDate":"2021-11-13"},{"lineNumber":147,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":148,"author":{"gitId":"WhasabiQ"},"content":"        // Check for any by or at","lastModifiedDate":"2021-11-13"},{"lineNumber":149,"author":{"gitId":"WhasabiQ"},"content":"        if (str[beginIndex].toLowerCase().startsWith(\"at\") || str[beginIndex].toLowerCase().startsWith(\"by\")){","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"WhasabiQ"},"content":"            beginIndex ++;","lastModifiedDate":"2021-11-13"},{"lineNumber":151,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":152,"author":{"gitId":"WhasabiQ"},"content":"        if(str[beginIndex].isEmpty()){","lastModifiedDate":"2021-11-13"},{"lineNumber":153,"author":{"gitId":"WhasabiQ"},"content":"            beginIndex++;","lastModifiedDate":"2021-11-13"},{"lineNumber":154,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"WhasabiQ"},"content":"        day \u003d Integer.parseInt(str[beginIndex]);","lastModifiedDate":"2021-11-13"},{"lineNumber":156,"author":{"gitId":"WhasabiQ"},"content":"        try {","lastModifiedDate":"2021-11-13"},{"lineNumber":157,"author":{"gitId":"WhasabiQ"},"content":"            month \u003d Integer.parseInt(str[beginIndex+1]);","lastModifiedDate":"2021-11-13"},{"lineNumber":158,"author":{"gitId":"WhasabiQ"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":159,"author":{"gitId":"WhasabiQ"},"content":"            month \u003d convertMonth(str[beginIndex+1]);","lastModifiedDate":"2021-11-13"},{"lineNumber":160,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":161,"author":{"gitId":"WhasabiQ"},"content":"        year \u003d Integer.parseInt(str[beginIndex+2]);","lastModifiedDate":"2021-11-13"},{"lineNumber":162,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":163,"author":{"gitId":"WhasabiQ"},"content":"        // Add 2000 to make any value such as 21 into 2021","lastModifiedDate":"2021-11-13"},{"lineNumber":164,"author":{"gitId":"WhasabiQ"},"content":"        if(year \u003c 100) year +\u003d 2000;","lastModifiedDate":"2021-11-13"},{"lineNumber":165,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":166,"author":{"gitId":"WhasabiQ"},"content":"        lDate \u003d LocalDate.of(year,month,day);","lastModifiedDate":"2021-11-13"},{"lineNumber":167,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":168,"author":{"gitId":"WhasabiQ"},"content":"        return lDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":169,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":170,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":171,"author":{"gitId":"WhasabiQ"},"content":"    /** Convert Month from String to integer","lastModifiedDate":"2021-11-14"},{"lineNumber":172,"author":{"gitId":"WhasabiQ"},"content":"     * With the use of monthEnum enum Class","lastModifiedDate":"2021-11-14"},{"lineNumber":173,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":174,"author":{"gitId":"WhasabiQ"},"content":"     * @param month String","lastModifiedDate":"2021-11-14"},{"lineNumber":175,"author":{"gitId":"WhasabiQ"},"content":"     * @return int of month","lastModifiedDate":"2021-11-14"},{"lineNumber":176,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":177,"author":{"gitId":"WhasabiQ"},"content":"    public static int convertMonth(String month){","lastModifiedDate":"2021-11-13"},{"lineNumber":178,"author":{"gitId":"WhasabiQ"},"content":"        monthEnum mon \u003d monthEnum.valueOf(month.toUpperCase());","lastModifiedDate":"2021-11-13"},{"lineNumber":179,"author":{"gitId":"WhasabiQ"},"content":"        return mon.getMonthInt();","lastModifiedDate":"2021-11-13"},{"lineNumber":180,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":181,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":182,"author":{"gitId":"WhasabiQ"},"content":"    /** Retrieve the time only","lastModifiedDate":"2021-11-14"},{"lineNumber":183,"author":{"gitId":"WhasabiQ"},"content":"     * from the dateTime String","lastModifiedDate":"2021-11-14"},{"lineNumber":184,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":185,"author":{"gitId":"WhasabiQ"},"content":"     * @param dateTime String","lastModifiedDate":"2021-11-14"},{"lineNumber":186,"author":{"gitId":"WhasabiQ"},"content":"     * @return String","lastModifiedDate":"2021-11-14"},{"lineNumber":187,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":188,"author":{"gitId":"WhasabiQ"},"content":"    public static String getTime(String dateTime){","lastModifiedDate":"2021-11-13"},{"lineNumber":189,"author":{"gitId":"WhasabiQ"},"content":"        String[] str \u003d dateTime.split(\"\\\\W\");","lastModifiedDate":"2021-11-13"},{"lineNumber":190,"author":{"gitId":"WhasabiQ"},"content":"        String returnStr \u003d \"\";","lastModifiedDate":"2021-11-13"},{"lineNumber":191,"author":{"gitId":"WhasabiQ"},"content":"        int index \u003d 3;","lastModifiedDate":"2021-11-13"},{"lineNumber":192,"author":{"gitId":"WhasabiQ"},"content":"        if(str[0].isEmpty() || str[0].toLowerCase().startsWith(\"at\") || str[0].toLowerCase().startsWith(\"by\")) index ++;","lastModifiedDate":"2021-11-14"},{"lineNumber":193,"author":{"gitId":"WhasabiQ"},"content":"        for (int i \u003d index; i \u003c str.length;i++){","lastModifiedDate":"2021-11-13"},{"lineNumber":194,"author":{"gitId":"WhasabiQ"},"content":"            returnStr +\u003d str[i];","lastModifiedDate":"2021-11-13"},{"lineNumber":195,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":196,"author":{"gitId":"WhasabiQ"},"content":"        return returnStr;","lastModifiedDate":"2021-11-13"},{"lineNumber":197,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":198,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":198}},{"path":"src/main/java/dukeMain/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.Task;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import java.io.File;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.*;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"/** Handles loading dukeMain.tasks from the file and","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":" * saving dukeMain.tasks in the file","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":" * */","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"public class Storage {","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    private static String filePath;","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"data.txt\";","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    public final Path path;","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    public static final String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"    public Storage(){","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"        filePath \u003d DEFAULT_STORAGE_FILEPATH;","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"        path \u003d Paths.get(home, filePath);","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"    /**Constructor of Storage","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * To initialise the filepath given.","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"     * @param filePath String","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if IOException is detected when creating directories or file","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException, DukeException{","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"        path \u003d Paths.get(home, filePath);","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"            throw new InvalidStorageFilePathException(\"dukeMain.Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"        //check if file exist","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"        isPathExist();","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"    /**Create a File object with the filepath given.","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"     * @return File","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"    public static File load() {","lastModifiedDate":"2021-11-13"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"        return  new File(home+\"/\"+filePath); // create a File for the given file path","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"WhasabiQ"},"content":"    /** Check if the given path ends with .txt","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"WhasabiQ"},"content":"     * @param filePath Path","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"WhasabiQ"},"content":"     * @return boolean","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"WhasabiQ"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"WhasabiQ"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"WhasabiQ"},"content":"    /** Initiate to Save the Tasklist","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"WhasabiQ"},"content":"     * into the filepath","lastModifiedDate":"2021-11-14"},{"lineNumber":71,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":72,"author":{"gitId":"WhasabiQ"},"content":"     * @param tkL TaskList","lastModifiedDate":"2021-11-14"},{"lineNumber":73,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException","lastModifiedDate":"2021-11-14"},{"lineNumber":74,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":75,"author":{"gitId":"WhasabiQ"},"content":"    public static void save(TaskList tkL) throws DukeException{","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"WhasabiQ"},"content":"        System.out.println(\"Entered Save\");","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"WhasabiQ"},"content":"        // start saving task","lastModifiedDate":"2021-11-13"},{"lineNumber":78,"author":{"gitId":"WhasabiQ"},"content":"        String content \u003d \"\";","lastModifiedDate":"2021-11-13"},{"lineNumber":79,"author":{"gitId":"WhasabiQ"},"content":"        for (Task tk : tkL.getTaskList())","lastModifiedDate":"2021-11-13"},{"lineNumber":80,"author":{"gitId":"WhasabiQ"},"content":"            content +\u003d tk.toStringSaveTask(\"|\") + System.lineSeparator();","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"WhasabiQ"},"content":"        try{","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"WhasabiQ"},"content":"            writeToFile(home+\"/\"+filePath+\"\",content);","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"WhasabiQ"},"content":"        }catch(IOException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"WhasabiQ"},"content":"            throw new DukeException(\"Something is wrong when Saving the taskList. Please Try Again later\");","lastModifiedDate":"2021-11-14"},{"lineNumber":85,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":86,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":87,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"WhasabiQ"},"content":"    /** Write the contents into filepath","lastModifiedDate":"2021-11-14"},{"lineNumber":89,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":90,"author":{"gitId":"WhasabiQ"},"content":"     * @param filePath String","lastModifiedDate":"2021-11-14"},{"lineNumber":91,"author":{"gitId":"WhasabiQ"},"content":"     * @param textToAdd String","lastModifiedDate":"2021-11-14"},{"lineNumber":92,"author":{"gitId":"WhasabiQ"},"content":"     * @throws IOException if there is any issues with writing or accessing the file","lastModifiedDate":"2021-11-14"},{"lineNumber":93,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":94,"author":{"gitId":"WhasabiQ"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-11-13"},{"lineNumber":95,"author":{"gitId":"WhasabiQ"},"content":"        System.out.println(\"Entered Write\");","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"WhasabiQ"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-11-13"},{"lineNumber":97,"author":{"gitId":"WhasabiQ"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"WhasabiQ"},"content":"        fw.close();","lastModifiedDate":"2021-11-13"},{"lineNumber":99,"author":{"gitId":"WhasabiQ"},"content":"        System.out.println(\"Exit Write\");","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"WhasabiQ"},"content":"    /** Check if the file path given exist in the directory,","lastModifiedDate":"2021-11-14"},{"lineNumber":103,"author":{"gitId":"WhasabiQ"},"content":"     * else create new directories and/or file","lastModifiedDate":"2021-11-14"},{"lineNumber":104,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"WhasabiQ"},"content":"     * @throws IOException if there is any issues with writing or accessing the file","lastModifiedDate":"2021-11-14"},{"lineNumber":106,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":107,"author":{"gitId":"WhasabiQ"},"content":"    private void isPathExist() throws DukeException{","lastModifiedDate":"2021-11-14"},{"lineNumber":108,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"WhasabiQ"},"content":"        Path path \u003d Paths.get(home, filePath);","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":111,"author":{"gitId":"WhasabiQ"},"content":"        // check if the directory and file exists","lastModifiedDate":"2021-11-13"},{"lineNumber":112,"author":{"gitId":"WhasabiQ"},"content":"        boolean directoryFullExists \u003d Files.exists(path);","lastModifiedDate":"2021-11-13"},{"lineNumber":113,"author":{"gitId":"WhasabiQ"},"content":"        if (!directoryFullExists) {","lastModifiedDate":"2021-11-13"},{"lineNumber":114,"author":{"gitId":"WhasabiQ"},"content":"            createDirectories(home,path);","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"WhasabiQ"},"content":"            createFile(home,path);","lastModifiedDate":"2021-11-13"},{"lineNumber":116,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":117,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":118,"author":{"gitId":"WhasabiQ"},"content":"    /** Create Directories if it does not exist","lastModifiedDate":"2021-11-14"},{"lineNumber":119,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":120,"author":{"gitId":"WhasabiQ"},"content":"     * @throws IOException if there is any issues with writing or accessing the file","lastModifiedDate":"2021-11-14"},{"lineNumber":121,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":122,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"WhasabiQ"},"content":"    private static void createDirectories(String home, Path path) throws DukeException{","lastModifiedDate":"2021-11-14"},{"lineNumber":124,"author":{"gitId":"WhasabiQ"},"content":"        boolean directoryExists;","lastModifiedDate":"2021-11-13"},{"lineNumber":125,"author":{"gitId":"WhasabiQ"},"content":"        Path changePath;","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"WhasabiQ"},"content":"        if (path.getNameCount() \u003e 1) {","lastModifiedDate":"2021-11-13"},{"lineNumber":128,"author":{"gitId":"WhasabiQ"},"content":"            for (int i \u003d 1; i \u003c path.getNameCount(); i++){","lastModifiedDate":"2021-11-13"},{"lineNumber":129,"author":{"gitId":"WhasabiQ"},"content":"                changePath \u003d Paths.get(path.subpath(0,i).toString());","lastModifiedDate":"2021-11-13"},{"lineNumber":130,"author":{"gitId":"WhasabiQ"},"content":"                directoryExists \u003d Files.exists(changePath);","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":132,"author":{"gitId":"WhasabiQ"},"content":"                if(!directoryExists){","lastModifiedDate":"2021-11-13"},{"lineNumber":133,"author":{"gitId":"WhasabiQ"},"content":"                    try{","lastModifiedDate":"2021-11-13"},{"lineNumber":134,"author":{"gitId":"WhasabiQ"},"content":"                        Files.createDirectory(Paths.get(changePath.toString()));","lastModifiedDate":"2021-11-13"},{"lineNumber":135,"author":{"gitId":"WhasabiQ"},"content":"                    }catch (IOException e)","lastModifiedDate":"2021-11-13"},{"lineNumber":136,"author":{"gitId":"WhasabiQ"},"content":"                    {","lastModifiedDate":"2021-11-13"},{"lineNumber":137,"author":{"gitId":"WhasabiQ"},"content":"                        // save task","lastModifiedDate":"2021-11-13"},{"lineNumber":138,"author":{"gitId":"WhasabiQ"},"content":"                        throw new DukeException(\"Something is wrong when creating Directory for path\\n\" + changePath);","lastModifiedDate":"2021-11-14"},{"lineNumber":139,"author":{"gitId":"WhasabiQ"},"content":"                    }","lastModifiedDate":"2021-11-13"},{"lineNumber":140,"author":{"gitId":"WhasabiQ"},"content":"                }","lastModifiedDate":"2021-11-13"},{"lineNumber":141,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":142,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":143,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":144,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":145,"author":{"gitId":"WhasabiQ"},"content":"    /** Create Directories if it does not exist","lastModifiedDate":"2021-11-14"},{"lineNumber":146,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":147,"author":{"gitId":"WhasabiQ"},"content":"     * @throws IOException if there is any issues with writing or accessing the file","lastModifiedDate":"2021-11-14"},{"lineNumber":148,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":149,"author":{"gitId":"WhasabiQ"},"content":"    // Create File in the path given","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"WhasabiQ"},"content":"    private static void createFile(String home, Path path) throws DukeException{","lastModifiedDate":"2021-11-14"},{"lineNumber":151,"author":{"gitId":"WhasabiQ"},"content":"        // create txt file","lastModifiedDate":"2021-11-13"},{"lineNumber":152,"author":{"gitId":"WhasabiQ"},"content":"        try{","lastModifiedDate":"2021-11-13"},{"lineNumber":153,"author":{"gitId":"WhasabiQ"},"content":"//            ui.printThis(\"File path exist : \" + path,3);","lastModifiedDate":"2021-11-13"},{"lineNumber":154,"author":{"gitId":"WhasabiQ"},"content":"            Files.createFile(Paths.get(home,path.toString()));","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"WhasabiQ"},"content":"        }catch (IOException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":156,"author":{"gitId":"WhasabiQ"},"content":"//            ui.printThis(\"Caught error\",3);","lastModifiedDate":"2021-11-13"},{"lineNumber":157,"author":{"gitId":"WhasabiQ"},"content":"            throw new DukeException(\"There seems to be error creating the File located : \"+ getFilePath());","lastModifiedDate":"2021-11-14"},{"lineNumber":158,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":159,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":160,"author":{"gitId":"WhasabiQ"},"content":"    /** Getter for FilePath","lastModifiedDate":"2021-11-14"},{"lineNumber":161,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":162,"author":{"gitId":"WhasabiQ"},"content":"     * @return Filepath String","lastModifiedDate":"2021-11-14"},{"lineNumber":163,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":164,"author":{"gitId":"WhasabiQ"},"content":"    public static String getFilePath(){","lastModifiedDate":"2021-11-14"},{"lineNumber":165,"author":{"gitId":"WhasabiQ"},"content":"        return home + \"/\"+filePath;","lastModifiedDate":"2021-11-14"},{"lineNumber":166,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":167,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":167}},{"path":"src/main/java/dukeMain/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.Task;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"/** Interacts with the users by","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":" * reading their command and displaying the content to the user.","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * Where the programmes start to run.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" * */","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"public class Ui {","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    public final static String lineBreak \u003d \"---------------------------------------------------------\";","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    private String logo \u003d","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"            \"  _       _ _      _ _______________________________________ \\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"            + \" | |  _  | | |    | |  __  |        |  __  |  __  |___   ___|\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"            + \" | | | | | | |----| | |__| |  ------| |__| | |__|/    | |    \\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"            + \" | |_| |_| | |----| | |  | |------  | |  | | |__|\\\\ ___| |___\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"            + \" |_________|_|    |_|_|  |_|________|_|  |_|______|_________|\\n\";","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    public Ui() {","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"     * Read Command from users","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"    public String readCommand(){","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"        return s.nextLine();","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * Print loading Error Message","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    public static void showLoadingError(){","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"        printThis(\"There seems to be some issue loading your file.\\n We have create a new file name : data.txt \",3);","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"     * Print invalid Storage Error","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"    public static void showInvalidStorageError(){","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"        printThis(\"Storage file should end with \u0027.txt\u0027\",3);","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"     * Print String values given from st. In different styles as follows :","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"     *     // 1 \u003d Linebreak above","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"     *     // 2 \u003d Linebreak below","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"     *     // 3 \u003d Linebreak above and below","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"     *     // 0 \u003d no linebreak","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"     * @param st String","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"     * @param style int","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"    public static void printThis(String st, int style) {","lastModifiedDate":"2021-11-13"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"        if (style \u003d\u003d 1) System.out.println(lineBreak + \"\\n\" + st);","lastModifiedDate":"2021-11-13"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"        else if (style \u003d\u003d 2) System.out.println(st + \"\\n\" + lineBreak);","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"        else if (style \u003d\u003d 3) System.out.println(lineBreak + \"\\n\" + st + \"\\n\" + lineBreak);","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"WhasabiQ"},"content":"        else System.out.println(st);","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"WhasabiQ"},"content":"     * Print lineBreak ------------------------------","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":65,"author":{"gitId":"WhasabiQ"},"content":"    public void showLine() {","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"WhasabiQ"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":68,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":69,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"WhasabiQ"},"content":"     * Print Welcome Message","lastModifiedDate":"2021-11-14"},{"lineNumber":71,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":72,"author":{"gitId":"WhasabiQ"},"content":"    public void showWelcome(){","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"WhasabiQ"},"content":"        printThis(\"Hello from\\n\" + logo , 0);","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"WhasabiQ"},"content":"        printThis(\"What can do for you?\",0);","lastModifiedDate":"2021-11-13"},{"lineNumber":75,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":76,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"WhasabiQ"},"content":"     * print exit Message","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"WhasabiQ"},"content":"    public void showExitMessage(){","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"WhasabiQ"},"content":"        printThis(\"Bye. Hope to see you again soon!\",0);","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":85,"author":{"gitId":"WhasabiQ"},"content":"     * Print Error Message","lastModifiedDate":"2021-11-14"},{"lineNumber":86,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":87,"author":{"gitId":"WhasabiQ"},"content":"     * @param message String","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":89,"author":{"gitId":"WhasabiQ"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"WhasabiQ"},"content":"        System.out.println(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":94,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":95,"author":{"gitId":"WhasabiQ"},"content":"     * Print Message","lastModifiedDate":"2021-11-14"},{"lineNumber":96,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":97,"author":{"gitId":"WhasabiQ"},"content":"     * @param text String","lastModifiedDate":"2021-11-14"},{"lineNumber":98,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":99,"author":{"gitId":"WhasabiQ"},"content":"    public void print(String text){","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"WhasabiQ"},"content":"        System.out.println(text);","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":103,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":104,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"WhasabiQ"},"content":"     * Print TaskList","lastModifiedDate":"2021-11-14"},{"lineNumber":106,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":107,"author":{"gitId":"WhasabiQ"},"content":"     * @param list ArrayList\u003cTask\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":108,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":109,"author":{"gitId":"WhasabiQ"},"content":"    public void printList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"WhasabiQ"},"content":"        for (Task tk : list)","lastModifiedDate":"2021-11-13"},{"lineNumber":111,"author":{"gitId":"WhasabiQ"},"content":"            print((list.indexOf(tk)+1)+\") \"+tk.toString());","lastModifiedDate":"2021-11-13"},{"lineNumber":112,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":113,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":113}},{"path":"src/main/java/dukeMain/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents an Add Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" * the 3 different types of Tasks to be added to the task.","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":" * It can be represented by a String \u0027Command\u0027 and String Array \u0027arguments\u0027","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":" * e.g, \u003ccode\u003e\u0027event\u0027, {\u0027test\u0027,event\u0027,\u002723/12/2021\u0027}\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD_1 \u003d \"todo\";","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD_2 \u003d \"deadline\";","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD_3 \u003d \"event\";","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD_SHORT_1 \u003d \"T\";","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD_SHORT_2 \u003d \"D\";","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD_SHORT_3 \u003d \"E\";","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    private static String[] arguments;","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD_1","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"            + \": Add a To Do Task into Task List\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD_1+\" Description\" + \"\\n\\n\" +","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"            COMMAND_WORD_2","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"            + \": Add a Task with Deadline into Task List\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD_2+\" Description / DD.MM.YYYY\" + \"\\n\" +","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"            COMMAND_WORD_3","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"            + \": Add a Event into Task List\\n\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD_3+\" Description / DD.MM.YYYY\\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"            + \"Note Please do not use / to differential DD/MM/YYYY\";","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public AddCommand(String command, String[] arguments){","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        super(command);","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"     * Calls addTask from the taskList param","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException If task is not being added due to certain reasons.","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2021-11-13"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-13"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"        tasks.addTask(getCommand(),arguments,false);","lastModifiedDate":"2021-11-14"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"        ui.print(\"Your Task : \");","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"        ui.print(tasks.getTask(tasks.getTaskList().size()-1).toString());","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"        ui.print(\"Is Added to the list. Now you have \"+tasks.getTaskList().size() +\" Tasks in the list\");","lastModifiedDate":"2021-11-14"},{"lineNumber":59,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":60}},{"path":"src/main/java/dukeMain/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents a Command being called by the users. A \u003ccode\u003eCommand\u003c/code\u003e object","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * is the Parent class for all the types of Command.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" * It can be represented by a String \u0027Command\u0027 and boolean type \u0027exit\u0027 which is by default false.","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":" * It will be called by it child classes where command will be included.","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"public class Command {","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    private String command;","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    private boolean exit;","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"    public Command(String command){","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"        exit \u003d false;","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    protected Command() {","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"    public String toString() {","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"        return \"dukeMain.commands.Command{\" +","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"                \"userCommand\u003d\u0027\" + command + \u0027\\\u0027\u0027 +","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"                \u0027}\u0027;","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    public String getCommand(){","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"        return command;","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"    public void setCommand(String command){","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"        return exit;","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"    public void setExit(boolean exit){","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":48}},{"path":"src/main/java/dukeMain/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents a Delete Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to the index (Integer) given by the users.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":" * e.g, \u003ccode\u003e1\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    private static int index;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete a task from the List\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public DeleteCommand(int index){","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * Calls delete from the storage param","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if IndexOutOfBoundsException occurs.","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"        try{","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(\"The Task :\");","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(tasks.deleteTask(index).toString());","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(\"Is removed from the list. There are currently \"+ tasks.getTaskList().size() + \" Tasks left in the list\");","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"        }catch(IndexOutOfBoundsException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"            throw new DukeException(\"Failed to delete task !!! Please follow the below example\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":46}},{"path":"src/main/java/dukeMain/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents a Done Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to the index (Integer) given by the users.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":" * e.g, \u003ccode\u003e1\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    public static int index;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public DoneCommand(int index){","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * Calls markTask from the tasks param","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if IndexOutOfBoundsException occurs.","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"        try{","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"            tasks.markTask(index);","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(\"Your Task :\");","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(tasks.getTask(index-1).toString());","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(\"Is marked as completed\");","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"        }catch(IndexOutOfBoundsException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"            throw new DukeException(\"Failed to add task !!! Here is the list of task you may add\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":47}},{"path":"src/main/java/dukeMain/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":" * Represents a Exit Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eExitCommand\u003c/code\u003e object contains the COMMAND_WORD and MESSAGE_USAGE.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" *","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"            + \": Displays all Task as a list with index numbers.\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     * Set the variable \u0027exit\u0027 to true in parent class.","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     * Thereafter print the exit message from ui Class.","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"        super.setExit(true);","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"        ui.showExitMessage();","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":34}},{"path":"src/main/java/dukeMain/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-14"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.Task;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"            + \": Displays all Task that matches the description.\\n\"","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD + \" read\";","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"    private static String description;","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    public FindCommand (String description){","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"     * Calls printList from the ui class","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"     * and find the tasks that matches the description.","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"        ArrayList\u003cTask\u003e tkl \u003d tasks.findList(description);","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        if(tkl.size() !\u003d 0){","lastModifiedDate":"2021-11-14"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"            String isOrAre \u003d (tkl.size() \u003e 1) ? \"are\" : \"is\";","lastModifiedDate":"2021-11-14"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(\"We have found \" + tkl.size() + \" number of Task matching your description\\n Here \"+isOrAre+\" the list\");","lastModifiedDate":"2021-11-14"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"            ui.printList(tkl);","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"        }else{","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"            ui.print(\"There is not Task matching your description. Please try again with the full command.\");","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-14"}],"authorContributionMap":{"WhasabiQ":46}},{"path":"src/main/java/dukeMain/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents a Help Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eHelpCommand\u003c/code\u003e object contains the COMMAND_WORD and MESSAGE_USAGE.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"     * Calls showError from the ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     * It also calls all the other Commands\u0027","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     * MESSAGE_USAGE to print all the examples.","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if IndexOutOfBoundsException occurs.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"        ui.showError(","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"                AddCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + SaveCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + DoneCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-14"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"                        + \"\\n\" + ExitCommand.MESSAGE_USAGE","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"        );","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":42}},{"path":"src/main/java/dukeMain/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents an Incorrect Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eIncorrectCommand\u003c/code\u003e object contains the COMMAND_WORD and MESSAGE_USAGE.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" *e.g \u003ccode\u003e\"This is an incorrect command. Please try again.\"\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    private String errormessage;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    public IncorrectCommand(String errormessage){","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"        this.errormessage \u003d errormessage;","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     * Calls showError from the ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"        ui.showError(errormessage);","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":33}},{"path":"src/main/java/dukeMain/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":" * Represents a List Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eListCommand\u003c/code\u003e object contains the COMMAND_WORD and MESSAGE_USAGE.","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"            + \": Displays all Task as a list with index numbers.\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"     * Calls printList from the ui class","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"     * and getTaskList from tasks.","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"       ui.printList(tasks.getTaskList());","lastModifiedDate":"2021-11-13"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":32}},{"path":"src/main/java/dukeMain/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.commands;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Storage;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.DukeException;","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.tasks.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * Represents a Save Command being called by the users which is extended to Command class.","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" * A \u003ccode\u003eSaveCommand\u003c/code\u003e object have 2 variable which are the Command_word and Message_usage.","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":" * It also includes a method \u0027execute\u0027 which overrides the parent class method.","lastModifiedDate":"2021-11-14"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"public class SaveCommand extends Command{","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    public static final String COMMAND_WORD \u003d \"save\";","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD +","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"            \": Save all tasks into a text file\\n\"","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s execute.","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     * Calls save from the storage param","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     * Print FilePath to help user to locate it.","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     * @param tasks TaskList class.","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"     * @param ui Ui class.","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"     * @param storage Storage class.","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"        // this is implemented by child class.","lastModifiedDate":"2021-11-13"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-11-13"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"        ui.print(\"Your Task have been saved in the file located in \" + storage.getFilePath());","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":34}},{"path":"src/main/java/dukeMain/common/month/monthEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.common.month;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":" * Represents all the months in both the full form and short form in this enum class.","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":" * A constructor is included in this class to allow easier conversion of the months","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":" * into Integer. By mapping all the months to a integer value ranging from 1 to 12.","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":" * e.g \u003ccode\u003eJANUARY(1)\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"public enum monthEnum {","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"    JANUARY(1), FEBRUARY(2), MARCH(3),","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"    APRIL(4),MAY(5),JUNE(6),","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"    JULY(7), AUGUST(8), SEPTEMBER(9),","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    OCTOBER(10),  NOVEMBER(11), DECEMBER(12),","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    JAN(1),FEB(2),MAR(3),","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    APR(4),JUN(6),","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    JUL(7),AUG(8),SEP(9),","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    OCT(10),NOV(11),DEC(12);","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"    private final int monthInt;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"    /** Constructor monthEnum.","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     * To map enum of month to an integer value","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     * @params int monthInt","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    monthEnum(int monthInt) {","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"        this.monthInt \u003d monthInt;","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"    /** Return the integer form of the month based on the enum indicated.","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     * @return int monthInt","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"    public int getMonthInt() {","lastModifiedDate":"2021-11-13"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"        return this.monthInt;","lastModifiedDate":"2021-11-13"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":36}},{"path":"src/main/java/dukeMain/exceptions/DeadlineBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class DeadlineBodyException extends DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"    public DeadlineBodyException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":8}},{"path":"src/main/java/dukeMain/exceptions/DeadlineByException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class DeadlineByException extends DukeException{","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    public DeadlineByException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":7}},{"path":"src/main/java/dukeMain/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"    public DukeException(){","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"        super();","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":13}},{"path":"src/main/java/dukeMain/exceptions/EventAtException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class EventAtException extends DukeException{","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    public EventAtException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":7}},{"path":"src/main/java/dukeMain/exceptions/EventBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class EventBodyException extends DukeException{","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    public EventBodyException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":7}},{"path":"src/main/java/dukeMain/exceptions/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":10}},{"path":"src/main/java/dukeMain/exceptions/InvalidStorageFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class InvalidStorageFilePathException extends IllegalValueException{","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":7}},{"path":"src/main/java/dukeMain/exceptions/ToDosBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.exceptions;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"public class ToDosBodyException extends DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"    //no other code needed","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"    public ToDosBodyException(String message) {","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"        super(message);","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":8}},{"path":"src/main/java/dukeMain/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.tasks;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":" * Represents a child of Task. A \u003ccode\u003eDeadline\u003c/code\u003e object includes","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":" * Localdate byDate and String byTime.","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" * e.g., \u003ccode\u003e\"This is an Deadline Task\",23-10-2019,2300hrs\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    protected String byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    public Deadline(String description, LocalDate byDate , String byTime) {","lastModifiedDate":"2021-11-13"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"        super(description);","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public Deadline(boolean done,String description, LocalDate byDate , String byTime) {","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        super(description,done);","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s toString.","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     * adding the \"[D]\" in front of the description","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * Also include LocalDate formatted in \"MMM d yyyy\" and","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     * time in the given string format.","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        String time \u003d byTime.equals(\"\") ? byTime : \" \" + byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+time + \")\";","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s toString.","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"     * To format the Deadline tasks into a string format in the preferred separator.","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"     * Used for Saving purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"     * @param separator String","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"    public String toStringSaveTask(String separator ){","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"        separator \u003d \" \" + separator + \" \";","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"        return \"D\" + separator + super.toStringSaveTask(separator) + separator +this.byDate + separator + byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"WhasabiQ":53}},{"path":"src/main/java/dukeMain/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.tasks;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":" * Represents a child of Task. A \u003ccode\u003eEvent\u003c/code\u003e object includes","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":" * Localdate byDate and String byTime.","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":" * e.g., \u003ccode\u003e\"This is an Event Task\",23-10-2019,2300hrs\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"public class Event extends Task {","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"    protected String byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    public Event(String description, LocalDate byDate , String byTime) {","lastModifiedDate":"2021-11-13"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"        super(description);","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    public Event(boolean done,String description, LocalDate byDate , String byTime) {","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"        super(description,done);","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s toString.","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * adding the \"[E]\" in front of the description","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     * Also include LocalDate formatted in \"MMM d yyyy\" and","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * time in the given string format.","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"        String time \u003d byTime.equals(\"\") ? byTime : \" \" + byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+time + \")\";","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s toString.","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"     * To format the Event tasks into a string format in the preferred separator.","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"     * Used for Saving purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"     * @param separator String","lastModifiedDate":"2021-11-14"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"    public String toStringSaveTask(String separator ){","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"        separator \u003d \" \" + separator + \" \";","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"        return \"E\" + separator + super.toStringSaveTask(separator) +  separator +this.byDate + separator + byTime;","lastModifiedDate":"2021-11-13"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"WhasabiQ":53}},{"path":"src/main/java/dukeMain/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.tasks;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":" * Represents Task used in a TaskList. A \u003ccode\u003eTask\u003c/code\u003e object includes","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":" * String description and boolean done","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":" * e.g., \u003ccode\u003e\"This is an Event Task\"\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"public class Task {","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"    private String description;","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"    private boolean done;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    public Task(String item) {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"        this.description \u003d item;","lastModifiedDate":"2021-11-14"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    public Task(String description,boolean done){","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"    /**Setter for done variable","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"     * default true;","lastModifiedDate":"2021-11-14"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    public void setDone() {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"        if (this.done){","lastModifiedDate":"2021-11-14"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"            this.done \u003d false;","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"        } else{","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"            this.done \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"    /**Getter for done variable","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     * @return done boolean","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        return this.done;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"    /** Convert variable done to string value for printing purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"     * @return X or \" \" depending on variable done","lastModifiedDate":"2021-11-14"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"        return (this.done ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"    /** Convert variable done to string value for saving purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"     * @return 1 or 0 depending on variable done","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"    public String getStatusNum(){","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"        return (this.done? \"1\" : \"0\");","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"    /** Getter for variable description","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"     * @return description String","lastModifiedDate":"2021-11-14"},{"lineNumber":59,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":60,"author":{"gitId":"WhasabiQ"},"content":"    public String getDescription() {","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"WhasabiQ"},"content":"        return this.description;","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":65,"author":{"gitId":"WhasabiQ"},"content":"     * Print the desciprtion together with the string formatted","lastModifiedDate":"2021-11-14"},{"lineNumber":66,"author":{"gitId":"WhasabiQ"},"content":"     * variable done","lastModifiedDate":"2021-11-14"},{"lineNumber":67,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":68,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":69,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"WhasabiQ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"WhasabiQ"},"content":"        return \u0027[\u0027+ getStatusIcon() + \"] \" +","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"WhasabiQ"},"content":"                description;","lastModifiedDate":"2021-11-14"},{"lineNumber":73,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":76,"author":{"gitId":"WhasabiQ"},"content":"     * To format the Event tasks into a string format in the preferred separator.","lastModifiedDate":"2021-11-14"},{"lineNumber":77,"author":{"gitId":"WhasabiQ"},"content":"     * Used for Saving purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":79,"author":{"gitId":"WhasabiQ"},"content":"     * @param separator String","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":81,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":82,"author":{"gitId":"WhasabiQ"},"content":"    public String toStringSaveTask(String separator){","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"WhasabiQ"},"content":"        return getStatusNum() + separator + getDescription();","lastModifiedDate":"2021-11-14"},{"lineNumber":84,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":86,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"WhasabiQ":86}},{"path":"src/main/java/dukeMain/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.tasks;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":"import java.io.File;","lastModifiedDate":"2021-11-13"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.commands.AddCommand;","lastModifiedDate":"2021-11-14"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.exceptions.*;","lastModifiedDate":"2021-11-13"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"import dukeMain.Parser;","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":" * Represents List of Task. A \u003ccode\u003eTasklist\u003c/code\u003e object includes","lastModifiedDate":"2021-11-14"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":" * An ArrayList of task","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":" * e.g., \u003ccode\u003e\"This is an Event Task\"\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"// contains the task list","lastModifiedDate":"2021-11-13"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"// e.g., it has operations to add/delete dukeMain.tasks in the list","lastModifiedDate":"2021-11-13"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"public class TaskList {","lastModifiedDate":"2021-11-13"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    public static Ui ui;","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    public static Parser parser;","lastModifiedDate":"2021-11-13"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"    private static ArrayList\u003cTask\u003e taskListing \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-13"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"    public TaskList() {","lastModifiedDate":"2021-11-13"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"        //create storage file;","lastModifiedDate":"2021-11-13"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"    /** Constructor of TaskList","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     * to retrieve all the task from the txt file given","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * @param f File","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if file is not found","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public TaskList(File f) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        //parse the String from the text file then use it to inside into the DB","lastModifiedDate":"2021-11-13"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"        try{","lastModifiedDate":"2021-11-13"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"            Scanner scan \u003d new Scanner(f);","lastModifiedDate":"2021-11-13"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":41,"author":{"gitId":"WhasabiQ"},"content":"            while(scan.hasNextLine()){","lastModifiedDate":"2021-11-13"},{"lineNumber":42,"author":{"gitId":"WhasabiQ"},"content":"                addFileTask(Parser.parseFileLine(scan.nextLine()));","lastModifiedDate":"2021-11-13"},{"lineNumber":43,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":44,"author":{"gitId":"WhasabiQ"},"content":"        }catch(FileNotFoundException e){","lastModifiedDate":"2021-11-13"},{"lineNumber":45,"author":{"gitId":"WhasabiQ"},"content":"            throw new DukeException(\"File is not Found please, make sure you entered the correct path\");","lastModifiedDate":"2021-11-13"},{"lineNumber":46,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":47,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":48,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":50,"author":{"gitId":"WhasabiQ"},"content":"    /** Add task depending on the task type given.","lastModifiedDate":"2021-11-14"},{"lineNumber":51,"author":{"gitId":"WhasabiQ"},"content":"     * Also Handles adding of task from the source file","lastModifiedDate":"2021-11-14"},{"lineNumber":52,"author":{"gitId":"WhasabiQ"},"content":"     * For type","lastModifiedDate":"2021-11-14"},{"lineNumber":53,"author":{"gitId":"WhasabiQ"},"content":"     * - Todos : Checks if description is there else throw ToDosBodyException","lastModifiedDate":"2021-11-14"},{"lineNumber":54,"author":{"gitId":"WhasabiQ"},"content":"     * - Deadline : Check if description is there else throw DeadlineBodyException.","lastModifiedDate":"2021-11-14"},{"lineNumber":55,"author":{"gitId":"WhasabiQ"},"content":"     *              Also Checks if date/time is given else throw DeadlineByException.","lastModifiedDate":"2021-11-14"},{"lineNumber":56,"author":{"gitId":"WhasabiQ"},"content":"     * - Event : Check if description is there else throw EventBodyException.","lastModifiedDate":"2021-11-14"},{"lineNumber":57,"author":{"gitId":"WhasabiQ"},"content":"     *           Also Checks if date/time is given else throw EventAtException.","lastModifiedDate":"2021-11-14"},{"lineNumber":58,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":59,"author":{"gitId":"WhasabiQ"},"content":"     * @param command String Also known as the type of task","lastModifiedDate":"2021-11-14"},{"lineNumber":60,"author":{"gitId":"WhasabiQ"},"content":"     * @param args String[]","lastModifiedDate":"2021-11-14"},{"lineNumber":61,"author":{"gitId":"WhasabiQ"},"content":"     * @param isFile  boolean","lastModifiedDate":"2021-11-14"},{"lineNumber":62,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if error while adding task since all classes is child of Dukeexception.","lastModifiedDate":"2021-11-14"},{"lineNumber":63,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":64,"author":{"gitId":"WhasabiQ"},"content":"    public static void addTask(String command,String[] args,boolean isFile) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":65,"author":{"gitId":"WhasabiQ"},"content":"        LocalDate lDate;","lastModifiedDate":"2021-11-13"},{"lineNumber":66,"author":{"gitId":"WhasabiQ"},"content":"        String time;","lastModifiedDate":"2021-11-13"},{"lineNumber":67,"author":{"gitId":"WhasabiQ"},"content":"        if(command.equalsIgnoreCase(AddCommand.COMMAND_WORD_1) || command.equalsIgnoreCase(AddCommand.COMMAND_WORD_SHORT_1))","lastModifiedDate":"2021-11-14"},{"lineNumber":68,"author":{"gitId":"WhasabiQ"},"content":"        {","lastModifiedDate":"2021-11-13"},{"lineNumber":69,"author":{"gitId":"WhasabiQ"},"content":"            if ((isFile \u0026\u0026 (args.length !\u003d 2 || args[1].isEmpty())) || (!isFile \u0026\u0026 (args.length !\u003d 1 || args[0].isEmpty()))){","lastModifiedDate":"2021-11-14"},{"lineNumber":70,"author":{"gitId":"WhasabiQ"},"content":"                throw new ToDosBodyException(\"OOPS!!! The description of a todo cannot be empty\");","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":72,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":73,"author":{"gitId":"WhasabiQ"},"content":"            if (isFile) taskListing.add(new ToDos(Boolean.getBoolean(args[0]), args[1]));","lastModifiedDate":"2021-11-13"},{"lineNumber":74,"author":{"gitId":"WhasabiQ"},"content":"            else taskListing.add(new ToDos(args[0]));","lastModifiedDate":"2021-11-13"},{"lineNumber":75,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":76,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":77,"author":{"gitId":"WhasabiQ"},"content":"        else if(command.equalsIgnoreCase(AddCommand.COMMAND_WORD_2) || command.equalsIgnoreCase(AddCommand.COMMAND_WORD_SHORT_2))","lastModifiedDate":"2021-11-14"},{"lineNumber":78,"author":{"gitId":"WhasabiQ"},"content":"        {","lastModifiedDate":"2021-11-13"},{"lineNumber":79,"author":{"gitId":"WhasabiQ"},"content":"            if((!isFile \u0026\u0026 (args.length \u003d\u003d 0 || args[0].isEmpty())) || (isFile \u0026\u0026 (args.length \u003d\u003d 1 || args[1].isEmpty())))","lastModifiedDate":"2021-11-14"},{"lineNumber":80,"author":{"gitId":"WhasabiQ"},"content":"                throw new DeadlineBodyException(\"OOPS!!! The description of a dukeMain.tasks.Deadline cannot be empty\");","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"WhasabiQ"},"content":"            if((!isFile \u0026\u0026 (args.length \u003d\u003d 1 || args[1].isEmpty())) || (isFile \u0026\u0026 (args.length \u003d\u003d 2 || args[2].isEmpty())))","lastModifiedDate":"2021-11-14"},{"lineNumber":82,"author":{"gitId":"WhasabiQ"},"content":"                throw new DeadlineByException(\"OOPS!!! When is the dukeMain.tasks.Deadline ?\");","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":84,"author":{"gitId":"WhasabiQ"},"content":"            if (isFile) {","lastModifiedDate":"2021-11-13"},{"lineNumber":85,"author":{"gitId":"WhasabiQ"},"content":"                lDate \u003d parser.parseLDT(args[2]);","lastModifiedDate":"2021-11-13"},{"lineNumber":86,"author":{"gitId":"WhasabiQ"},"content":"                time \u003d parser.getTime(args[2]);","lastModifiedDate":"2021-11-13"},{"lineNumber":87,"author":{"gitId":"WhasabiQ"},"content":"                taskListing.add(new Deadline(((args[0].equals(\"0\")) ? false : true), args[1],lDate,time));","lastModifiedDate":"2021-11-14"},{"lineNumber":88,"author":{"gitId":"WhasabiQ"},"content":"            }else{","lastModifiedDate":"2021-11-13"},{"lineNumber":89,"author":{"gitId":"WhasabiQ"},"content":"                lDate \u003d parser.parseLDT(args[1]);","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"WhasabiQ"},"content":"                time \u003d parser.getTime(args[1]);","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"WhasabiQ"},"content":"                taskListing.add(new Deadline(args[0],lDate,time));","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":94,"author":{"gitId":"WhasabiQ"},"content":"        else if(command.equalsIgnoreCase(AddCommand.COMMAND_WORD_3) || command.equalsIgnoreCase(AddCommand.COMMAND_WORD_SHORT_3))","lastModifiedDate":"2021-11-14"},{"lineNumber":95,"author":{"gitId":"WhasabiQ"},"content":"        {","lastModifiedDate":"2021-11-13"},{"lineNumber":96,"author":{"gitId":"WhasabiQ"},"content":"            if((!isFile \u0026\u0026 (args.length \u003d\u003d 0 || args[0].isEmpty())) || (isFile \u0026\u0026 (args.length \u003d\u003d 1 || args[1].isEmpty())))","lastModifiedDate":"2021-11-14"},{"lineNumber":97,"author":{"gitId":"WhasabiQ"},"content":"                throw new EventBodyException(\"OOPS!!! The description of a dukeMain.tasks.Event cannot be empty\");","lastModifiedDate":"2021-11-13"},{"lineNumber":98,"author":{"gitId":"WhasabiQ"},"content":"            if((!isFile \u0026\u0026 (args.length \u003d\u003d 1 || args[1].isEmpty())) || (isFile \u0026\u0026 (args.length \u003d\u003d 2 || args[2].isEmpty())))","lastModifiedDate":"2021-11-14"},{"lineNumber":99,"author":{"gitId":"WhasabiQ"},"content":"                throw new EventAtException(\"OOPS!!! When is the dukeMain.tasks.Event ?\");","lastModifiedDate":"2021-11-13"},{"lineNumber":100,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":101,"author":{"gitId":"WhasabiQ"},"content":"            if (isFile) {","lastModifiedDate":"2021-11-13"},{"lineNumber":102,"author":{"gitId":"WhasabiQ"},"content":"                lDate \u003d parser.parseLDT(args[2]);","lastModifiedDate":"2021-11-13"},{"lineNumber":103,"author":{"gitId":"WhasabiQ"},"content":"                time \u003d parser.getTime(args[2]);","lastModifiedDate":"2021-11-13"},{"lineNumber":104,"author":{"gitId":"WhasabiQ"},"content":"                taskListing.add(new Event(((args[0].equals(\"0\")) ? false : true), args[1],lDate,time));","lastModifiedDate":"2021-11-14"},{"lineNumber":105,"author":{"gitId":"WhasabiQ"},"content":"            }else{","lastModifiedDate":"2021-11-13"},{"lineNumber":106,"author":{"gitId":"WhasabiQ"},"content":"                lDate \u003d parser.parseLDT(args[1]);","lastModifiedDate":"2021-11-13"},{"lineNumber":107,"author":{"gitId":"WhasabiQ"},"content":"                time \u003d parser.getTime(args[1]);","lastModifiedDate":"2021-11-13"},{"lineNumber":108,"author":{"gitId":"WhasabiQ"},"content":"                taskListing.add(new Event(args[0],lDate,time));","lastModifiedDate":"2021-11-13"},{"lineNumber":109,"author":{"gitId":"WhasabiQ"},"content":"            }","lastModifiedDate":"2021-11-13"},{"lineNumber":110,"author":{"gitId":"WhasabiQ"},"content":"        }else{","lastModifiedDate":"2021-11-14"},{"lineNumber":111,"author":{"gitId":"WhasabiQ"},"content":"            throw new DukeException(\"No such Task type Exist\");","lastModifiedDate":"2021-11-14"},{"lineNumber":112,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":113,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":114,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":115,"author":{"gitId":"WhasabiQ"},"content":"    /** Add task directly from file","lastModifiedDate":"2021-11-14"},{"lineNumber":116,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":117,"author":{"gitId":"WhasabiQ"},"content":"     * @param str String[]","lastModifiedDate":"2021-11-14"},{"lineNumber":118,"author":{"gitId":"WhasabiQ"},"content":"     * @throws DukeException if error while adding task.","lastModifiedDate":"2021-11-14"},{"lineNumber":119,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":120,"author":{"gitId":"WhasabiQ"},"content":"    public static void addFileTask(String[] str) throws DukeException {","lastModifiedDate":"2021-11-13"},{"lineNumber":121,"author":{"gitId":"WhasabiQ"},"content":"        String command \u003d str[0];","lastModifiedDate":"2021-11-13"},{"lineNumber":122,"author":{"gitId":"WhasabiQ"},"content":"        String[] str_2 \u003d new String[str.length-1];","lastModifiedDate":"2021-11-13"},{"lineNumber":123,"author":{"gitId":"WhasabiQ"},"content":"        for (int i \u003d 1; i \u003c str.length; i++){","lastModifiedDate":"2021-11-13"},{"lineNumber":124,"author":{"gitId":"WhasabiQ"},"content":"            str_2[i-1] \u003d str[i];","lastModifiedDate":"2021-11-13"},{"lineNumber":125,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-13"},{"lineNumber":126,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":127,"author":{"gitId":"WhasabiQ"},"content":"        addTask(command,str_2,true);","lastModifiedDate":"2021-11-13"},{"lineNumber":128,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":129,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":130,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":131,"author":{"gitId":"WhasabiQ"},"content":"    /** Delete Task from the taskListing","lastModifiedDate":"2021-11-14"},{"lineNumber":132,"author":{"gitId":"WhasabiQ"},"content":"     * Automatically - 1 index position.","lastModifiedDate":"2021-11-14"},{"lineNumber":133,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":134,"author":{"gitId":"WhasabiQ"},"content":"     * @param index int","lastModifiedDate":"2021-11-14"},{"lineNumber":135,"author":{"gitId":"WhasabiQ"},"content":"     * @return Task for printing purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":136,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":137,"author":{"gitId":"WhasabiQ"},"content":"    public static Task deleteTask(int index) {","lastModifiedDate":"2021-11-14"},{"lineNumber":138,"author":{"gitId":"WhasabiQ"},"content":"        Task tk \u003d taskListing.get(index-1);","lastModifiedDate":"2021-11-14"},{"lineNumber":139,"author":{"gitId":"WhasabiQ"},"content":"        taskListing.remove(index - 1 );","lastModifiedDate":"2021-11-13"},{"lineNumber":140,"author":{"gitId":"WhasabiQ"},"content":"        return tk;","lastModifiedDate":"2021-11-14"},{"lineNumber":141,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":142,"author":{"gitId":"WhasabiQ"},"content":"    /** Mark Task from the taskListing","lastModifiedDate":"2021-11-14"},{"lineNumber":143,"author":{"gitId":"WhasabiQ"},"content":"     * Automatically - 1 index position.","lastModifiedDate":"2021-11-14"},{"lineNumber":144,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":145,"author":{"gitId":"WhasabiQ"},"content":"     * @param index int","lastModifiedDate":"2021-11-14"},{"lineNumber":146,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":147,"author":{"gitId":"WhasabiQ"},"content":"    public static void markTask(int index){","lastModifiedDate":"2021-11-13"},{"lineNumber":148,"author":{"gitId":"WhasabiQ"},"content":"        taskListing.get(index-1).setDone();","lastModifiedDate":"2021-11-13"},{"lineNumber":149,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":150,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-13"},{"lineNumber":151,"author":{"gitId":"WhasabiQ"},"content":"    /** Getter of taskList","lastModifiedDate":"2021-11-14"},{"lineNumber":152,"author":{"gitId":"WhasabiQ"},"content":"     * @return taskListing ArrayList\u003cTask\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":153,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":154,"author":{"gitId":"WhasabiQ"},"content":"    public static ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2021-11-13"},{"lineNumber":155,"author":{"gitId":"WhasabiQ"},"content":"        return taskListing;","lastModifiedDate":"2021-11-13"},{"lineNumber":156,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":157,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":158,"author":{"gitId":"WhasabiQ"},"content":"    /** Getter of task from tasklist","lastModifiedDate":"2021-11-14"},{"lineNumber":159,"author":{"gitId":"WhasabiQ"},"content":"     * @return task Task","lastModifiedDate":"2021-11-14"},{"lineNumber":160,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":161,"author":{"gitId":"WhasabiQ"},"content":"    public static Task getTask(int index){","lastModifiedDate":"2021-11-14"},{"lineNumber":162,"author":{"gitId":"WhasabiQ"},"content":"        return taskListing.get(index);","lastModifiedDate":"2021-11-14"},{"lineNumber":163,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":164,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":165,"author":{"gitId":"WhasabiQ"},"content":"    /** Find the list of Task with description that matches the given description","lastModifiedDate":"2021-11-14"},{"lineNumber":166,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":167,"author":{"gitId":"WhasabiQ"},"content":"     * @return ArrayList\u003cTask\u003e of the Task that matches it","lastModifiedDate":"2021-11-14"},{"lineNumber":168,"author":{"gitId":"WhasabiQ"},"content":"     * */","lastModifiedDate":"2021-11-14"},{"lineNumber":169,"author":{"gitId":"WhasabiQ"},"content":"    public static ArrayList\u003cTask\u003e findList(String description){","lastModifiedDate":"2021-11-14"},{"lineNumber":170,"author":{"gitId":"WhasabiQ"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-14"},{"lineNumber":171,"author":{"gitId":"WhasabiQ"},"content":"        for (Task tk : taskListing){","lastModifiedDate":"2021-11-14"},{"lineNumber":172,"author":{"gitId":"WhasabiQ"},"content":"            if (tk.getDescription().contains(description)) taskArrayList.add(tk);","lastModifiedDate":"2021-11-14"},{"lineNumber":173,"author":{"gitId":"WhasabiQ"},"content":"        }","lastModifiedDate":"2021-11-14"},{"lineNumber":174,"author":{"gitId":"WhasabiQ"},"content":"        return taskArrayList;","lastModifiedDate":"2021-11-14"},{"lineNumber":175,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-14"},{"lineNumber":176,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"WhasabiQ":176}},{"path":"src/main/java/dukeMain/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WhasabiQ"},"content":"package dukeMain.tasks;","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"WhasabiQ"},"content":"/**","lastModifiedDate":"2021-11-14"},{"lineNumber":3,"author":{"gitId":"WhasabiQ"},"content":" * Represents a child of Task. A \u003ccode\u003eToDos\u003c/code\u003e object includes","lastModifiedDate":"2021-11-14"},{"lineNumber":4,"author":{"gitId":"WhasabiQ"},"content":" * Localdate byDate and String byTime.","lastModifiedDate":"2021-11-14"},{"lineNumber":5,"author":{"gitId":"WhasabiQ"},"content":" * e.g., \u003ccode\u003e\"this is a ToDos task\"\u003c/code\u003e","lastModifiedDate":"2021-11-14"},{"lineNumber":6,"author":{"gitId":"WhasabiQ"},"content":" */","lastModifiedDate":"2021-11-14"},{"lineNumber":7,"author":{"gitId":"WhasabiQ"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"WhasabiQ"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"WhasabiQ"},"content":"        super(description);","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"WhasabiQ"},"content":"    public ToDos(boolean done, String description){","lastModifiedDate":"2021-11-13"},{"lineNumber":13,"author":{"gitId":"WhasabiQ"},"content":"        super(description,done);","lastModifiedDate":"2021-11-13"},{"lineNumber":14,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-13"},{"lineNumber":15,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s toString.","lastModifiedDate":"2021-11-14"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"     * adding the \"[T]\" in front of the description","lastModifiedDate":"2021-11-14"},{"lineNumber":19,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":20,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":21,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"WhasabiQ"},"content":"    public String toString() {","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"WhasabiQ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"WhasabiQ"},"content":"","lastModifiedDate":"2021-11-14"},{"lineNumber":27,"author":{"gitId":"WhasabiQ"},"content":"    /**","lastModifiedDate":"2021-11-14"},{"lineNumber":28,"author":{"gitId":"WhasabiQ"},"content":"     * Overriding the Parent class\u0027s toString.","lastModifiedDate":"2021-11-14"},{"lineNumber":29,"author":{"gitId":"WhasabiQ"},"content":"     * To format the ToDos tasks into a string format in the preferred separator.","lastModifiedDate":"2021-11-14"},{"lineNumber":30,"author":{"gitId":"WhasabiQ"},"content":"     * Used for Saving purposes.","lastModifiedDate":"2021-11-14"},{"lineNumber":31,"author":{"gitId":"WhasabiQ"},"content":"     *","lastModifiedDate":"2021-11-14"},{"lineNumber":32,"author":{"gitId":"WhasabiQ"},"content":"     * @param separator String","lastModifiedDate":"2021-11-14"},{"lineNumber":33,"author":{"gitId":"WhasabiQ"},"content":"     * @return String value","lastModifiedDate":"2021-11-14"},{"lineNumber":34,"author":{"gitId":"WhasabiQ"},"content":"     */","lastModifiedDate":"2021-11-14"},{"lineNumber":35,"author":{"gitId":"WhasabiQ"},"content":"    @Override","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"WhasabiQ"},"content":"    public String toStringSaveTask(String separator ){","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"WhasabiQ"},"content":"        separator \u003d \" \" + separator + \" \";","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"WhasabiQ"},"content":"        return \"T\" +separator+ super.toStringSaveTask(separator);","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"WhasabiQ"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"WhasabiQ"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"WhasabiQ":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"WhasabiQ"},"content":"REM run the program, feed dukeMain.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-11-13"},{"lineNumber":18,"author":{"gitId":"WhasabiQ"},"content":"java -classpath ..\\bin dukeMain.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-11-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WhasabiQ":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"WhasabiQ"},"content":"# run the program, feed dukeMain.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-11-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WhasabiQ":1,"-":37}}]
