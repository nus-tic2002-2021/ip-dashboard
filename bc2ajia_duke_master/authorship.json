[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"4. Duke is released under an MIT license.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"4. Duke is part of https://se-education.org","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 8469194969b7fb8dd1f726e12cf9097fc39c74a8","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"bc2ajia":3,"-":26}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"    archiveVersion \u003d \"V0.2\"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bc2ajia":18,"-":45}},{"path":"src/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"todo [ ] buy book","lastModifiedDate":"2021-11-13"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"deadline [√] return book /by 2 Feb 2022, 19:00","lastModifiedDate":"2021-11-13"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"event [ ] meeting /at 2 Feb 2022, 20:00","lastModifiedDate":"2021-11-13"}],"authorContributionMap":{"bc2ajia":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    private Label dialog;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    DialogBox(String text, Image img) {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"view/DialogBox.fxml\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"        this.setMinHeight(this.dialog.getMinHeight());","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"    private void flip() {","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"     * Retrieves font.","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"    public void getFont(String fontName, int size) {","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"        InputStream is \u003d Main.class.getResourceAsStream(fontName);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"        Font font \u003d  Font.loadFont(getClass().getResourceAsStream(fontName), 21);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"        this.dialog.setFont(font);","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"     * Gets the dialog box.","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"        db.getFont(\"fonts/Calibri.ttf\", 28);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"        return db;","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"     * Gets the dialog box.","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"        db.flip();","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"        db.getFont(\"fonts/Calibri.ttf\", 28);","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"        return db;","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":76}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"import command.Command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.*;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * The duke class is the main class of the program","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    private final Storage storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    private final Ui ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    public Duke() {","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"        String filePath \u003d \"src/data/tasks.txt\";","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"            taskList \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"            ui.exceptionMessage(e);","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"            ui.exceptionMessage(e);","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"            taskList \u003d new TaskList(storage.readFromFile());","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"            ui.exceptionMessage(e);","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"            ui.exceptionMessage(e);","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"    public void run() {","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"        Ui.Welcome();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"        while(!isExit){","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"            try {","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"                String userInput \u003d ui.userInput();","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"                ui.Separator();","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"                Command c \u003d Parser.parse(userInput, taskList);","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"            } catch (DukeException | IOException e){","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"                ui.errorMessage(e);","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"            } finally {","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"                ui.Separator();","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"     * The method is used to capture the ui messages and show on the GUI","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"     * @param input is the user input from GUI","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"     * @return string of ui messages","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"    public String dukeReply(String input) {","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"            Command c \u003d Parser.parse(input, taskList);","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"            ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"            System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"            return outContent.toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"bc2ajia"},"content":"            return e.getMessage();","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"bc2ajia"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"bc2ajia"},"content":"            StringWriter errors \u003d new StringWriter();","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"bc2ajia"},"content":"            e.printStackTrace(new PrintWriter(errors));","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"bc2ajia"},"content":"            return errors.toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"bc2ajia"},"content":"    public static void main(String[] args){","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"bc2ajia"},"content":"        new Duke(\"src/data/tasks.txt\").run();","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":85,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":" * A launcher object to launch the GUI.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"public class Launcher {","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"} ","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":11}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"public class Main extends Application {","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"            stage.setTitle(\"Duke, the Task Manager\");","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"            stage.show();","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    private TextField userInput;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    private Button sendButton;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    private Duke duke;","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"    private String welcome \u003d (\"Hi, I\u0027m Duke \"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"            +\"How to interact with me: \\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tCommand:            Function:\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tlist                 View all existing tasks\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"            +\"\\ttodo                 Add a new to-do\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tdeadline            Add a new deadline\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tevent               Add a new event\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tdone                Mark a task as completed [√]\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tdelete             Delete a task\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tsearch              Search tasks by keyword\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tview                Check schedule of a date\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"            +\"\\thelp                Show help message\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"            +\"\\treset               Delete all tasks\"+ System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"            +\"\\tbye                 Exit the program\");","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"     * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"    public void initialize() {","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"        VBox.setVgrow(scrollPane, javafx.scene.layout.Priority.ALWAYS);","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage));","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"        duke \u003d d;","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"        String response \u003d duke.dukeReply(input);","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"        );","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"        userInput.clear();","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"            pause.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"            pause.play();","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":78}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Task;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * An AddCommand object contains a local variable task to be added","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    Task task;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    public AddCommand(Task task){","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"     * The execute method performs add the task to the task list when called.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @param storage to write change to task.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"        storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        ui.printAddCommand(taskList);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskCount(taskList);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":35}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" * An ByeCommand make use of inherited class variable isExit","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"     * The execute method changes exit status to true when called.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"     * @param storage not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"        ui.goodBye();","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"        super.setExit(true);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":24}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-13"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * Parent class of all executable commands","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"public abstract class Command {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    public Command(){}","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    public Command(String str){ System.out.println(str);}","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * abstract method to be implemented by children class","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     * @param storage to read and write change to task.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"    public void setExit(boolean exit){","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        isExit \u003d exit;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"        return isExit;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bc2ajia":38}},{"path":"src/main/java/command/CommandCollections.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":" * An enumeration class of all executable commands","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"public enum CommandCollections {","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"    LIST, TODO, DEADLINE, EVENT, DONE, DELETE, BYE, VIEW, SEARCH, HELP, RESET","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"bc2ajia":8}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" * An AddCommand object contains a local variable command which specifies the task to be deleted","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    String[] command;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    public DeleteCommand(String[] command){","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"     * The execute method performs delete the task to the task list when called.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param storage to write change to task.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"        int taskNumber \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"        ui.printDelete(taskNumber,taskList);","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"        taskList.removeTask(taskNumber);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskCount(taskList);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":33}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" * An DoneCommand object contains a local variable command which specifies the task to be set as done","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    String[] command;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    public DoneCommand(String[] command){","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"     * The execute method performs setting task status to done.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param storage to write change to task.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"        int taskNumber \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"        taskList.get(taskNumber).setDone(true);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"        ui.printDone(taskNumber, taskList);","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskCount(taskList);","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":34}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * An HelpCommand object displays the help message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"     * The execute method displays the help message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"     * @param storage not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"        ui.howToUse();","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":25}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * Any unrecognized command will be handled by this class","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    private final String errorMsg;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    public InvalidCommand(String errorMsg){","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"        this.errorMsg \u003d errorMsg;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"     * The execute method displays the error message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @param storage not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"        throw new DukeException(errorMsg);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":30}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" * An ListCommand object list down all the tasks in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"     * The execute method perform listing all tasks in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"     * @param storage not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskList(taskList);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskListStr(taskList);","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":25}},{"path":"src/main/java/command/ResetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * The ResetCommand object clears all task in list","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" * and prints out the current task count","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":" * and writes the change to tasks.txt file","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"public class ResetCommand extends Command{","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"     * The execute method perform deleting all tasks in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"     * @param storage to write change to task.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"        if (ui.validateResetCommand()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"            taskList.reset();","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"            ui.printReset();","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"            ui.printTaskCount(taskList);","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"            storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        } else {","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"            ui.printNotReset();","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":35}},{"path":"src/main/java/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * The SearchCommand object holds local variable keyword","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" * which is used to find relevant tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":" * and prints out the current task count","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"public class SearchCommand extends Command{","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    String keyword;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    public SearchCommand(String keyword){ this.keyword \u003d keyword;}","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * The execute method display a list of tasks containing keywords.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     * @param storage not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"        TaskList taskByKeyword \u003d taskList.getTaskByKeyword(keyword, taskList);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskList(taskByKeyword);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskByKeyword(taskByKeyword,keyword);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"bc2ajia":34}},{"path":"src/main/java/command/ViewCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package command;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import storage.Storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":" * An ViewCommand object holds local variable date","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" * which is used to find relevant tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    LocalDate date;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    public ViewCommand(LocalDate date){","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * The execute method display a list of tasks on date given.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     * @param ui to print out message on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"     * @param storage not used here","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file not found","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"        TaskList taskByDate \u003d taskList.getTaskByDate(date, taskList);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskList(taskByDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        ui.printTaskOfDate(taskByDate, date);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"bc2ajia":33}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package exception;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":" * The class extends the exceptions from IllegalArgumentException","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"public class DukeException extends IllegalArgumentException{","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"    public DukeException(String s) {","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"        super(s);","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bc2ajia":10}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import command.*;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Deadline;","lastModifiedDate":"2021-11-13"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Event;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-13"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Todo;","lastModifiedDate":"2021-11-13"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import ui.Ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":" * The \u003ccode\u003eParser\u003c/code\u003e class contains methods to parse the user command into required actions.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"public class Parser {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"     * \u003ccode\u003ecommandToArray\u003c/code\u003e method splits user input to an array of Strings.","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * @param text is the user input","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @return an array of Strings","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    public static String[] commandToArray(String text) {","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"        return text.split(\" \",2);","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"     *The parseDate method returns LocalDate object from user input","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"     * @param command is the user input","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"     * @return LocalDate object date","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"     * @throws DateTimeParseException when input is not of pattern specified","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"    public static LocalDate parseDate(String[] command) throws DateTimeParseException {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"        LocalDate date;","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"        date \u003d LocalDate.parse(command[1], formatter);","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"        return date;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"     *The parseDateTime method returns LocalDateTime object from user input","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"     * @param command is the user input","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"     * @return LocalDateTime object dateTime","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"     * @throws DateTimeParseException when input is not of pattern specified","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"    public static LocalDateTime parseDateTime(String[] command) throws DateTimeParseException {","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"        dateTime \u003d LocalDateTime.parse(command[1].split(\" /by | /at \")[1], formatter);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"        return dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"     *Since the user input and tasks.txt file are of different pattern.","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"     * The parseDateTime method returns LocalDateTime object from tasks.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"     * @param command is a line in tasks.txt","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"     * @return LocalDateTime object dateTime","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"     * @throws DateTimeParseException when input is not of pattern specified","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"    public static LocalDateTime parseDateTimeFromFile(String[] command) throws DateTimeParseException {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT);","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"        LocalDateTime dateTimeFromFile;","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"        dateTimeFromFile \u003d LocalDateTime.parse(command[1].split(\" /by | /at \")[1], formatter);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"        return dateTimeFromFile;","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"     * \u003ccode\u003eparse\u003c/code\u003e method parses user input to corresponding functions of the program","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"     * @param text is the user input","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the list of tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"     * @return a command object for corresponding functions of the program","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"     * @throws IllegalArgumentException when user command is not included in the CommandCollection Enum Class","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"    public static Command parse(String text, TaskList taskList) throws IllegalArgumentException{","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"bc2ajia"},"content":"        assert text !\u003d null : \"Command cannot be null\";","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"bc2ajia"},"content":"        String[] command \u003d commandToArray(text);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"bc2ajia"},"content":"        String instruction \u003d command[0].toUpperCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"bc2ajia"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"bc2ajia"},"content":"        CommandCollections commandCollections;","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"bc2ajia"},"content":"            commandCollections \u003d CommandCollections.valueOf(instruction);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"bc2ajia"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"bc2ajia"},"content":"            return new InvalidCommand(\"Sorry. I can\u0027t understand [\"+ command[0] +\"] yet. Please try again or type [help].\");","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"bc2ajia"},"content":"        switch (commandCollections) {","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"bc2ajia"},"content":"        case EVENT:","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"bc2ajia"},"content":"            try{","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"bc2ajia"},"content":"                Ui.validateEventCommand(command);","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"bc2ajia"},"content":"                dateTime \u003d parseDateTime(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"bc2ajia"},"content":"                return new AddCommand(new Event(text,dateTime));","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"bc2ajia"},"content":"            }catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"bc2ajia"},"content":"                return new InvalidCommand(Ui.validateDateTime());","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"bc2ajia"},"content":"        case TODO:","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"bc2ajia"},"content":"            Ui.validateTodoCommand(command);","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"bc2ajia"},"content":"            return new AddCommand(new Todo(text));","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"bc2ajia"},"content":"        case DEADLINE:","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"bc2ajia"},"content":"            try{","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"bc2ajia"},"content":"                Ui.validateDeadlineCommand(command);","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"bc2ajia"},"content":"                dateTime \u003d parseDateTime(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"bc2ajia"},"content":"                return new AddCommand(new Deadline(text,dateTime));","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"bc2ajia"},"content":"            }catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"bc2ajia"},"content":"                return new InvalidCommand(Ui.validateDateTime());","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"bc2ajia"},"content":"        case LIST:","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"bc2ajia"},"content":"            return new ListCommand();","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"bc2ajia"},"content":"        case DONE:","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"bc2ajia"},"content":"            Ui.validateDoneCommand(command, taskList);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"bc2ajia"},"content":"            return new DoneCommand(command);","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"bc2ajia"},"content":"        case DELETE:","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"bc2ajia"},"content":"            Ui.validateDoneCommand(command, taskList);","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"bc2ajia"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"bc2ajia"},"content":"        case VIEW:","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"bc2ajia"},"content":"            try{","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"bc2ajia"},"content":"                Ui.validateViewCommand(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"bc2ajia"},"content":"                LocalDate date \u003d parseDate(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"bc2ajia"},"content":"                return new ViewCommand(date);","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"bc2ajia"},"content":"            }catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"bc2ajia"},"content":"                return new InvalidCommand(\"Please enter datetime in the format of \u0027d/M/yyyy\u0027\");","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"bc2ajia"},"content":"        case SEARCH:","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"bc2ajia"},"content":"            Ui.validateSearchCommand(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"bc2ajia"},"content":"            String keyword \u003d command[1];","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"bc2ajia"},"content":"            return new SearchCommand(keyword);","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"bc2ajia"},"content":"        case HELP:","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"bc2ajia"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"bc2ajia"},"content":"        case RESET:","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"bc2ajia"},"content":"            return new ResetCommand();","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"bc2ajia"},"content":"        case BYE:","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"bc2ajia"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"bc2ajia"},"content":"        default:","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"bc2ajia"},"content":"            return new InvalidCommand(\"\");","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bc2ajia":141}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Deadline;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Event;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Task;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import tasklist.Todo;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"import java.io.File;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"import static parser.Parser.commandToArray;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":" * The storage class handles the read and write function","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":" *  read and write tasks list to and from the task.txt file","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"public class Storage {","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"    protected String filePath;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    public Storage (String filePath){","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    public String getFilePath(){return filePath;}","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"     * The method writes any changes to the task list to the tasks.txt file","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"     * @throws IOException when file or directory is not found","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"    public void writeToFile(ArrayList \u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"        File dir \u003d file.getParentFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"        if(!file.exists()){","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"            if(!dir.exists()){","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"                dir.mkdirs();","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"            file.createNewFile();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"        for(Task task : taskList){","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"            String toText \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"            String isDone \u003d task.isDone() ? \"√\" : \" \";","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"            switch (type){","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"                case \"T\":","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"                    toText \u003d \"todo [\" + isDone + \"] \" + description + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"                    break;","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"                case \"D\":","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"                    toText \u003d \"deadline [\" + isDone + \"] \" + description +\"/by \" + task.getDateTimeStr() + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"                    break;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"                case \"E\":","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"                    toText \u003d \"event [\" + isDone + \"] \" + description +\"/at \" + task.getDateTimeStr()+ System.getProperty(\"line.separator\");","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"                    break;","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"            assert toText !\u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"            fw.write(toText);","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"        fw.close();","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"     * The method reads the task list from the tasks.txt file","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"     * @throws FileNotFoundException when file or directory is not found","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"bc2ajia"},"content":"    public ArrayList\u003cTask\u003e readFromFile() throws FileNotFoundException {","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"bc2ajia"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"bc2ajia"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"bc2ajia"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"bc2ajia"},"content":"        while(sc.hasNext()){","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"bc2ajia"},"content":"            String text \u003d sc.nextLine();","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"bc2ajia"},"content":"            String parseText \u003d text.replaceAll(\" \\\\[.*?\\\\] \", \" \");","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"bc2ajia"},"content":"            boolean isDone \u003d text.contains(\"√\");","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"bc2ajia"},"content":"            String[] command \u003d commandToArray(parseText);","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"bc2ajia"},"content":"            String keyword \u003d command[0];","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"bc2ajia"},"content":"            LocalDateTime dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"bc2ajia"},"content":"            Task task;","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"bc2ajia"},"content":"            if(keyword.equals(\"todo\")){","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"bc2ajia"},"content":"                task \u003d new Todo(parseText);","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"bc2ajia"},"content":"                task.setDone(isDone);","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"bc2ajia"},"content":"            else if(keyword.equals(\"deadline\")){","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"bc2ajia"},"content":"                dateTime \u003d Parser.parseDateTimeFromFile(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"bc2ajia"},"content":"                task \u003d new Deadline(parseText, dateTime);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"bc2ajia"},"content":"                task.setDone(isDone);","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"bc2ajia"},"content":"            else{","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"bc2ajia"},"content":"                dateTime \u003d Parser.parseDateTimeFromFile(command);","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"bc2ajia"},"content":"                task \u003d new Event(parseText, dateTime);","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"bc2ajia"},"content":"                task.setDone(isDone);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"bc2ajia"},"content":"            taskList.add(task);","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"bc2ajia"},"content":"        return taskList;","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":108}},{"path":"src/main/java/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package tasklist;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":" * An Deadline object holds deadline type of task which contains LocalDateTime variable","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":" *","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    public Deadline(String description, LocalDateTime dateTime){","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"        super(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    public String getDescription() {return description.substring(9,description.indexOf(\u0027/\u0027));}","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    public  String getDateTimeStr() {","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"        return dateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    public LocalDateTime getDateTime(){return dateTime;}","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"    public String printTask (){","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        return \"[\" + getType() +\"]\" + \"[\" + getStatusIcon() +\"] \" + getDescription() + \"(by: \" + getDateTimeStr() + \")\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"    public String[] getKeyword (){","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"        return description.split(\"/by\");","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"bc2ajia":37}},{"path":"src/main/java/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package tasklist;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":" * An Event object holds event type of task which contains LocalDateTime variable","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":" *","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    public Event(String description, LocalDateTime dateTime){","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"        super(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    public String getDescription() {return description.substring(6,description.indexOf(\u0027/\u0027));}","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    public String getDateTimeStr() {","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"        return dateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    public LocalDateTime getDateTime(){return dateTime;}","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    public String printTask (){","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"        //print out every element in the array","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"        return \"[\" + getType() +\"]\" + \"[\" + getStatusIcon() +\"] \" + getDescription() + \"(at: \" + getDateTimeStr() + \")\";","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"    public String[] getKeyword (){","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"        return description.split(\"/at\");","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"bc2ajia":40}},{"path":"src/main/java/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package tasklist;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":" * A \u003ccode\u003eTask\u003c/code\u003e class is the parent class of all types of tasks","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"public class Task {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"    protected String description;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"    protected String type;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"     * Default task constructor","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"     * @param description parses from user input","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    public String getDescription() {return description;}","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    //isDone.Setter","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"    public void setDone(boolean isDone) {this.isDone \u003d isDone;}","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"    public boolean isDone() { return isDone; }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"    //isDone.Getter","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"        return (isDone ? \"√\" : \" \"); // mark done task with X","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"    public String getType(){return type;}","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"    public String getDateTimeStr(){","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"        return \"\";","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"    public LocalDateTime getDateTime(){return dateTime;}","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"    public String printTask(){return \"\";}","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"    public String[] getKeyword(){","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"        return description.split(\" \");","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"bc2ajia":49}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package tasklist;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-13"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":" * An TaskList object holds an arraylist of tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"public class TaskList {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    public TaskList() {","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    public void addTask (Task t) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"        taskList.add(t);","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    public void removeTask (int i)  {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"        taskList.remove(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    public void reset() {","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"        taskList.clear();","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"    public int size() {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"        return taskList.size();","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"        return taskList.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"        return taskList;","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"    public boolean contains(Task t){return taskList.contains(t);}","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"     * The method searches task in the taskList of the date given","lastModifiedDate":"2021-11-13"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"     * @param date user specified date parameter","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"     * @return another list of task of the date given","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"     * @throws IndexOutOfBoundsException when the index is out of bounds","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"    public TaskList getTaskByDate(LocalDate date, TaskList taskList) throws IndexOutOfBoundsException{","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"        TaskList taskByDate \u003d new TaskList();","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"            boolean isDeadline \u003d taskList.get(i).getType().equals(\"D\");","lastModifiedDate":"2021-11-13"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"            boolean isEvent \u003d taskList.get(i).getType().equals(\"E\");","lastModifiedDate":"2021-11-13"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"            if (isDeadline || isEvent) {","lastModifiedDate":"2021-11-13"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"                boolean matchesDate \u003d taskList.get(i).getDateTime().toLocalDate().equals(date);","lastModifiedDate":"2021-11-13"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"                if(matchesDate) {","lastModifiedDate":"2021-11-13"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"                    taskByDate.addTask(taskList.get(i));","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"                }","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"        return taskByDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"     * The method searches task in the taskList of the keyword given","lastModifiedDate":"2021-11-13"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"     * @param keyword user specified keyword parameter","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"     * @param taskList is the task list","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"     * @return another list of task of the keyword given","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"     * @throws IndexOutOfBoundsException when the index is out of bounds","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"    public TaskList getTaskByKeyword (String keyword, TaskList taskList) throws IndexOutOfBoundsException{","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"bc2ajia"},"content":"        TaskList taskByKeyword \u003d new TaskList();","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"bc2ajia"},"content":"        String[] keywordInTask;","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"bc2ajia"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++){","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"bc2ajia"},"content":"            boolean isDeadline \u003d taskList.get(i).getType().equals(\"D\");","lastModifiedDate":"2021-11-13"},{"lineNumber":81,"author":{"gitId":"bc2ajia"},"content":"            boolean isEvent \u003d taskList.get(i).getType().equals(\"E\");","lastModifiedDate":"2021-11-13"},{"lineNumber":82,"author":{"gitId":"bc2ajia"},"content":"            if (isDeadline || isEvent) {","lastModifiedDate":"2021-11-13"},{"lineNumber":83,"author":{"gitId":"bc2ajia"},"content":"                keywordInTask \u003d taskList.get(i).getKeyword()[0].split(\" \");","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"bc2ajia"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"bc2ajia"},"content":"                keywordInTask \u003d taskList.get(i).getKeyword();","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"bc2ajia"},"content":"            keywordInTask \u003d Arrays.copyOfRange(keywordInTask, 1, keywordInTask.length);","lastModifiedDate":"2021-11-13"},{"lineNumber":88,"author":{"gitId":"bc2ajia"},"content":"            for (String s : keywordInTask){","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"bc2ajia"},"content":"                boolean isInList \u003dtaskByKeyword.contains(taskList.get(i));","lastModifiedDate":"2021-11-13"},{"lineNumber":90,"author":{"gitId":"bc2ajia"},"content":"                boolean containsKeyword \u003d s.contains(keyword);","lastModifiedDate":"2021-11-13"},{"lineNumber":91,"author":{"gitId":"bc2ajia"},"content":"                boolean containsString \u003d keyword.contains(s);","lastModifiedDate":"2021-11-13"},{"lineNumber":92,"author":{"gitId":"bc2ajia"},"content":"                boolean containsEachOther \u003d containsKeyword || containsString;","lastModifiedDate":"2021-11-13"},{"lineNumber":93,"author":{"gitId":"bc2ajia"},"content":"                if (containsEachOther \u0026\u0026 !isInList) {","lastModifiedDate":"2021-11-13"},{"lineNumber":94,"author":{"gitId":"bc2ajia"},"content":"                    taskByKeyword.addTask(taskList.get(i));","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"bc2ajia"},"content":"                }","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"bc2ajia"},"content":"        return taskByKeyword;","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"bc2ajia":100}},{"path":"src/main/java/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package tasklist;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":" * An Todo object holds todo type of task which does not contains date and time.","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":" *","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"    public Todo(String description){","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"        super(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    public String getDescription() {return description.substring(5);}","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    public String printTask (){","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"            return \"[\" + getType() +\"]\" + \"[\" + getStatusIcon() +\"] \" + getDescription();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    public String[] getKeyword (){","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"        return description.split(\" \");","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"bc2ajia":23}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package ui;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import exception.DukeException;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":" * Ui Class contains all the interacting messages to be displayed on screen","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":" *","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"public class Ui {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    private static final String SEPARATOR \u003d \"___________________________________________________________________________\";","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"     * The method reads the user input and convert to string","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"     * @return String user input","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"    public String userInput(){","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"        return in.nextLine();","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"     * Welcome message template on start up","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"    public static void Welcome (){","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"        _..._\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"                \"      .\u0027     \u0027.      _\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"                \"     /    .-\\\"\\\"-\\\\   _/ \\\\\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"                \"   .-|   /:.   |  |   |\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"                \"   |  \\\\  |:.   /.-\u0027-./\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"                \"   | .-\u0027-;:__.\u0027    \u003d/\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"                \"   .\u0027\u003d  *\u003d|DUKE _.\u003d\u0027\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"bc2ajia"},"content":"                \"  /   _.  |    ;\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"bc2ajia"},"content":"                \" ;-.-\u0027|    \\\\   |\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"bc2ajia"},"content":"                \"/   | \\\\    _\\\\  _\\\\\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"bc2ajia"},"content":"                \"\\\\__/\u0027._;.  \u003d\u003d\u0027 \u003d\u003d\\\\\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"bc2ajia"},"content":"                \"         \\\\    \\\\   |\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"bc2ajia"},"content":"                \"         /    /   /\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"bc2ajia"},"content":"                \"         /-._/-._/\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"bc2ajia"},"content":"                \"         \\\\   `\\\\  \\\\\" + \"\\t\\tAye there. I\u0027m DUKE.\\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"bc2ajia"},"content":"                \"          `-._/._/\" + \"\\t\\tHow can i help you?\");","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"___^/\\\\___^--____/\\\\____O______________/\\\\/\\\\---/\\\\___________---______________ \\n\" +","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"bc2ajia"},"content":"                \"   /\\\\^   ^  ^    ^                  ^^ ^  \u0027\\\\ ^          ^       ---         \");","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"bc2ajia"},"content":"        howToUse();","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"bc2ajia"},"content":"     * Help message template","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"bc2ajia"},"content":"    public static void howToUse(){","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"How to interact with me: \\n\");","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Command:        Function:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"list            View all existing tasks\");","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"todo            Add a new to-do\");","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"deadline        Add a new deadline\");","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"event           Add a new event\");","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"done            Mark a task as completed [√]\");","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"delete          Delete a task\");","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"search          Search tasks by keyword\");","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"view            Check schedule of a date\");","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"help            Show help message\");","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"reset           Delete all tasks\");","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"bye             Exit the program\");","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"bc2ajia"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"bc2ajia"},"content":"     * End message template","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"bc2ajia"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"bc2ajia"},"content":"    public static void goodBye (){","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Bye. Hope to see you again soon.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"bc2ajia"},"content":"    public void errorMessage (Exception e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"bc2ajia"},"content":"    public void exceptionMessage (Exception e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"bc2ajia"},"content":"        System.err.println(e.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"bc2ajia"},"content":"    public static void validateEventCommand(String[] command) {","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"bc2ajia"},"content":"        if (command.length \u003c 2 || command[1].equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! The description of a event cannot be empty. Please re-enter:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"bc2ajia"},"content":"        } else if (!command[1].contains(\"/at\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! The date of a event cannot be empty. Please re-enter:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"bc2ajia"},"content":"    public static void validateDeadlineCommand(String[] command) {","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"bc2ajia"},"content":"        if (command.length \u003c 2 || command[1].equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! The description of a deadline cannot be empty. Please re-enter:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"bc2ajia"},"content":"        } else if (!command[1].contains(\"/by\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! The date of a deadline cannot be empty. Please re-enter:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"bc2ajia"},"content":"    public static void validateTodoCommand(String[] command) {","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"bc2ajia"},"content":"        if (command.length \u003c 2 || command[1].equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! The description of a todo cannot be empty. Please re-enter:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"bc2ajia"},"content":"    public void Separator() {System.out.println(SEPARATOR);}","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"bc2ajia"},"content":"    public void printAddCommand(TaskList taskList){","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"\\t\"+taskList.get(taskList.size()-1).printTask());","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"bc2ajia"},"content":"    public void printTaskList(TaskList taskList) throws NullPointerException{","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"bc2ajia"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"bc2ajia"},"content":"            System.out.println(\"List is empty. Please add new task.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"bc2ajia"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"bc2ajia"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"bc2ajia"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"bc2ajia"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + taskList.get(i).printTask());","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"bc2ajia"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"bc2ajia"},"content":"    public static void validateDoneCommand(String[] command, TaskList taskList){","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"bc2ajia"},"content":"        if (command.length \u003c 2 || command[1].equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"Please state task number.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"bc2ajia"},"content":"        int taskNumber  \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"bc2ajia"},"content":"        if (taskNumber \u003e\u003d taskList.size() || taskNumber \u003c 0 ) {","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"The task number is not valid.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"bc2ajia"},"content":"    public void printDone(int i, TaskList taskList){","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"\\t\"+taskList.get(i).printTask());","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"bc2ajia"},"content":"    public void printDelete(int i, TaskList taskList){","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"\\t\"+taskList.get(i).printTask());","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"bc2ajia"},"content":"    public void printTaskCount(TaskList taskList){","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Now you have total \" + (taskList.size()) +\" tasks in the list.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"bc2ajia"},"content":"    public void printTaskListStr(TaskList taskList) {","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"You have total \" + (taskList.size()) + \" tasks in the list.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"bc2ajia"},"content":"    public void printTaskOfDate(TaskList taskList, LocalDate date){","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"You have total \" + (taskList.size()) +\" tasks on \" + date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM))+\".\");","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"bc2ajia"},"content":"    public static String validateDateTime(){","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"bc2ajia"},"content":"        return \"Task cannot be added. \\n\" +","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"bc2ajia"},"content":"                \"Please enter datetime in the format of \u0027d/M/yyyy HHmm\u0027\";","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"bc2ajia"},"content":"    public static void validateViewCommand(String[] command){","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"bc2ajia"},"content":"        if (command.length \u003c 2) {","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! The date cannot be empty. Please re-enter:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"bc2ajia"},"content":"    public static void validateSearchCommand(String[] command){","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"bc2ajia"},"content":"        if (command.length \u003c 2 || command[1].equals(\"\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"bc2ajia"},"content":"            throw new DukeException(\"OOPS! Please specify keyword:\");","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"bc2ajia"},"content":"    public void printTaskByKeyword(TaskList taskList, String keyword){","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"You have total \" + (taskList.size()) +\" tasks related to \u003c\" + keyword +\"\u003e.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"bc2ajia"},"content":"    public void printReset(){","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Your task list has been reset. Please add new task.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":187,"author":{"gitId":"bc2ajia"},"content":"    public void printNotReset(){System.out.println(\"No worries, your task list remain unchanged.\");}","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"bc2ajia"},"content":"    public boolean validateResetCommand(){","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"bc2ajia"},"content":"        boolean b \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"bc2ajia"},"content":"        System.out.println(\"Heads up! You are about to reset your task list. Type \\\"confirm\\\" to continue.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"bc2ajia"},"content":"        String confirm \u003d in.nextLine();","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"bc2ajia"},"content":"        if (confirm.equalsIgnoreCase(\"confirm\")){","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"bc2ajia"},"content":"            b \u003d true;","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"bc2ajia"},"content":"        return b;","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"bc2ajia":198}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"800.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"    \u003cURL value\u003d\"@DialogBox.css\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"550.0\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"      \u003cfont\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"        \u003cFont size\u003d\"21.0\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"      \u003c/font\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    \u003cHBox.margin\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"      \u003cInsets bottom\u003d\"0.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"    \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"624.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"624.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"176.0\" text\u003d\"Send\" textFill\u003d\"white\" style\u003d\"-fx-font-weight: bold\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"bc2ajia":23}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bc2ajia"},"content":"package storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"bc2ajia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"bc2ajia"},"content":"import tasklist.*;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"bc2ajia"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"bc2ajia"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"bc2ajia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"bc2ajia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"bc2ajia"},"content":"public class StorageTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"bc2ajia"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"bc2ajia"},"content":"    public void constructor() {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"bc2ajia"},"content":"        Storage s \u003d new Storage(\"src/data/test.txt\");","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"bc2ajia"},"content":"        assertEquals(\"src/data/test.txt\", s.getFilePath());","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"bc2ajia"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"bc2ajia"},"content":"    public void readFromFile() {","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"bc2ajia"},"content":"        Storage s \u003d new Storage(\"src/data/test.txt\");","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"bc2ajia"},"content":"            ArrayList\u003cTask\u003e tasks \u003d s.readFromFile();","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"bc2ajia"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"bc2ajia"},"content":"            assertEquals(new FileNotFoundException().getMessage(), e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"bc2ajia"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"bc2ajia"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"bc2ajia"},"content":"    public void writeToFile() {","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"bc2ajia"},"content":"        Storage s \u003d new Storage(\"src/data/test.txt\");","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"bc2ajia"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"bc2ajia"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"bc2ajia"},"content":"            s.writeToFile(tasks);","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"bc2ajia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"bc2ajia"},"content":"            assertEquals(new IOException().getMessage(), e.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"bc2ajia"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"bc2ajia"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"bc2ajia"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"bc2ajia":39}}]
